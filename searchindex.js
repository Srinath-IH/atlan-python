Search.setIndex({"docnames": ["asset/accesscontrol", "asset/adls", "asset/adlsaccount", "asset/adlscontainer", "asset/adlsobject", "asset/airflow", "asset/airflowdag", "asset/airflowtask", "asset/api", "asset/apipath", "asset/apispec", "asset/asset", "asset/atlasglossary", "asset/atlasglossarycategory", "asset/atlasglossaryterm", "asset/authpolicy", "asset/authservice", "asset/aws", "asset/azure", "asset/azureeventhub", "asset/azureeventhubconsumergroup", "asset/badge", "asset/bi", "asset/biprocess", "asset/calculationview", "asset/catalog", "asset/cloud", "asset/cognite", "asset/cognite3dmodel", "asset/cogniteasset", "asset/cogniteevent", "asset/cognitefile", "asset/cognitesequence", "asset/cognitetimeseries", "asset/collection", "asset/column", "asset/columnprocess", "asset/connection", "asset/cube", "asset/cubedimension", "asset/cubefield", "asset/cubehierarchy", "asset/database", "asset/datacontract", "asset/datadomain", "asset/datamesh", "asset/dataproduct", "asset/dataquality", "asset/dataset", "asset/datastudio", "asset/datastudioasset", "asset/dbt", "asset/dbtcolumnprocess", "asset/dbtmetric", "asset/dbtmodel", "asset/dbtmodelcolumn", "asset/dbtprocess", "asset/dbtsource", "asset/dbttag", "asset/dbttest", "asset/domo", "asset/domocard", "asset/domodashboard", "asset/domodataset", "asset/domodatasetcolumn", "asset/dynamodb", "asset/dynamodbglobalsecondaryindex", "asset/dynamodblocalsecondaryindex", "asset/dynamodbsecondaryindex", "asset/dynamodbtable", "asset/eventstore", "asset/file", "asset/folder", "asset/function", "asset/gcs", "asset/gcsbucket", "asset/gcsobject", "asset/google", "asset/infrastructure", "asset/insight", "asset/kafka", "asset/kafkaconsumergroup", "asset/kafkatopic", "asset/link", "asset/looker", "asset/lookerdashboard", "asset/lookerexplore", "asset/lookerfield", "asset/lookerfolder", "asset/lookerlook", "asset/lookermodel", "asset/lookerproject", "asset/lookerquery", "asset/lookertile", "asset/lookerview", "asset/materialisedview", "asset/matillion", "asset/matillioncomponent", "asset/matilliongroup", "asset/matillionjob", "asset/matillionproject", "asset/mcincident", "asset/mcmonitor", "asset/metabase", "asset/metabasecollection", "asset/metabasedashboard", "asset/metabasequestion", "asset/metric", "asset/microstrategy", "asset/microstrategyattribute", "asset/microstrategycube", "asset/microstrategydocument", "asset/microstrategydossier", "asset/microstrategyfact", "asset/microstrategymetric", "asset/microstrategyproject", "asset/microstrategyreport", "asset/microstrategyvisualization", "asset/mode", "asset/modechart", "asset/modecollection", "asset/modequery", "asset/modereport", "asset/modeworkspace", "asset/mongodb", "asset/mongodbcollection", "asset/mongodbdatabase", "asset/montecarlo", "asset/multidimensionaldataset", "asset/namespace", "asset/nosql", "asset/objectstore", "asset/persona", "asset/powerbi", "asset/powerbicolumn", "asset/powerbidashboard", "asset/powerbidataflow", "asset/powerbidataset", "asset/powerbidatasource", "asset/powerbimeasure", "asset/powerbipage", "asset/powerbireport", "asset/powerbitable", "asset/powerbitile", "asset/powerbiworkspace", "asset/preset", "asset/presetchart", "asset/presetdashboard", "asset/presetdataset", "asset/presetworkspace", "asset/procedure", "asset/process", "asset/processexecution", "asset/purpose", "asset/qlik", "asset/qlikapp", "asset/qlikchart", "asset/qlikdataset", "asset/qliksheet", "asset/qlikspace", "asset/qlikstream", "asset/query", "asset/quicksight", "asset/quicksightanalysis", "asset/quicksightanalysisvisual", "asset/quicksightdashboard", "asset/quicksightdashboardvisual", "asset/quicksightdataset", "asset/quicksightdatasetfield", "asset/quicksightfolder", "asset/readme", "asset/readmetemplate", "asset/redash", "asset/redashdashboard", "asset/redashquery", "asset/redashvisualization", "asset/referenceable", "asset/resource", "asset/s3", "asset/s3bucket", "asset/s3object", "asset/saas", "asset/salesforce", "asset/salesforcedashboard", "asset/salesforcefield", "asset/salesforceobject", "asset/salesforceorganization", "asset/salesforcereport", "asset/schema", "asset/schemaregistry", "asset/schemaregistrysubject", "asset/sigma", "asset/sigmadataelement", "asset/sigmadataelementfield", "asset/sigmadataset", "asset/sigmadatasetcolumn", "asset/sigmapage", "asset/sigmaworkbook", "asset/sisense", "asset/sisensedashboard", "asset/sisensedatamodel", "asset/sisensedatamodeltable", "asset/sisensefolder", "asset/sisensewidget", "asset/snowflakedynamictable", "asset/snowflakepipe", "asset/snowflakestream", "asset/snowflaketag", "asset/soda", "asset/sodacheck", "asset/spark", "asset/sparkjob", "asset/sql", "asset/table", "asset/tableau", "asset/tableaucalculatedfield", "asset/tableaudashboard", "asset/tableaudatasource", "asset/tableaudatasourcefield", "asset/tableauflow", "asset/tableaumetric", "asset/tableauproject", "asset/tableausite", "asset/tableauworkbook", "asset/tableauworksheet", "asset/tablepartition", "asset/tag", "asset/tagattachment", "asset/thoughtspot", "asset/thoughtspotanswer", "asset/thoughtspotcolumn", "asset/thoughtspotdashlet", "asset/thoughtspotliveboard", "asset/thoughtspottable", "asset/thoughtspotview", "asset/thoughtspotworksheet", "asset/view", "assets", "cache/atlan_tag_cache", "cache/custom_metadata_cache", "cache/enum_cache", "cache/group_cache", "cache/role_cache", "cache/user_cache", "caches", "client", "events", "exceptions", "field/boolean_field", "field/custom_metadata_field", "field/keyword_field", "field/keyword_text_field", "field/keyword_text_stemmed_field", "field/numeric_field", "field/numeric_rank_field", "field/relation_field", "field/searchable_field", "field/text_field", "fields", "index", "other_model/atlan_image", "other_model/core", "other_model/custom_metadata", "other_model/group", "other_model/keycloak_events", "other_model/lineage", "other_model/role", "other_model/typedef", "other_model/user", "other_models"], "filenames": ["asset/accesscontrol.rst", "asset/adls.rst", "asset/adlsaccount.rst", "asset/adlscontainer.rst", "asset/adlsobject.rst", "asset/airflow.rst", "asset/airflowdag.rst", "asset/airflowtask.rst", "asset/api.rst", "asset/apipath.rst", "asset/apispec.rst", "asset/asset.rst", "asset/atlasglossary.rst", "asset/atlasglossarycategory.rst", "asset/atlasglossaryterm.rst", "asset/authpolicy.rst", "asset/authservice.rst", "asset/aws.rst", "asset/azure.rst", "asset/azureeventhub.rst", "asset/azureeventhubconsumergroup.rst", "asset/badge.rst", "asset/bi.rst", "asset/biprocess.rst", "asset/calculationview.rst", "asset/catalog.rst", "asset/cloud.rst", "asset/cognite.rst", "asset/cognite3dmodel.rst", "asset/cogniteasset.rst", "asset/cogniteevent.rst", "asset/cognitefile.rst", "asset/cognitesequence.rst", "asset/cognitetimeseries.rst", "asset/collection.rst", "asset/column.rst", "asset/columnprocess.rst", "asset/connection.rst", "asset/cube.rst", "asset/cubedimension.rst", "asset/cubefield.rst", "asset/cubehierarchy.rst", "asset/database.rst", "asset/datacontract.rst", "asset/datadomain.rst", "asset/datamesh.rst", "asset/dataproduct.rst", "asset/dataquality.rst", "asset/dataset.rst", "asset/datastudio.rst", "asset/datastudioasset.rst", "asset/dbt.rst", "asset/dbtcolumnprocess.rst", "asset/dbtmetric.rst", "asset/dbtmodel.rst", "asset/dbtmodelcolumn.rst", "asset/dbtprocess.rst", "asset/dbtsource.rst", "asset/dbttag.rst", "asset/dbttest.rst", "asset/domo.rst", "asset/domocard.rst", "asset/domodashboard.rst", "asset/domodataset.rst", "asset/domodatasetcolumn.rst", "asset/dynamodb.rst", "asset/dynamodbglobalsecondaryindex.rst", "asset/dynamodblocalsecondaryindex.rst", "asset/dynamodbsecondaryindex.rst", "asset/dynamodbtable.rst", "asset/eventstore.rst", "asset/file.rst", "asset/folder.rst", "asset/function.rst", "asset/gcs.rst", "asset/gcsbucket.rst", "asset/gcsobject.rst", "asset/google.rst", "asset/infrastructure.rst", "asset/insight.rst", "asset/kafka.rst", "asset/kafkaconsumergroup.rst", "asset/kafkatopic.rst", "asset/link.rst", "asset/looker.rst", "asset/lookerdashboard.rst", "asset/lookerexplore.rst", "asset/lookerfield.rst", "asset/lookerfolder.rst", "asset/lookerlook.rst", "asset/lookermodel.rst", "asset/lookerproject.rst", "asset/lookerquery.rst", "asset/lookertile.rst", "asset/lookerview.rst", "asset/materialisedview.rst", "asset/matillion.rst", "asset/matillioncomponent.rst", "asset/matilliongroup.rst", "asset/matillionjob.rst", "asset/matillionproject.rst", "asset/mcincident.rst", "asset/mcmonitor.rst", "asset/metabase.rst", "asset/metabasecollection.rst", "asset/metabasedashboard.rst", "asset/metabasequestion.rst", "asset/metric.rst", "asset/microstrategy.rst", "asset/microstrategyattribute.rst", "asset/microstrategycube.rst", "asset/microstrategydocument.rst", "asset/microstrategydossier.rst", "asset/microstrategyfact.rst", "asset/microstrategymetric.rst", "asset/microstrategyproject.rst", "asset/microstrategyreport.rst", "asset/microstrategyvisualization.rst", "asset/mode.rst", "asset/modechart.rst", "asset/modecollection.rst", "asset/modequery.rst", "asset/modereport.rst", "asset/modeworkspace.rst", "asset/mongodb.rst", "asset/mongodbcollection.rst", "asset/mongodbdatabase.rst", "asset/montecarlo.rst", "asset/multidimensionaldataset.rst", "asset/namespace.rst", "asset/nosql.rst", "asset/objectstore.rst", "asset/persona.rst", "asset/powerbi.rst", "asset/powerbicolumn.rst", "asset/powerbidashboard.rst", "asset/powerbidataflow.rst", "asset/powerbidataset.rst", "asset/powerbidatasource.rst", "asset/powerbimeasure.rst", "asset/powerbipage.rst", "asset/powerbireport.rst", "asset/powerbitable.rst", "asset/powerbitile.rst", "asset/powerbiworkspace.rst", "asset/preset.rst", "asset/presetchart.rst", "asset/presetdashboard.rst", "asset/presetdataset.rst", "asset/presetworkspace.rst", "asset/procedure.rst", "asset/process.rst", "asset/processexecution.rst", "asset/purpose.rst", "asset/qlik.rst", "asset/qlikapp.rst", "asset/qlikchart.rst", "asset/qlikdataset.rst", "asset/qliksheet.rst", "asset/qlikspace.rst", "asset/qlikstream.rst", "asset/query.rst", "asset/quicksight.rst", "asset/quicksightanalysis.rst", "asset/quicksightanalysisvisual.rst", "asset/quicksightdashboard.rst", "asset/quicksightdashboardvisual.rst", "asset/quicksightdataset.rst", "asset/quicksightdatasetfield.rst", "asset/quicksightfolder.rst", "asset/readme.rst", "asset/readmetemplate.rst", "asset/redash.rst", "asset/redashdashboard.rst", "asset/redashquery.rst", "asset/redashvisualization.rst", "asset/referenceable.rst", "asset/resource.rst", "asset/s3.rst", "asset/s3bucket.rst", "asset/s3object.rst", "asset/saas.rst", "asset/salesforce.rst", "asset/salesforcedashboard.rst", "asset/salesforcefield.rst", "asset/salesforceobject.rst", "asset/salesforceorganization.rst", "asset/salesforcereport.rst", "asset/schema.rst", "asset/schemaregistry.rst", "asset/schemaregistrysubject.rst", "asset/sigma.rst", "asset/sigmadataelement.rst", "asset/sigmadataelementfield.rst", "asset/sigmadataset.rst", "asset/sigmadatasetcolumn.rst", "asset/sigmapage.rst", "asset/sigmaworkbook.rst", "asset/sisense.rst", "asset/sisensedashboard.rst", "asset/sisensedatamodel.rst", "asset/sisensedatamodeltable.rst", "asset/sisensefolder.rst", "asset/sisensewidget.rst", "asset/snowflakedynamictable.rst", "asset/snowflakepipe.rst", "asset/snowflakestream.rst", "asset/snowflaketag.rst", "asset/soda.rst", "asset/sodacheck.rst", "asset/spark.rst", "asset/sparkjob.rst", "asset/sql.rst", "asset/table.rst", "asset/tableau.rst", "asset/tableaucalculatedfield.rst", "asset/tableaudashboard.rst", "asset/tableaudatasource.rst", "asset/tableaudatasourcefield.rst", "asset/tableauflow.rst", "asset/tableaumetric.rst", "asset/tableauproject.rst", "asset/tableausite.rst", "asset/tableauworkbook.rst", "asset/tableauworksheet.rst", "asset/tablepartition.rst", "asset/tag.rst", "asset/tagattachment.rst", "asset/thoughtspot.rst", "asset/thoughtspotanswer.rst", "asset/thoughtspotcolumn.rst", "asset/thoughtspotdashlet.rst", "asset/thoughtspotliveboard.rst", "asset/thoughtspottable.rst", "asset/thoughtspotview.rst", "asset/thoughtspotworksheet.rst", "asset/view.rst", "assets.rst", "cache/atlan_tag_cache.rst", "cache/custom_metadata_cache.rst", "cache/enum_cache.rst", "cache/group_cache.rst", "cache/role_cache.rst", "cache/user_cache.rst", "caches.rst", "client.rst", "events.rst", "exceptions.rst", "field/boolean_field.rst", "field/custom_metadata_field.rst", "field/keyword_field.rst", "field/keyword_text_field.rst", "field/keyword_text_stemmed_field.rst", "field/numeric_field.rst", "field/numeric_rank_field.rst", "field/relation_field.rst", "field/searchable_field.rst", "field/text_field.rst", "fields.rst", "index.rst", "other_model/atlan_image.rst", "other_model/core.rst", "other_model/custom_metadata.rst", "other_model/group.rst", "other_model/keycloak_events.rst", "other_model/lineage.rst", "other_model/role.rst", "other_model/typedef.rst", "other_model/user.rst", "other_models.rst"], "titles": ["AccessControl", "ADLS", "ADLSAccount", "ADLSContainer", "ADLSObject", "Airflow", "AirflowDag", "AirflowTask", "API", "APIPath", "APISpec", "Asset", "AtlasGlossary", "AtlasGlossaryCategory", "AtlasGlossaryTerm", "AuthPolicy", "AuthService", "AWS", "Azure", "AzureEventHub", "AzureEventHubConsumerGroup", "Badge", "BI", "BIProcess", "CalculationView", "Catalog", "Cloud", "Cognite", "Cognite3DModel", "CogniteAsset", "CogniteEvent", "CogniteFile", "CogniteSequence", "CogniteTimeSeries", "Collection", "Column", "ColumnProcess", "Connection", "Cube", "CubeDimension", "CubeField", "CubeHierarchy", "Database", "DataContract", "DataDomain", "DataMesh", "DataProduct", "DataQuality", "DataSet", "DataStudio", "DataStudioAsset", "Dbt", "DbtColumnProcess", "DbtMetric", "DbtModel", "DbtModelColumn", "DbtProcess", "DbtSource", "DbtTag", "DbtTest", "Domo", "DomoCard", "DomoDashboard", "DomoDataset", "DomoDatasetColumn", "DynamoDB", "DynamoDBGlobalSecondaryIndex", "DynamoDBLocalSecondaryIndex", "DynamoDBSecondaryIndex", "DynamoDBTable", "EventStore", "File", "Folder", "Function", "GCS", "GCSBucket", "GCSObject", "Google", "Infrastructure", "Insight", "Kafka", "KafkaConsumerGroup", "KafkaTopic", "Link", "Looker", "LookerDashboard", "LookerExplore", "LookerField", "LookerFolder", "LookerLook", "LookerModel", "LookerProject", "LookerQuery", "LookerTile", "LookerView", "MaterialisedView", "Matillion", "MatillionComponent", "MatillionGroup", "MatillionJob", "MatillionProject", "MCIncident", "MCMonitor", "Metabase", "MetabaseCollection", "MetabaseDashboard", "MetabaseQuestion", "Metric", "MicroStrategy", "MicroStrategyAttribute", "MicroStrategyCube", "MicroStrategyDocument", "MicroStrategyDossier", "MicroStrategyFact", "MicroStrategyMetric", "MicroStrategyProject", "MicroStrategyReport", "MicroStrategyVisualization", "Mode", "ModeChart", "ModeCollection", "ModeQuery", "ModeReport", "ModeWorkspace", "MongoDB", "MongoDBCollection", "MongoDBDatabase", "MonteCarlo", "MultiDimensionalDataset", "Namespace", "NoSQL", "ObjectStore", "Persona", "PowerBI", "PowerBIColumn", "PowerBIDashboard", "PowerBIDataflow", "PowerBIDataset", "PowerBIDatasource", "PowerBIMeasure", "PowerBIPage", "PowerBIReport", "PowerBITable", "PowerBITile", "PowerBIWorkspace", "Preset", "PresetChart", "PresetDashboard", "PresetDataset", "PresetWorkspace", "Procedure", "Process", "ProcessExecution", "Purpose", "Qlik", "QlikApp", "QlikChart", "QlikDataset", "QlikSheet", "QlikSpace", "QlikStream", "Query", "QuickSight", "QuickSightAnalysis", "QuickSightAnalysisVisual", "QuickSightDashboard", "QuickSightDashboardVisual", "QuickSightDataset", "QuickSightDatasetField", "QuickSightFolder", "Readme", "ReadmeTemplate", "Redash", "RedashDashboard", "RedashQuery", "RedashVisualization", "Referenceable", "Resource", "S3", "S3Bucket", "S3Object", "SaaS", "Salesforce", "SalesforceDashboard", "SalesforceField", "SalesforceObject", "SalesforceOrganization", "SalesforceReport", "Schema", "SchemaRegistry", "SchemaRegistrySubject", "Sigma", "SigmaDataElement", "SigmaDataElementField", "SigmaDataset", "SigmaDatasetColumn", "SigmaPage", "SigmaWorkbook", "Sisense", "SisenseDashboard", "SisenseDatamodel", "SisenseDatamodelTable", "SisenseFolder", "SisenseWidget", "SnowflakeDynamicTable", "SnowflakePipe", "SnowflakeStream", "SnowflakeTag", "Soda", "SodaCheck", "Spark", "SparkJob", "SQL", "Table", "Tableau", "TableauCalculatedField", "TableauDashboard", "TableauDatasource", "TableauDatasourceField", "TableauFlow", "TableauMetric", "TableauProject", "TableauSite", "TableauWorkbook", "TableauWorksheet", "TablePartition", "Tag", "TagAttachment", "Thoughtspot", "ThoughtspotAnswer", "ThoughtspotColumn", "ThoughtspotDashlet", "ThoughtspotLiveboard", "ThoughtspotTable", "ThoughtspotView", "ThoughtspotWorksheet", "View", "Assets", "AtlanTagCache", "CustomMetadataCache", "EnumCache", "GroupCache", "RoleCache", "UserCache", "Caches", "Atlan Client Interface", "Events", "Error Handling", "BooleanField", "CustomMetadataField", "KeywordField", "KeywordTextField", "KeywordTextStemmedField", "NumericField", "NumericRankField", "RelationField", "SearchableField", "TextField", "Fields", "pyatlan", "Atlan image", "Core model", "Custom metadata", "Group", "Keycloak events", "Lineage", "Role", "TypeDef", "User", "Other models"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268], "pyatlan": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268], "asset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 265, 267, 269], "typenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 261, 267], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 245, 246, 248, 249, 250, 251, 252, 253, 254, 257, 258, 261, 262, 263, 265, 267, 268], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268], "businessattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "dict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 245, 261, 262, 265, 267], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 267, 268], "createdbi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 267], "createtim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 267], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257, 260, 261, 263, 264, 265, 267, 268], "deletehandl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "guid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 245, 265, 266, 267], "isincomplet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 245, 246, 248, 249, 250, 251, 252, 260, 261, 265, 266, 267, 268], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 245, 246, 249, 250, 251, 252, 265, 267], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 245, 246, 249, 250, 251, 252, 261, 263, 265, 267, 268], "relationshipattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "statu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245], "entitystatu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 261], "updatedbi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 267], "updatetim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 267], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 260, 267], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 267], "atlantag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 261], "classificationnam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "displaytext": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "relationshipguid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "relationshipstatu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "relationshiptyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "meaningnam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "mean": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "customattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "scrub": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "pendingtask": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "uniqueattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "appendrelationshipattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "removerelationshipattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "semant": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "savesemant": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268], "descript": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 266, 267], "channel_link": 0, "classvar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236], "keywordfield": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 34, 35, 37, 40, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 71, 73, 74, 76, 77, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 161, 162, 163, 167, 168, 169, 171, 174, 175, 176, 177, 178, 180, 182, 183, 184, 186, 187, 188, 189, 190, 192, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 236, 258], "field": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "atlan_field": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 246, 247, 261, 262, 267], "tbc": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 49, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 179, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236], "default_navig": 0, "deny_asset_filt": 0, "deny_asset_tab": 0, "deny_asset_typ": 0, "deny_custom_metadata_guid": 0, "deny_navigation_pag": 0, "display_prefer": 0, "is_access_control_en": 0, "booleanfield": [0, 3, 4, 8, 9, 11, 15, 16, 35, 37, 50, 68, 69, 73, 74, 75, 82, 95, 102, 104, 108, 122, 125, 126, 133, 139, 147, 149, 154, 155, 158, 161, 172, 177, 179, 184, 185, 190, 193, 201, 205, 206, 207, 212, 213, 217, 221, 225, 236, 258], "polici": [0, 37, 75, 82], "relationfield": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 49, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 179, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 258], "adls_account_qualified_nam": 1, "keywordtextfield": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 18, 35, 40, 45, 49, 50, 51, 52, 53, 55, 56, 58, 59, 68, 69, 72, 74, 76, 77, 86, 87, 97, 99, 100, 102, 103, 104, 106, 108, 114, 117, 118, 125, 126, 128, 133, 145, 149, 154, 157, 161, 162, 164, 166, 168, 174, 175, 176, 178, 180, 182, 184, 191, 195, 199, 201, 202, 203, 205, 207, 211, 212, 215, 218, 226, 227, 230, 231, 258], "uniqu": [1, 4, 7, 8, 11, 17, 35, 37, 40, 45, 58, 68, 69, 72, 76, 81, 87, 97, 99, 100, 102, 103, 108, 114, 117, 125, 126, 127, 128, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 154, 161, 164, 166, 168, 175, 176, 178, 180, 184, 188, 189, 191, 195, 199, 201, 202, 203, 207, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 230, 231, 239, 241, 242, 243, 266], "name": [1, 4, 5, 7, 8, 10, 11, 17, 35, 37, 40, 45, 49, 50, 58, 64, 68, 69, 72, 74, 76, 77, 81, 85, 86, 87, 89, 90, 94, 97, 99, 100, 101, 102, 103, 108, 109, 112, 114, 117, 125, 126, 127, 128, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 154, 157, 161, 163, 164, 166, 168, 175, 176, 178, 180, 182, 184, 187, 188, 190, 191, 195, 199, 201, 202, 203, 205, 207, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 230, 231, 238, 239, 240, 241, 242, 243, 245, 248, 250, 251, 252, 253, 254, 257, 262, 263, 266, 267], "account": [1, 2, 11, 17, 18, 178], "thi": [1, 2, 3, 4, 7, 8, 9, 11, 12, 17, 18, 23, 24, 34, 35, 36, 37, 40, 42, 45, 46, 49, 50, 52, 56, 58, 61, 62, 64, 68, 69, 72, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 93, 94, 95, 101, 102, 103, 108, 112, 113, 114, 117, 120, 123, 125, 126, 127, 128, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 151, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 178, 180, 182, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 230, 231, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 262, 267], "adls_account_secondary_loc": [1, 18], "secondari": [1, 18, 69], "locat": [1, 18, 37, 49, 50, 68, 69, 71, 74, 77, 108, 125, 213, 225], "azure_loc": [1, 18], "azur": [1, 237], "azure_resource_id": [1, 18], "resourc": [1, 2, 11, 17, 18, 178, 237], "identifi": [1, 4, 7, 11, 17, 18, 37, 58, 85, 88, 89, 93, 97, 101, 102, 145, 154, 176, 178, 183, 186, 187, 189, 207, 209, 218, 226, 241, 242, 243, 266], "azure_tag": [1, 18], "tag": [1, 2, 5, 11, 17, 18, 49, 50, 58, 74, 77, 176, 178, 207, 227, 237, 238, 261], "have": [1, 11, 17, 18, 49, 50, 68, 69, 74, 77, 125, 126, 178, 184, 200, 207, 212, 217, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 267], "been": [1, 17, 18, 49, 50, 68, 69, 74, 77, 85, 89, 125, 126, 178, 180, 207, 212, 239, 246, 262], "appli": [1, 9, 11, 17, 18, 37, 49, 50, 53, 74, 77, 107, 178, 246, 267], "input_to_airflow_task": [1, 25, 49, 74], "input_to_process": [1, 25, 49, 74], "input_to_spark_job": [1, 25, 49, 74], "output_from_airflow_task": [1, 25, 49, 74], "output_from_process": [1, 25, 49, 74], "output_from_spark_job": [1, 25, 49, 74], "adls_account_access_ti": 2, "access": [2, 4, 7, 11, 71, 74, 85, 89, 155, 240, 247], "tier": [2, 4, 180], "adls_account_kind": 2, "kind": [2, 237, 259], "adls_account_perform": 2, "perform": [2, 245, 250, 251, 252], "adls_account_provision_st": 2, "provis": 2, "state": [2, 3, 4, 5, 11, 59, 96, 101, 120, 210, 246], "adls_account_repl": 2, "replic": [2, 82], "adls_account_resource_group": 2, "group": [2, 11, 17, 81, 98, 100, 163, 178, 241, 245, 269], "adls_account_subscript": 2, "subscript": 2, "adls_contain": [2, 4], "adls_encryption_typ": 2, "type": [2, 4, 5, 8, 11, 17, 34, 35, 37, 49, 50, 53, 61, 64, 71, 73, 74, 76, 77, 82, 83, 97, 99, 101, 102, 107, 110, 116, 117, 119, 120, 134, 157, 159, 169, 171, 175, 176, 178, 180, 183, 184, 187, 189, 200, 201, 206, 215, 218, 245, 264, 267], "encrypt": [2, 3, 4, 74, 155, 184], "adls_e_tag": 2, "entiti": [2, 74, 178, 245, 261, 267], "an": [2, 8, 9, 11, 13, 17, 34, 63, 68, 69, 74, 82, 102, 125, 176, 178, 180, 213, 225, 239, 240, 245, 246, 247, 261, 262, 265, 267], "i": [2, 4, 7, 8, 9, 10, 11, 13, 14, 17, 35, 37, 40, 58, 59, 68, 69, 73, 74, 75, 82, 89, 95, 99, 102, 108, 125, 128, 133, 139, 143, 154, 155, 158, 161, 172, 175, 176, 177, 178, 179, 180, 184, 185, 188, 190, 193, 201, 205, 206, 207, 213, 217, 221, 225, 226, 236, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 262, 267], "hash": [2, 4, 11, 74, 76, 176, 178], "repres": [2, 11, 34, 35, 68, 69, 74, 125, 126, 130, 178, 227, 248, 250, 251, 252, 253, 254, 255, 257, 261, 262], "chang": [2, 11, 73, 74, 178, 245, 246], "content": [2, 4, 12, 35, 74, 76, 85, 88, 89, 178, 180, 267], "onli": [2, 11, 35, 37, 74, 178, 180, 206, 239, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 267], "its": [2, 74, 178, 238, 239, 240, 241, 242, 243, 245, 246, 262], "metadata": [2, 4, 11, 21, 74, 85, 88, 89, 177, 178, 239, 249, 267, 269], "adls_primary_disk_st": 2, "primari": [2, 35], "disk": 2, "adls_account": 3, "adls_container_encryption_scop": 3, "scope": 3, "contain": [3, 4, 7, 8, 9, 11, 13, 14, 35, 85, 125, 211, 238, 247, 262], "adls_container_lease_st": 3, "leas": [3, 4], "adls_container_lease_statu": 3, "adls_container_url": 3, "url": [3, 4, 10, 11, 71, 177, 211, 247], "adls_container_version_level_immutability_support": 3, "whether": [3, 4, 8, 9, 11, 35, 37, 50, 68, 69, 73, 74, 75, 82, 95, 102, 108, 125, 126, 133, 139, 154, 155, 158, 161, 172, 177, 179, 184, 185, 190, 193, 201, 205, 206, 207, 212, 213, 217, 221, 225, 236, 246, 262], "support": [3, 4, 13, 176], "level": [3, 4, 35, 40, 45, 99, 215, 216, 217, 218, 219, 220, 221, 223, 224, 266], "immut": [3, 4], "fals": [3, 4, 8, 9, 11, 35, 37, 50, 68, 69, 73, 74, 75, 82, 95, 102, 108, 125, 126, 133, 139, 154, 155, 158, 161, 172, 177, 179, 184, 185, 190, 193, 201, 205, 206, 207, 212, 213, 217, 221, 225, 236, 239, 245, 246, 249, 250, 251, 252, 265, 267], "adls_object": 3, "adls_object_count": 3, "numericfield": [3, 4, 5, 6, 7, 11, 15, 16, 24, 35, 37, 38, 39, 40, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 65, 68, 69, 74, 75, 76, 77, 81, 82, 85, 87, 88, 89, 93, 95, 98, 99, 100, 102, 105, 106, 108, 121, 122, 123, 125, 126, 135, 141, 142, 144, 145, 147, 148, 149, 155, 165, 167, 173, 174, 176, 179, 180, 183, 184, 185, 188, 192, 194, 196, 197, 199, 200, 201, 203, 206, 207, 209, 210, 212, 213, 225, 228, 236, 258], "number": [3, 11, 17, 24, 35, 37, 38, 39, 40, 41, 42, 49, 50, 61, 62, 63, 65, 68, 69, 74, 75, 77, 81, 82, 85, 88, 89, 95, 98, 99, 100, 102, 123, 125, 126, 135, 141, 142, 144, 165, 167, 173, 178, 179, 183, 184, 185, 188, 192, 194, 196, 197, 199, 200, 201, 203, 207, 212, 213, 225, 228, 236, 248, 249, 250, 251, 252, 253, 254, 256, 257], "exist": [3, 4, 11, 17, 45, 49, 50, 68, 69, 72, 74, 76, 77, 87, 89, 90, 94, 103, 108, 117, 125, 126, 128, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 154, 161, 164, 166, 168, 176, 178, 180, 184, 191, 195, 199, 201, 202, 203, 207, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 230, 231, 240, 246, 247, 258, 267], "within": [3, 4, 7, 11, 35, 52, 56, 68, 69, 75, 94, 97, 98, 99, 125, 126, 151, 179, 184, 207, 212, 239, 246, 247, 249, 250, 251, 252, 267], "adls_container_qualified_nam": 4, "adls_object_access_ti": 4, "adls_object_access_tier_last_modified_tim": 4, "time": [4, 5, 11, 24, 35, 37, 53, 63, 68, 69, 75, 76, 82, 85, 89, 95, 96, 102, 107, 108, 125, 126, 165, 174, 176, 180, 200, 206, 207, 210, 212, 264], "epoch": [4, 11, 35, 68, 69, 76, 85, 89, 95, 108, 125, 126, 165, 174, 180, 200, 206, 207, 212], "when": [4, 11, 17, 35, 46, 59, 74, 85, 89, 174, 176, 178, 180, 200, 245, 246, 247], "acccess": 4, "wa": [4, 11, 24, 35, 46, 63, 68, 69, 74, 76, 85, 89, 108, 125, 126, 165, 174, 176, 180, 200, 207, 212, 239, 245, 246], "last": [4, 11, 46, 63, 68, 69, 76, 85, 89, 97, 125, 126, 165, 174, 176, 180, 200, 207, 212], "modifi": [4, 76, 180, 246, 262], "millisecond": [4, 11, 35, 68, 69, 76, 82, 85, 89, 95, 108, 125, 126, 165, 174, 176, 180, 200, 206, 207, 212], "adls_object_archive_statu": 4, "archiv": [4, 11, 13, 176, 239], "adls_object_cache_control": 4, "textfield": [4, 9, 11, 53, 68, 69, 75, 102, 107, 121, 122, 125, 126, 130, 139, 146, 156, 184, 190, 193, 228, 258], "cach": [4, 238, 239, 240, 241, 242, 243, 245, 259], "control": [4, 74], "adls_object_content_languag": 4, "languag": [4, 12, 59, 73, 76, 189], "": [4, 9, 11, 12, 17, 37, 76, 85, 88, 89, 95, 101, 109, 114, 176, 178, 180, 227, 248, 249, 250, 251, 252, 262], "adls_object_content_md5hash": 4, "md5": [4, 76], "adls_object_content_typ": 4, "adls_object_lease_st": 4, "adls_object_lease_statu": 4, "adls_object_metadata": 4, "associ": [4, 11, 12, 13, 58, 102, 207, 226, 227], "from": [4, 11, 23, 36, 37, 50, 58, 68, 85, 86, 88, 89, 93, 95, 101, 102, 154, 175, 184, 207, 215, 219, 226, 238, 239, 240, 244, 245, 246, 247, 262, 269], "adl": [4, 18, 237], "adls_object_server_encrypt": 4, "server": [4, 200], "adls_object_s": 4, "size": [4, 68, 69, 76, 82, 95, 125, 180, 203, 213, 218, 225, 236, 248, 249, 250, 251, 252, 253, 254, 256, 257, 261, 265], "adls_object_typ": 4, "adls_object_url": 4, "adls_object_version_id": 4, "adls_object_version_level_immutability_support": 4, "airflow_run_end_tim": 5, "end": [5, 210], "run": [5, 6, 7, 11, 37, 63, 95, 97, 210, 245, 246, 247], "airflow_run_nam": 5, "airflow_run_open_lineage_st": 5, "openlineag": [5, 210], "airflow_run_open_lineage_vers": 5, "airflow_run_start_tim": 5, "start": [5, 11, 35, 210, 246, 249, 250, 251, 252], "airflow_run_typ": 5, "airflow_run_vers": 5, "airflow_tag": 5, "assign": [5, 17, 176, 178], "airflow_dag_schedul": 6, "schedul": [6, 11, 99, 102, 174, 201], "dag": [6, 7], "airflow_dag_schedule_delta": 6, "durat": [6, 11], "between": [6, 125, 238, 239, 246, 249, 253, 254], "second": [6, 65, 68, 69, 125], "airflow_task": [6, 52, 56, 151], "airflow_dag": 7, "airflow_dag_nam": 7, "simpl": [7, 8, 11, 35, 68, 69, 76, 81, 97, 99, 100, 103, 108, 114, 117, 125, 126, 128, 175, 180, 191, 195, 207, 212, 223, 231, 250, 251, 252, 267], "task": 7, "airflow_dag_qualified_nam": 7, "airflow_task_connection_id": 7, "connect": [7, 11, 86, 138, 237, 245, 247, 267], "airflow_task_operator_class": 7, "oper": [7, 9, 11, 245, 247, 251, 252, 253, 254, 257, 265], "us": [7, 11, 34, 35, 37, 40, 46, 53, 59, 74, 82, 86, 93, 97, 102, 107, 110, 134, 141, 155, 161, 163, 171, 180, 189, 203, 204, 218, 239, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 262], "airflow_task_pool": 7, "pool": 7, "which": [7, 10, 11, 13, 14, 17, 21, 24, 35, 37, 40, 45, 46, 49, 50, 59, 68, 69, 72, 73, 74, 76, 77, 87, 89, 90, 94, 95, 97, 99, 100, 102, 103, 108, 117, 125, 126, 128, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 154, 161, 164, 165, 166, 168, 175, 178, 180, 184, 188, 191, 195, 199, 200, 201, 202, 203, 206, 207, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 230, 231, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267], "happen": 7, "airflow_task_pool_slot": 7, "slot": 7, "airflow_task_priority_weight": 7, "prioriti": 7, "airflow_task_queu": 7, "queue": 7, "airflow_task_retry_numb": 7, "retri": [7, 245], "count": [7, 11, 68, 69, 125, 126, 207, 212, 245], "airflow_task_sql": 7, "sql": [7, 52, 53, 56, 59, 68, 69, 86, 95, 97, 102, 107, 125, 126, 150, 151, 161, 174, 201, 204, 205, 207, 236, 237], "code": [7, 9, 52, 56, 59, 73, 102, 151, 174, 259], "execut": [7, 11, 73, 102, 174, 228], "through": [7, 11, 85, 247, 267], "airflow_task_trigger_rul": 7, "trigger": [7, 246], "input": [7, 23, 36, 211, 219], "output": [7, 23, 36, 52, 56, 73, 151, 211, 219], "process": [7, 23, 36, 52, 56, 211, 237, 246, 247], "api_external_doc": 8, "extern": [8, 68, 69, 73, 125, 139, 213, 225], "document": [8, 125], "api_is_auth_opt": 8, "authent": 8, "option": [8, 176, 245, 267], "requir": [8, 11, 244, 246], "api_spec_nam": 8, "spec": 8, "api_spec_qualified_nam": 8, "api_spec_typ": 8, "exampl": [8, 11, 14, 34, 37, 50, 59, 68, 69, 83, 99, 102, 110, 116, 125, 156, 157, 163, 167, 168, 169, 171, 176, 180, 189, 200, 201, 206, 213, 215, 218, 225, 247, 249, 251, 252, 257], "openapi": 8, "graphql": 8, "etc": [8, 37, 68, 69, 109, 125, 156, 157, 159, 163, 168, 180, 189, 206, 213, 225, 230, 246], "api_spec_vers": 8, "specif": [8, 10, 11, 189, 239, 246, 247], "api_path_available_oper": 9, "avail": [9, 10, 259, 262, 267], "endpoint": 9, "api_path_available_response_cod": 9, "respons": [9, 10, 247], "path": [9, 11, 94, 99, 169, 263], "across": [9, 17, 178, 190, 248, 249, 250, 251, 252, 253, 254, 256, 257], "all": [9, 11, 17, 35, 125, 176, 178, 237, 239, 245, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 267], "api_path_is_ingress_expos": 9, "expos": 9, "ingress": 9, "api_path_is_templ": 9, "replac": [9, 267], "paramet": [9, 11, 163, 174, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 267], "api_path_raw_uri": 9, "absolut": 9, "individu": 9, "api_path_summari": 9, "summari": [9, 13, 14], "intend": [9, 14], "api_spec": 9, "api_path": 10, "api_spec_contact_email": 10, "email": [10, 243, 245, 268], "address": [10, 243, 247], "contact": 10, "api": [10, 37, 182, 237, 245, 247], "api_spec_contact_nam": 10, "api_spec_contact_url": 10, "point": [10, 11, 35, 96, 184, 246], "inform": [10, 11, 46, 73, 76, 180, 244, 245, 246, 258], "api_spec_contract_vers": 10, "contract": 10, "api_spec_license_nam": 10, "licens": 10, "under": [10, 11], "api_spec_license_url": 10, "api_spec_service_alia": 10, "servic": [10, 17, 49, 50, 74, 77, 178], "alia": [10, 11, 68, 69, 95, 125, 213, 225, 236, 241, 245, 263], "api_spec_terms_of_service_url": 10, "term": [10, 12, 13, 14, 176, 245], "admin_group": 11, "who": [11, 24, 35, 68, 69, 85, 88, 89, 108, 125, 126, 176, 207, 212, 217], "administ": 11, "certain": 11, "admin_rol": 11, "role": [11, 215, 218, 230, 242, 245, 268, 269], "admin_us": 11, "user": [11, 17, 35, 68, 69, 73, 85, 88, 89, 108, 125, 126, 176, 178, 184, 207, 212, 217, 243, 245, 269], "announcement_messag": [11, 261], "detail": [11, 13, 14, 59, 97, 102, 138, 169, 238, 239, 240, 245, 246, 264], "messag": [11, 59, 82, 190, 245], "includ": [11, 176, 239, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257], "announc": [11, 245, 261], "announcement_titl": [11, 261], "brief": [11, 13, 14], "titl": [11, 50], "announcementtyp": [11, 261], "specifi": [11, 35, 65, 68, 69, 109, 133, 201, 230, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257], "announcement_typ": [11, 261], "announcement_updated_at": 11, "updat": [11, 46, 68, 69, 85, 89, 125, 126, 176, 180, 207, 212, 245, 246, 267], "announcement_updated_bi": 11, "asset_cover_imag": 11, "asset_dbt_account_nam": 11, "dbt": [11, 237], "asset_dbt_alia": 11, "asset_dbt_environment_dbt_vers": 11, "environ": [11, 100], "materi": [11, 95], "asset_dbt_environment_nam": 11, "asset_dbt_job_last_run": 11, "job": [11, 97, 99, 100, 210, 211], "ran": [11, 52, 56, 151], "asset_dbt_job_last_run_artifacts_sav": 11, "artifact": 11, "were": 11, "save": [11, 245], "asset_dbt_job_last_run_artifact_s3path": 11, "s3": [11, 37, 68, 69, 125, 180, 213, 225, 237], "asset_dbt_job_last_run_created_at": 11, "creat": [11, 17, 74, 85, 88, 89, 93, 110, 175, 176, 178, 180, 200, 245, 247, 267], "asset_dbt_job_last_run_dequed_at": 11, "dequeu": 11, "asset_dbt_job_last_run_executed_by_thread_id": 11, "thread": 11, "id": [11, 17, 24, 49, 50, 60, 74, 76, 77, 176, 178, 238, 239, 241, 242, 243, 260, 263, 266, 268], "asset_dbt_job_last_run_git_branch": 11, "branch": 11, "git": 11, "asset_dbt_job_last_run_git_sha": 11, "sha": 11, "asset_dbt_job_last_run_has_docs_gener": 11, "doc": 11, "gener": [11, 74, 76, 176, 245, 246, 267], "asset_dbt_job_last_run_has_sources_gener": 11, "asset_dbt_job_last_run_notifications_s": 11, "notif": [11, 205], "sent": [11, 74, 246], "asset_dbt_job_last_run_owner_thread_id": 11, "owner": [11, 24, 50, 60, 154], "asset_dbt_job_last_run_queued_dur": 11, "total": [11, 35, 41, 125, 184, 228, 245], "spent": 11, "being": [11, 59, 217, 246, 247], "queu": 11, "asset_dbt_job_last_run_queued_duration_human": 11, "human": [11, 238, 239, 240, 241, 242, 243, 262, 267], "readabl": [11, 102, 174, 238, 239, 240, 241, 242, 243, 262, 267], "spend": 11, "asset_dbt_job_last_run_run_dur": 11, "asset_dbt_job_last_run_run_duration_human": 11, "asset_dbt_job_last_run_started_at": 11, "asset_dbt_job_last_run_status_messag": 11, "asset_dbt_job_last_run_total_dur": 11, "asset_dbt_job_last_run_total_duration_human": 11, "asset_dbt_job_last_run_updated_at": 11, "asset_dbt_job_last_run_url": 11, "asset_dbt_job_nam": 11, "asset_dbt_job_next_run": 11, "next": [11, 102], "asset_dbt_job_next_run_human": 11, "asset_dbt_job_schedul": 11, "asset_dbt_job_schedule_cron_human": 11, "cron": 11, "asset_dbt_job_statu": 11, "asset_dbt_meta": 11, "everyth": 11, "meta": [11, 262], "kei": [11, 35, 65, 68, 69, 76, 125, 126, 130, 190, 239, 246, 260, 262], "asset_dbt_package_nam": 11, "packag": 11, "asset_dbt_project_nam": 11, "project": [11, 49, 50, 68, 74, 77, 86, 87, 90, 94, 96, 98, 99, 100, 108, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "asset_dbt_semantic_layer_proxy_url": 11, "layer": 11, "proxi": [11, 248, 250, 251, 252, 253, 254, 257], "asset_dbt_source_freshness_criteria": 11, "fresh": 11, "criteria": [11, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257], "asset_dbt_tag": 11, "attach": [11, 176, 238], "asset_dbt_test_statu": 11, "test": [11, 59], "status": [11, 97], "asset_dbt_unique_id": 11, "asset_dbt_workflow_last_upd": 11, "workflow": 11, "atlan": [11, 37, 58, 176, 207, 226, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269], "asset_icon": 11, "icon": [11, 34, 37, 83, 171], "glossari": [11, 12, 13, 14, 267], "current": [11, 96, 102, 246, 247], "asset_mc_incident_nam": 11, "mont": [11, 101, 102, 127], "carlo": [11, 101, 102, 127], "incid": [11, 101, 102], "asset_mc_incident_qualified_nam": 11, "asset_mc_incident_sever": 11, "sever": [11, 59, 101], "asset_mc_incident_st": 11, "asset_mc_incident_sub_typ": 11, "sub": [11, 35, 40, 225], "asset_mc_incident_typ": 11, "asset_mc_last_sync_run_at": 11, "sync": [11, 238], "asset_mc_monitor_nam": 11, "monitor": [11, 102], "asset_mc_monitor_qualified_nam": 11, "asset_mc_monitor_schedule_typ": 11, "asset_mc_monitor_status": 11, "asset_mc_monitor_typ": 11, "asset_soda_check_count": 11, "check": [11, 209, 241, 242, 243, 246, 248, 249, 250, 251, 252], "done": [11, 247], "via": [11, 13, 176, 188], "soda": [11, 209, 237], "asset_soda_check_status": 11, "asset_soda_dq_statu": 11, "data": [11, 17, 35, 37, 46, 50, 73, 76, 134, 155, 157, 178, 184, 191, 192, 196, 215, 218, 228, 230, 245, 262], "qualiti": 11, "asset_soda_last_scan_at": 11, "asset_soda_last_sync_run_at": 11, "asset_soda_source_url": 11, "asset_tag": 11, "asset_theme_hex": 11, "color": [11, 21], "hexadecim": 11, "rgb": 11, "certificate_statu": [11, 245], "certif": 11, "certificate_status_messag": 11, "provid": [11, 238, 239, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257], "further": [11, 225, 245, 247, 267], "certificatestatu": [11, 245], "certificate_updated_at": 11, "certificate_updated_bi": 11, "connection_nam": 11, "connection_qualified_nam": 11, "connector_nam": 11, "connector": 11, "dbt_qualified_nam": 11, "crawl": 11, "fallback": 11, "displai": [11, 267], "purpos": [11, 237, 245, 263, 268], "userdescript": [11, 12, 13, 14], "empti": [11, 68, 69, 125, 126, 128, 207, 212, 239, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257], "display_nam": [11, 245], "interfac": [11, 246, 259], "file": [11, 94, 180, 237, 245], "has_lineag": 11, "ha": [11, 37, 50, 68, 69, 85, 89, 125, 126, 180, 207, 212, 217, 239, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262], "lineag": [11, 245, 248, 250, 251, 252, 253, 254, 257, 269], "input_port_data_product": 11, "is_ai_gener": 11, "is_discover": 11, "discover": 11, "ui": [11, 85, 89, 241], "is_edit": 11, "can": [11, 13, 35, 37, 59, 71, 99, 176, 184, 237, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 267], "edit": 11, "is_parti": 11, "last_row_changed_at": 11, "insert": [11, 206], "delet": [11, 176, 239, 261, 262], "row": [11, 35, 37, 63, 68, 69, 95, 125, 213, 225, 236], "last_sync_run": 11, "crawler": 11, "synchron": 11, "last_sync_run_at": 11, "last_sync_workflow_nam": 11, "link": [11, 61, 62, 63, 76, 93, 97, 177, 183, 188, 237], "mc_incid": 11, "mc_monitor": [11, 101], "metric": [11, 53, 114, 220, 237], "keywordtextstemmedfield": [11, 50, 147, 148, 258], "displaynam": [11, 267], "output_port_data_product": 11, "owner_group": 11, "own": 11, "owner_us": 11, "popularity_scor": 11, "numericrankfield": [11, 258], "popular": [11, 37], "score": [11, 46], "readm": [11, 12, 13, 14, 171, 237], "sample_data_url": 11, "sampl": [11, 37], "schema_registry_subject": 11, "soda_check": 11, "source_cost_unit": 11, "The": [11, 24, 65, 68, 69, 211, 239, 245, 246, 250, 251, 252, 262], "unit": 11, "measur": [11, 40, 125, 139, 142, 215, 218, 230], "sourcetotalcost": 11, "source_created_at": 11, "system": [11, 58, 207, 226], "source_created_bi": 11, "source_embed_url": 11, "emb": 11, "imag": [11, 34, 83, 171, 245, 269], "dashboard": [11, 61, 62, 85, 88, 89, 93, 135, 143, 144, 145, 165, 166, 173, 183, 186, 187, 199, 203, 216, 223, 224], "source_last_read_at": 11, "timestamp": [11, 46, 85], "most": [11, 259], "recent": 11, "read": [11, 59, 65, 68, 69, 245], "source_own": 11, "source_query_compute_cost_list": 11, "expens": 11, "warehous": [11, 37, 101, 102], "source_query_compute_cost_record_list": 11, "extra": [11, 245, 261], "insight": [11, 37, 237], "source_read_count": 11, "source_read_expensive_query_record_list": 11, "queri": [11, 35, 37, 52, 53, 56, 58, 68, 69, 89, 90, 93, 95, 97, 107, 110, 125, 126, 142, 151, 155, 174, 175, 207, 212, 213, 225, 226, 236, 237, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257], "source_read_popular_query_record_list": 11, "source_read_query_cost": 11, "cost": 11, "source_read_recent_user_list": 11, "usernam": [11, 37, 243, 245, 268], "source_read_recent_user_record_list": 11, "source_read_slow_query_record_list": 11, "slowest": 11, "source_read_top_user_list": 11, "source_read_top_user_record_list": 11, "source_read_user_count": 11, "source_total_cost": 11, "source_updated_at": 11, "source_updated_bi": 11, "source_url": 11, "applic": [11, 37, 125, 180, 188, 246], "button": 11, "view": [11, 24, 35, 68, 69, 85, 86, 87, 89, 91, 94, 95, 125, 126, 161, 188, 207, 212, 230, 237, 246], "starred_bi": 11, "star": 11, "starred_count": 11, "starred_details_list": 11, "sub_typ": 11, "subtyp": [11, 101, 125, 156, 157, 203, 267], "tenant_id": 11, "workspac": [11, 123, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145], "user_descript": 11, "If": [11, 247, 250, 251, 252], "present": [11, 76, 167, 180, 201], "viewer_group": 11, "collect": [11, 72, 103, 120, 123, 125, 126, 161, 237, 241, 242, 243, 246], "viewer_us": 11, "view_scor": 11, "classmethod": [11, 13, 176, 238, 239, 240, 241, 242, 243, 245, 261, 262], "include_archiv": 11, "fluentlineag": 11, "get": [11, 245], "lineagelistrequest": [11, 245, 265], "retriev": [11, 239, 240, 245, 246, 247, 250, 251, 252], "downstream": 11, "addit": [11, 12, 13, 14, 267, 269], "condit": [11, 21, 102, 248, 249, 250, 251, 252, 253, 254, 256, 257, 265], "chain": 11, "onto": 11, "return": [11, 13, 37, 65, 68, 69, 73, 176, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 261, 262, 267], "befor": [11, 37, 65, 68, 69, 245, 246], "attempt": [11, 247], "ensur": [11, 246, 262], "ar": [11, 23, 35, 36, 40, 46, 58, 68, 69, 73, 125, 127, 207, 213, 215, 217, 219, 225, 226, 236, 239, 241, 242, 243, 245, 246, 247, 259, 269], "push": 11, "down": [11, 246], "optim": 11, "To": [11, 267], "default": [11, 35, 37, 161, 176, 184, 200, 245, 246, 247, 250, 251, 252], "direct": [11, 40, 155, 200, 265], "call": [11, 37, 246], "soft": 11, "additional_attribut": [12, 13, 14], "unus": [12, 13, 14, 37], "arbitrari": [12, 13, 14], "set": [12, 13, 14, 73, 189, 201, 238, 239, 240, 245, 246, 262, 267], "categori": [12, 13, 14, 37, 102, 134, 215, 218, 267], "glossary_typ": 12, "long_descript": [12, 13, 14], "A": [12, 74, 241, 242, 243, 245, 250, 251, 252], "longer": 12, "see": [12, 13, 14, 135, 136, 137, 141, 161, 247, 267], "instead": [12, 13, 14, 135, 136, 137, 141, 161, 245, 246, 267], "short_descript": [12, 13, 14], "short": 12, "definit": [12, 14, 95, 125, 150, 189, 190, 204, 205, 209, 236, 239, 240, 267], "usag": [12, 14], "inted": 12, "anchor": [13, 14], "searchabl": [13, 14, 176, 255], "qualifiednam": [13, 14, 176], "category_typ": 13, "children_categori": 13, "parent_categori": 13, "parent": [13, 40, 45, 72, 85, 86, 88, 114, 161, 202], "subcategori": [13, 37], "can_be_archiv": [13, 176], "indic": [13, 35, 176, 247, 262], "delete_by_guid": [13, 176, 245], "method": [13, 95, 176, 245, 246, 259, 262], "abbrevi": 14, "terrm": 14, "antonym": 14, "assigned_ent": 14, "organ": [14, 89, 182, 183, 185, 186, 187], "classifi": 14, "exmapl": [14, 159], "is_a": 14, "preferred_term": 14, "preferred_to_term": 14, "replaced_bi": 14, "replacement_term": 14, "see_also": [14, 170], "synonym": 14, "term_typ": 14, "translated_term": 14, "translation_term": 14, "valid_valu": 14, "valid_values_for": 14, "access_control": 15, "is_policy_en": 15, "policy_act": 15, "policy_categori": 15, "policy_condit": 15, "policy_delegate_admin": 15, "policy_group": 15, "policy_mask_typ": 15, "policy_prior": 15, "policy_resourc": 15, "policy_resource_categori": 15, "policy_resource_signatur": 15, "policy_rol": 15, "policy_service_nam": 15, "policy_sub_categori": 15, "policy_typ": 15, "policy_us": 15, "policy_validity_schedul": 15, "auth_service_config": 16, "auth_service_is_en": 16, "auth_service_policy_last_sync": 16, "auth_service_typ": 16, "tag_servic": 16, "aws_account_id": [17, 178], "12": [17, 178], "digit": [17, 35, 178, 184], "aws_arn": [17, 178], "amazon": [17, 178], "arn": [17, 178], "thu": [17, 178], "must": [17, 35, 73, 178, 184], "instanc": [17, 178, 245], "aws_owner_id": [17, 178], "root": [17, 178], "aws_owner_nam": [17, 178], "aws_partit": [17, 178], "region": [17, 68, 69, 125, 178, 213, 225], "aws_region": [17, 178], "physic": [17, 178], "where": [17, 71, 154, 178], "center": [17, 178], "cluster": [17, 35, 125, 178], "aws_resource_id": [17, 178], "new": [17, 178, 245, 246, 267], "aws_servic": [17, 178], "aws_tag": [17, 178], "azure_event_hub_statu": 19, "kafkaconsumergroup": [20, 237], "badge_condit": 21, "determin": [21, 37, 73, 239, 246], "diplai": 21, "variou": [21, 241, 242, 243], "valu": [21, 35, 37, 58, 73, 155, 184, 190, 207, 226, 227, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 262, 265, 267], "badge_metadata_attribut": 21, "custom": [21, 102, 185, 200, 201, 239, 249, 267, 269], "show": 21, "catalog": [22, 27, 47, 70, 79, 80, 84, 131, 181, 198, 208, 214, 237], "atlan_schema": [24, 95, 150, 205, 206, 207, 213, 236], "calculation_view_activated_at": 24, "calcul": [24, 35, 37, 40, 68, 69, 125, 126, 163, 184, 207, 212, 215, 246, 253, 254], "activ": [24, 176, 239], "calculation_view_activated_bi": 24, "calculation_view_version_id": 24, "column": [24, 63, 64, 68, 69, 95, 125, 134, 142, 161, 167, 176, 187, 194, 195, 201, 203, 213, 218, 225, 228, 230, 236, 237], "column_count": [24, 68, 69, 95, 125, 213, 225, 236], "cognite_asset": [28, 30, 31, 32, 33], "cognite3dmodel": [29, 237], "cognite_ev": 29, "cognite_fil": 29, "cognite_sequ": 29, "cognite_timeseri": 29, "icon_typ": [34, 83, 171], "emoji": [34, 83, 171], "calculation_view": [35, 188], "column_averag": 35, "averag": [35, 125, 253, 254], "column_average_length": 35, "length": [35, 184], "string": [35, 109, 161, 168, 176, 230, 238, 239, 249, 250, 251, 252, 257, 267], "column_dbt_model_column": 35, "column_depth_level": 35, "nest": [35, 40, 215, 216, 217, 218, 219, 220, 221, 223, 224], "struct": [35, 267], "column_distinct_values_count": 35, "distinct": 35, "column_distinct_values_count_long": 35, "column_duplicate_values_count": 35, "duplic": [35, 239, 245], "column_duplicate_values_count_long": 35, "column_histogram": 35, "histogram": 35, "column_max": 35, "greatest": 35, "numer": [35, 249, 253, 254], "column_maximum_string_length": 35, "longest": 35, "column_mean": 35, "arithmet": 35, "column_median": 35, "median": 35, "column_min": 35, "least": [35, 249, 250, 251, 252], "column_minimum_string_length": 35, "shortest": 35, "column_missing_values_count": 35, "do": [35, 246, 247, 258], "column_missing_values_count_long": 35, "column_missing_values_percentag": 35, "percentag": 35, "column_standard_devi": 35, "standard": [35, 180, 206], "deviat": 35, "column_sum": 35, "sum": [35, 253, 254], "column_top_valu": 35, "top": [35, 45, 215, 216, 217, 218, 219, 220, 221, 223, 224], "column_uniqueness_percentag": 35, "ratio": 35, "how": [35, 76, 99, 180, 258], "0": [35, 210, 245, 265], "same": [35, 134, 249, 251, 252, 257], "100": 35, "column_unique_values_count": 35, "appear": [35, 241], "onc": 35, "column_unique_values_count_long": 35, "column_vari": 35, "varianc": 35, "data_quality_metric_dimens": 35, "data_typ": [35, 184], "dbt_metric": [35, 54], "dbt_model_column": [35, 54, 59], "default_valu": 35, "foreign_key_from": 35, "foreign_key_to": 35, "is_clust": 35, "is_dist": 35, "distribut": 35, "is_foreign": 35, "foreign": 35, "anoth": [35, 37], "tabl": [35, 65, 68, 69, 86, 125, 126, 130, 133, 134, 135, 137, 139, 142, 161, 176, 188, 200, 201, 204, 207, 212, 217, 218, 225, 228, 230, 237], "note": [35, 93, 217, 245, 246, 249, 250, 251, 252, 267], "foreignkeyto": 35, "relationship": [35, 255, 267], "refer": [35, 177, 184, 259], "is_index": 35, "index": [35, 65, 68, 69, 125, 126, 130, 248, 250, 251, 252, 253, 254, 257], "databas": [35, 68, 69, 125, 126, 161, 188, 207, 212, 237], "is_nul": [35, 184], "null": [35, 184, 248, 249, 250, 251, 252, 253, 254, 256, 257], "is_partit": [35, 68, 69, 125, 213, 225], "partit": [35, 65, 68, 69, 82, 125, 213, 225], "is_pin": 35, "pin": [35, 143], "is_primari": 35, "is_sort": 35, "sort": [35, 65, 68, 69, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257], "materialised_view": [35, 188], "max_length": [35, 184], "maximum": [35, 37, 65, 68, 69, 125, 184, 248, 249, 250, 251, 252, 253, 254, 256, 257], "metric_timestamp": 35, "nested_column": 35, "nested_column_count": 35, "numeric_scal": [35, 184], "allow": [35, 37, 58, 68, 69, 125, 184, 207, 213, 225, 226, 236, 245, 247, 262], "right": [35, 184], "decim": [35, 184], "order": [35, 59, 134, 184, 248, 249, 250, 251, 252, 253, 254, 256, 257], "posit": [35, 184], "1": [35, 210, 245], "parent_column": 35, "parent_column_nam": 35, "parent_column_qualified_nam": 35, "partition_ord": 35, "pinned_at": 35, "pinned_bi": 35, "precis": [35, 184], "datatyp": [35, 168], "raw_data_type_definit": 35, "snowflake_dynamic_t": [35, 188], "sub_data_typ": 35, "table_partit": 35, "valid": [35, 190, 241, 242, 243, 245, 246, 247, 262, 267], "allow_queri": 37, "allow_query_preview": 37, "preview": [37, 68, 69, 95, 125, 213, 225, 236], "rdbm": 37, "connection_dbt_environ": 37, "connection_sso_credential_guid": 37, "sso": 37, "credenti": 37, "connector_icon": 37, "connectortyp": 37, "impact": 37, "connector_imag": 37, "credential_strategi": 37, "strategi": [37, 68, 69, 125, 213, 225], "default_credential_guid": 37, "has_popularity_insight": 37, "host": 37, "is_sample_data_preview_en": 37, "object_storage_upload_threshold": 37, "after": [37, 125, 206], "result": [37, 59, 93, 239, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257], "should": [37, 76, 102, 180, 245, 246, 247, 267], "upload": [37, 245], "storag": [37, 74, 180], "policy_strategi": 37, "configur": [37, 68, 69, 95, 125, 213, 225, 236, 245, 247], "rewritten": 37, "stream": [37, 206], "made": [37, 246], "screen": 37, "policy_strategy_for_sample_preview": 37, "policystrategyforsamplepreview": 37, "config": [37, 245], "popularity_insights_timefram": 37, "dai": 37, "over": [37, 245], "30": 37, "port": 37, "preview_credential_strategi": 37, "query_config": 37, "query_preview_config": [37, 68, 69, 95, 125, 213, 225, 236], "query_timeout": 37, "out": [37, 247, 249, 251, 252, 257], "query_username_strategi": 37, "row_limit": 37, "source_logo": 37, "sub_categori": 37, "use_object_storag": 37, "gcp": 37, "vector_embeddings_en": 37, "vector_embeddings_updated_at": 37, "cube_dimens": [38, 41], "cube_dimension_count": 38, "dimens": [38, 39, 102, 128, 213, 215, 218, 230], "cube": [39, 40, 41, 108, 110, 128, 237], "cube_hierarchi": [39, 40], "cube_hierarchy_count": 39, "hierarchi": [39, 40, 41, 128], "cube_field_level": 40, "cube_field_measure_express": 40, "express": [40, 113, 114, 139, 142, 201, 250, 251, 252], "cube_nested_field": 40, "cube_parent_field": 40, "cube_parent_field_nam": 40, "cube_parent_field_qualified_nam": 40, "cube_sub_field_count": 40, "children": 40, "cube_field": 41, "cube_field_count": 41, "schema": [42, 68, 69, 125, 126, 130, 161, 189, 190, 207, 212, 237], "schema_count": [42, 126], "data_product": 44, "parent_domain": 44, "sub_domain": 44, "parent_domain_qualified_nam": 45, "domain": 45, "super_domain_qualified_nam": 45, "data_domain": 46, "data_product_assets_dsl": 46, "search": [46, 239, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258], "dsl": 46, "defin": [46, 59, 189, 204, 225, 230, 248, 249, 250, 251, 252, 253, 254, 256, 257], "part": [46, 127, 245, 259], "product": 46, "data_product_assets_playbook_filt": 46, "playbook": 46, "filter": [46, 53, 107, 163, 174, 248, 250, 251, 252, 253, 254, 257], "data_product_crit": 46, "critic": 46, "data_product_score_updated_at": 46, "data_product_score_valu": 46, "data_product_sensit": 46, "sensit": [46, 73, 184, 249, 250, 251, 252], "data_product_statu": 46, "data_product_vis": 46, "visibl": 46, "input_port": 46, "output_port": 46, "google_label": [49, 50, 74, 77], "googl": [49, 50, 74, 188, 237], "google_loc": [49, 50, 74, 77], "google_location_typ": [49, 50, 74, 77], "google_project_id": [49, 50, 74, 77], "google_project_nam": [49, 50, 74, 77], "google_project_numb": [49, 50, 74, 77], "google_servic": [49, 50, 74, 77], "google_tag": [49, 50, 74, 77], "data_studio_asset_own": 50, "studio": 50, "data_studio_asset_titl": 50, "data_studio_asset_typ": 50, "report": [50, 108, 116, 137, 140, 141, 143, 144, 183, 186, 187, 247, 267], "data_sourc": 50, "is_trashed_data_studio_asset": 50, "trash": 50, "dbt_account_nam": [51, 52, 53, 56, 58], "dbt_alia": [51, 52, 53, 56, 58], "dbt_connection_context": [51, 52, 53, 56, 58], "dbt_environment_dbt_vers": [51, 52, 53, 56, 58], "dbt_environment_nam": [51, 52, 53, 56, 58], "dbt_job_last_run": [51, 52, 53, 56, 58], "dbt_job_nam": [51, 52, 53, 56, 58], "dbt_job_next_run": [51, 52, 53, 56, 58], "dbt_job_next_run_human": [51, 52, 53, 56, 58], "dbt_job_schedul": [51, 52, 53, 56, 58], "dbt_job_schedule_cron_human": [51, 52, 53, 56, 58], "dbt_job_statu": [51, 52, 53, 56, 58], "dbt_meta": [51, 52, 53, 56, 58], "dbt_package_nam": [51, 52, 53, 56, 58], "dbt_project_nam": [51, 52, 53, 56, 58], "dbt_semantic_layer_proxy_url": [51, 52, 53, 56, 58], "dbt_tag": [51, 52, 53, 56, 58], "dbt_unique_id": [51, 52, 53, 56, 58], "ast": [52, 56, 151], "pars": [52, 56, 151, 245], "statement": [52, 56, 73, 151, 204], "describ": [52, 56, 68, 69, 125, 126, 130, 134, 151, 245], "logic": [52, 56, 102, 151, 246, 247], "column_process": [52, 56, 151], "dbt_column_process_job_statu": 52, "matillion_compon": [52, 56, 99, 151], "spark_job": [52, 56, 151], "produc": [52, 56, 102, 151], "dbt_metric_filt": 53, "dbt_metric_filter_column": 53, "dbt_model": [53, 55, 59, 207, 212], "metric_dimension_column": [53, 107], "metric_filt": [53, 107], "metric_sql": [53, 107], "comput": [53, 73, 107], "metric_timestamp_column": [53, 107], "metric_time_grain": [53, 107], "grain": [53, 107], "metric_typ": [53, 107], "dbt_compiled_sql": 54, "dbt_error": 54, "dbt_materialization_typ": 54, "dbt_model_compile_completed_at": 54, "dbt_model_compile_started_at": 54, "dbt_model_execute_completed_at": 54, "dbt_model_execute_started_at": 54, "dbt_model_execution_tim": 54, "dbt_model_run_elapsed_tim": 54, "dbt_model_run_generated_at": 54, "dbt_model_sql_asset": 54, "dbt_raw_sql": 54, "dbt_stat": 54, "dbt_statu": 54, "dbt_test": [54, 55, 57, 207, 212], "sql_asset": [54, 57, 59], "dbt_model_column_data_typ": 55, "dbt_model_column_ord": 55, "dbt_model_column_sql_column": 55, "dbt_model_qualified_nam": 55, "sql_column": 55, "dbt_process_job_statu": 56, "dbt_freshness_criteria": 57, "dbt_state": 57, "mapped_classification_nam": [58, 207, 226], "map": [58, 68, 69, 125, 126, 207, 212, 226], "tag_allowed_valu": [58, 207, 226], "These": [58, 207, 226, 246, 247, 267], "denorm": [58, 207, 226], "tagattribut": [58, 207, 226], "eas": [58, 207, 226], "tag_attribut": [58, 207, 226], "tag_id": [58, 207, 226], "dbt_sourc": [59, 207, 212], "dbt_test_compiled_cod": 59, "compil": 59, "python": 59, "dbt_test_compiled_sql": 59, "dbt_test_error": 59, "error": [59, 259], "case": [59, 184, 249, 250, 251, 252], "dbt_test_languag": 59, "written": [59, 73], "dbt_test_raw_cod": 59, "raw": [59, 161], "dbt_test_raw_sql": 59, "dbt_test_stat": 59, "one": [59, 247, 249, 250, 251, 252, 267], "fail": 59, "warn": 59, "pass": [59, 73, 245], "dbt_test_statu": 59, "For": [59, 176, 211, 247, 259], "domo_id": 60, "dataset": [60, 63, 64, 134, 136, 137, 138, 139, 141, 142, 143, 144, 157, 167, 168, 188, 194, 195, 237], "domo_owner_id": 60, "domo_card_dashboard_count": 61, "card": [61, 62, 63], "domo_card_typ": 61, "domo": [61, 63, 64, 237], "domo_card_type_valu": 61, "domo_dashboard": 61, "domo_dataset": [61, 64], "domo_card": [62, 63], "domo_dashboard_card_count": 62, "domo_dashboard_children": 62, "domo_dashboard_par": 62, "domo_dataset_card_count": 63, "domo_dataset_column": 63, "domo_dataset_column_count": 63, "domo_dataset_last_run": 63, "iso": 63, "8601": 63, "represent": [63, 176, 245, 264], "domo_dataset_row_count": 63, "domo_dataset_column_typ": 64, "domo_dataset_qualified_nam": 64, "qualifi": [64, 176, 182, 190, 227, 267], "dynamo_db_partition_kei": [65, 68, 69], "dynamo_db_read_capacity_unit": [65, 68, 69], "strongli": [65, 68, 69], "consist": [65, 68, 69], "consum": [65, 68, 69, 81], "per": [65, 68, 69, 176, 245, 247], "throttlingexcept": [65, 68, 69], "dynamo_db_sort_kei": [65, 68, 69], "dynamo_db_statu": [65, 68, 69], "dynamo_db_write_capacity_unit": [65, 68, 69], "write": [65, 68, 69], "dynamo_db_t": [66, 67], "calculation_view_nam": [68, 69, 125, 126, 207, 212], "doe": [68, 69, 125, 126, 207, 212, 240, 247], "calculation_view_qualified_nam": [68, 69, 125, 126, 207, 212], "database_nam": [68, 69, 125, 126, 207, 212], "database_qualified_nam": [68, 69, 125, 126, 207, 212], "dynamodb": [68, 69, 237], "dynamo_db_secondary_index_projection_typ": 68, "external_loc": [68, 69, 125, 213, 225], "external_location_format": [68, 69, 125, 213, 225], "format": [68, 69, 125, 133, 213, 225, 230], "json": [68, 69, 109, 125, 176, 180, 189, 201, 213, 225, 245], "csv": [68, 69, 125, 213, 225], "parquet": [68, 69, 125, 213, 225], "external_location_region": [68, 69, 125, 213, 225], "is_profil": [68, 69, 125, 126, 207, 212], "profil": [68, 69, 125, 126, 207, 212], "is_query_preview": [68, 69, 95, 125, 213, 225, 236], "is_shard": [68, 69, 125, 213], "shard": [68, 69, 125, 213], "is_temporari": [68, 69, 95, 125, 213, 225, 236], "temporari": [68, 69, 95, 125, 213, 225, 236, 247], "last_profiled_at": [68, 69, 125, 126, 207, 212], "no_sql_schema_definit": [68, 69, 125, 126, 130], "partition_count": [68, 69, 125, 213, 225], "partition_list": [68, 69, 125, 213, 225], "partition_strategi": [68, 69, 125, 213, 225], "query_count": [68, 69, 125, 126, 207, 212], "query_count_updated_at": [68, 69, 125, 126, 207, 212], "query_user_count": [68, 69, 125, 126, 207, 212], "query_user_map": [68, 69, 125, 126, 207, 212], "thei": [68, 69, 125, 126, 207, 212, 246, 247], "row_count": [68, 69, 95, 125, 213, 225, 236], "schema_nam": [68, 69, 125, 126, 207, 212], "schema_qualified_nam": [68, 69, 125, 126, 207, 212], "size_byt": [68, 69, 95, 125, 213, 225, 236], "byte": [68, 69, 76, 82, 95, 125, 155, 180, 213, 225, 236], "table_nam": [68, 69, 125, 126, 207, 212], "table_qualified_nam": [68, 69, 125, 126, 207, 212], "view_nam": [68, 69, 86, 125, 126, 207, 212], "view_qualified_nam": [68, 69, 125, 126, 207, 212], "dynamo_db_global_secondary_index": 69, "dynamo_db_local_secondary_index": 69, "dynamo_db_table_gsi_count": 69, "global": [69, 176, 177], "dynamo_db_table_lsi_count": 69, "local": [69, 211, 245], "file_asset": 71, "file_path": 71, "give": 71, "onlin": 71, "file_typ": 71, "extens": [71, 260], "collection_qualified_nam": [72, 161], "parent_qualified_nam": [72, 161], "function_argu": 73, "argument": [73, 176, 245], "function_definit": 73, "function_is_extern": 73, "store": [73, 180, 230], "intern": [73, 82, 97, 139, 176, 218, 238, 239, 241, 242, 243, 245, 262], "function_is_memoiz": 73, "re": 73, "underli": 73, "function_is_secur": 73, "omit": 73, "unauthor": 73, "function_languag": 73, "program": 73, "function_return_typ": 73, "function_schema": 73, "function_typ": 73, "gcs_access_control": 74, "gcs_encryption_typ": 74, "algorithm": 74, "gcs_e_tag": 74, "gcs_meta_generation_id": 74, "precondit": 74, "detect": [74, 239], "metagener": 74, "meaning": 74, "context": [74, 245], "particular": 74, "gcs_requester_pai": 74, "request": [74, 238, 239, 240, 245, 247], "pai": 74, "header": 74, "gcs_storage_class": 74, "gcs_bucket_lifecycle_rul": 75, "lifecycl": 75, "rule": [75, 102], "bucket": [75, 76, 179, 180, 248, 249, 250, 251, 252, 253, 254, 256, 257], "gcs_bucket_retention_effective_tim": 75, "effect": 75, "retent": [75, 76], "gcs_bucket_retention_lock": 75, "lock": 75, "gcs_bucket_retention_period": 75, "period": 75, "gcs_bucket_retention_polici": 75, "gcs_bucket_versioning_en": 75, "enabl": [75, 155, 179, 180, 205, 268], "gcs_object": 75, "gcs_object_count": 75, "gcs_bucket": 76, "gcs_bucket_nam": 76, "gcs_bucket_qualified_nam": 76, "gcs_object_content_disposit": 76, "about": [76, 180, 239], "gcs_object_content_encod": 76, "encod": [76, 161, 176, 245], "gcs_object_content_languag": 76, "gcs_object_content_typ": 76, "gcs_object_crc32c_hash": 76, "crc32c": 76, "gcs_object_data_last_modified_tim": 76, "gcs_object_generation_id": 76, "gcs_object_hold_typ": 76, "hold": 76, "gcs_object_kei": 76, "gc": [76, 237], "gcs_object_md5hash": 76, "gcs_object_media_link": 76, "media": 76, "gcs_object_retention_expiration_d": 76, "expir": [76, 125], "date": [76, 125, 230], "gcs_object_s": 76, "kafka_consumer_group_member_count": 81, "member": 81, "kafka_consumer_group_topic_consumption_properti": 81, "consumpt": 81, "properti": [81, 133, 248, 250, 251, 252, 253, 254, 257, 262, 267], "kafka": [81, 237], "topic": [81, 82, 259], "kafka_top": 81, "kafka_topic_nam": 81, "kafka_topic_qualified_nam": 81, "kafka_consumer_group": 82, "kafka_topic_cleanup_polici": 82, "cleanup": 82, "kafka_topic_compression_typ": 82, "compress": 82, "kafka_topic_is_intern": 82, "kafka_topic_partitions_count": 82, "kafka_topic_record_count": 82, "unexpir": 82, "kafka_topic_replication_factor": 82, "factor": 82, "kafka_topic_retention_time_in_m": 82, "amount": 82, "retain": 82, "kafka_topic_segment_byt": 82, "segment": 82, "kafka_topic_size_in_byt": 82, "folder": [85, 88, 89, 99, 161, 169, 180, 199, 202, 203, 237], "folder_nam": [85, 89], "looker": [85, 86, 88, 89, 93, 237], "look": [85, 88, 89, 90, 92, 93], "sourcelast_updater_id": [85, 89], "source_last_accessed_at": [85, 89], "source_last_viewed_at": [85, 89], "source_metadata_id": 85, "source_user_id": [85, 89], "source_view_count": [85, 89], "web": [85, 89], "tile": [85, 89, 92, 93, 135, 137, 141, 143], "model_nam": [86, 87, 89], "explor": [86, 87, 90, 91], "project_nam": [86, 87, 90, 94], "source_connection_nam": 86, "sql_table_nam": 86, "declar": 86, "looker_explore_qualified_nam": 87, "looker_field_data_typ": 87, "deprec": [87, 92, 135, 136, 137, 141, 144, 161, 245, 246], "looker_times_us": 87, "looker_view_qualified_nam": 87, "source_definit": [87, 92], "looker_parent_fold": 88, "looker_sub_fold": 88, "source_child_count": 88, "subfold": 88, "source_content_metadata_id": [88, 89], "source_creator_id": 88, "source_parent_id": 88, "source_query_id": 89, "source_definition_databas": 92, "source_definition_schema": 92, "lookml_link_id": 93, "loomml": 93, "look_id": 93, "merge_result_id": 93, "merg": 93, "note_text": 93, "text": [93, 114, 174, 180, 184, 250, 251, 252, 257], "ad": [93, 184], "query_id": 93, "build": [93, 141, 267], "result_maker_id": 93, "resultmarkerlookup": 93, "entri": 93, "subtitle_text": 93, "subtitl": [93, 156], "looker_view_file_nam": 94, "looker_view_file_path": 94, "possibl": 95, "refresh_method": 95, "refresh": [95, 201, 238, 239, 240], "refresh_mod": 95, "mode": [95, 155, 167, 206, 237], "stale": [95, 206, 246], "stale_since_d": 95, "matillion_vers": [96, 100], "matillion_component_id": 97, "compon": [97, 99, 245], "matillion": [97, 100, 237], "matillion_component_implementation_id": 97, "matillion_component_last_five_run_statu": 97, "five": 97, "matillion_component_last_run_statu": 97, "latest": [97, 190], "matillion_component_linked_job": 97, "matillion_component_sql": 97, "matillion_job": [97, 100], "matillion_job_nam": 97, "belong": [97, 99, 100, 154], "matillion_job_qualified_nam": 97, "matillion_process": 97, "matillion_project": [98, 99], "matillion_project_count": 98, "matillion_job_component_count": 99, "matillion_job_path": 99, "manag": [99, 267], "multipl": [99, 184], "matillion_job_schedul": 99, "weekli": 99, "monthli": 99, "matillion_job_typ": 99, "orchestr": 99, "transform": 99, "matillion_project_nam": 99, "matillion_project_qualified_nam": 99, "matillion_environ": 100, "matillion_group": 100, "matillion_group_nam": 100, "matillion_group_qualified_nam": 100, "matillion_project_job_count": 100, "mc_incident_asset": 101, "mc_incident_id": 101, "mc_incident_sever": 101, "mc_incident_st": 101, "mc_incident_sub_typ": 101, "mc_incident_typ": 101, "mc_incident_warehous": 101, "mc_monitor_alert_condit": 102, "alert": 102, "mc_monitor_asset": 102, "mc_monitor_breach_r": 102, "rate": 102, "breach": 102, "mc_monitor_id": 102, "mc_monitor_incident_count": 102, "mc_monitor_namespac": 102, "namespac": [102, 237], "mc_monitor_rule_comparison": 102, "comparison": 102, "mc_monitor_rule_custom_sql": 102, "mc_monitor_rule_is_snooz": 102, "snooz": 102, "mc_monitor_rule_next_execution_tim": 102, "occur": [102, 247], "mc_monitor_rule_previous_execution_tim": 102, "previou": 102, "mc_monitor_rule_schedule_config": 102, "mc_monitor_rule_schedule_config_human": 102, "mc_monitor_rule_typ": 102, "mc_monitor_schedule_typ": 102, "fix": 102, "dynam": [102, 204], "mc_monitor_statu": 102, "mc_monitor_typ": 102, "health": 102, "stat": 102, "track": 102, "mc_monitor_warehous": 102, "metabase_collection_nam": 103, "metabase_collection_qualified_nam": 103, "metabase_color": 104, "metabase_dashboard": [104, 106], "metabase_is_personal_collect": 104, "metabase_namespac": 104, "metabase_quest": [104, 105], "metabase_slug": 104, "metabase_collect": [105, 106], "metabase_question_count": 105, "metabase_dashboard_count": 106, "metabase_queri": 106, "metabase_query_typ": 106, "micro_strategy_certified_at": 108, "certifi": [108, 217], "micro_strategy_certified_bi": 108, "micro_strategy_cube_nam": 108, "relat": [108, 114, 200, 217, 257, 265], "micro_strategy_cube_qualified_nam": 108, "micro_strategy_is_certifi": 108, "micro_strategy_loc": 108, "micro_strategy_project_nam": 108, "micro_strategy_project_qualified_nam": 108, "micro_strategy_report_nam": 108, "micro_strategy_report_qualified_nam": 108, "micro_strategy_attribute_form": 109, "displayformat": 109, "micro_strategy_cub": [109, 114, 115], "micro_strategy_metr": [109, 110, 113, 115, 116], "micro_strategy_project": [109, 110, 111, 112, 113, 114, 116, 117], "micro_strategy_report": [109, 114, 115], "micro_strategy_attribut": [110, 114, 115, 116], "micro_strategy_cube_queri": 110, "micro_strategy_cube_typ": 110, "olap": 110, "mtdi": 110, "micro_strategy_dossier_chapter_nam": 112, "chapter": 112, "dossier": [112, 117], "micro_strategy_visu": [112, 115], "micro_strategy_fact_express": 113, "fact": [113, 114, 213], "micro_strategy_attribute_nam": 114, "micro_strategy_attribute_qualified_nam": 114, "micro_strategy_fact": [114, 115], "micro_strategy_fact_nam": 114, "micro_strategy_fact_qualified_nam": 114, "micro_strategy_metric_children": 114, "micro_strategy_metric_express": 114, "specifii": 114, "micro_strategy_metric_par": 114, "micro_strategy_metric_parent_nam": 114, "micro_strategy_metric_parent_qualified_nam": 114, "micro_strategy_docu": 115, "micro_strategy_dossi": [115, 117], "micro_strategy_report_typ": 116, "grid": 116, "chart": [116, 119, 156], "micro_strategy_dossier_nam": 117, "visual": [117, 161, 164, 166, 175], "micro_strategy_dossier_qualified_nam": 117, "micro_strategy_visualization_typ": 117, "mode_id": 118, "mode_query_nam": 118, "mode_query_qualified_nam": 118, "mode_report_nam": 118, "mode_report_qualified_nam": 118, "mode_token": 118, "mode_workspace_nam": 118, "mode_workspace_qualified_nam": 118, "mode_workspace_usernam": 118, "mode_chart_typ": 119, "mode_queri": [119, 122], "mode_collection_st": 120, "mode_collection_typ": 120, "mode_report": [120, 121], "mode_workspac": 120, "mode_chart": 121, "mode_raw_queri": 121, "mode_report_import_count": 121, "mode_chart_count": 122, "mode_collect": [122, 123], "mode_collection_token": 122, "mode_is_publ": 122, "mode_is_shar": 122, "mode_query_count": 122, "mode_query_preview": 122, "mode_report_published_at": 122, "mode_collection_count": 123, "nosql": [124, 237], "mongo_db_collection_average_object_s": 125, "mongo_db_collection_expire_after_second": 125, "seri": 125, "mongo_db_collection_is_cap": 125, "cap": 125, "mongo_db_collection_maximum_document_count": 125, "mongo_db_collection_max_s": 125, "mongo_db_collection_num_index": 125, "mongo_db_collection_num_orphan_doc": 125, "orphan": 125, "mongo_db_collection_schema_definit": 125, "mongo_db_collection_subtyp": 125, "mongodb": [125, 237], "mongo_db_collection_time_field": 125, "each": [125, 239, 246], "mongo_db_collection_time_granular": 125, "closest": 125, "match": [125, 248, 249, 250, 251, 252, 253, 254, 256, 257], "span": 125, "consecut": 125, "incom": 125, "mongo_db_collection_total_index_s": 125, "mongo_db_databas": 125, "mongo_db_collect": 126, "mongo_db_database_collection_count": 126, "mc_asset_qualified_nam": 127, "mc_label": 127, "cube_dimension_nam": 128, "itself": [128, 180, 246], "cube_dimension_qualified_nam": 128, "cube_hierarchy_nam": 128, "cube_hierarchy_qualified_nam": 128, "cube_nam": 128, "cube_qualified_nam": 128, "children_fold": 129, "children_queri": 129, "persona_group": 132, "persona_us": 132, "role_id": [132, 245], "power_bi_endors": 133, "endors": 133, "power": [133, 142], "bi": [133, 237], "power_bi_format_str": 133, "format_str": 133, "mdx": 133, "cell": 133, "power_bi_is_hidden": 133, "hidden": [133, 193, 201], "power_bi_table_qualified_nam": 133, "dataset_qualified_nam": [134, 139, 141, 142], "power_bi_column_data_categori": 134, "power_bi_column_data_typ": 134, "power_bi_column_summarize_bi": 134, "aggreg": [134, 248, 249, 250, 251, 252, 253, 254, 256, 257, 267], "function": [134, 176, 188, 237, 245, 246, 250, 251, 252], "summar": 134, "power_bi_sort_by_column": 134, "workspace_qualified_nam": [134, 135, 136, 137, 139, 140, 141, 142, 143], "tile_count": 135, "web_url": [135, 136, 137, 141, 144], "sourceurl": [135, 136, 137, 141], "dataflow": [136, 137, 144], "datasourc": [137, 138, 188, 215, 217, 218, 221, 223], "connection_detail": 138, "power_bi_is_external_measur": 139, "power_bi_measure_express": 139, "dax": 139, "report_qualified_nam": 140, "page": [140, 141, 191, 196, 197], "page_count": 141, "power_bi_table_column_count": 142, "power_bi_table_measure_count": 142, "power_bi_table_source_express": 142, "m": 142, "dashboard_qualified_nam": 143, "dashboard_count": 144, "dataflow_count": 144, "dataset_count": 144, "report_count": [144, 183], "preset_dashboard_id": 145, "preset_dashboard_qualified_nam": 145, "preset_workspace_id": 145, "preset_workspace_qualified_nam": 145, "preset_chart_description_markdown": 146, "preset_chart_form_data": 146, "preset_dashboard": [146, 148, 149], "preset_chart": 147, "preset_dashboard_changed_by_nam": 147, "preset_dashboard_changed_by_url": 147, "preset_dashboard_chart_count": 147, "preset_dashboard_is_managed_extern": 147, "preset_dashboard_is_publish": 147, "preset_dashboard_thumbnail_url": 147, "preset_dataset": 147, "preset_workspac": 147, "preset_dataset_datasource_nam": 148, "preset_dataset_id": 148, "preset_dataset_typ": 148, "preset_workspace_cluster_id": 149, "preset_workspace_dashboard_count": 149, "preset_workspace_dataset_count": 149, "preset_workspace_deployment_id": 149, "preset_workspace_hostnam": 149, "preset_workspace_is_in_maintenance_mod": 149, "preset_workspace_public_dashboards_allow": 149, "preset_workspace_region": 149, "preset_workspace_statu": 149, "purpose_classif": 153, "qlik_app_id": 154, "app": [154, 155, 211], "qlik_app_qualified_nam": 154, "qlik_id": 154, "qlik_is_publish": 154, "publish": [154, 165, 172, 200, 217], "qlik_owner_id": 154, "qlik_qri": 154, "qri": 154, "qlik_space_id": 154, "space": [154, 155, 159], "qlik_space_qualified_nam": 154, "qlik_app_static_byte_s": 155, "static": [155, 267], "qlik_has_section_access": 155, "section": 155, "mask": 155, "qlik_is_direct_query_mod": 155, "qlik_is_encrypt": 155, "qlik_origin_app_id": 155, "originappid": 155, "qlik_sheet": [155, 156], "qlik_spac": [155, 157], "qlik_chart_footnot": 156, "footnot": 156, "qlik_chart_orient": 156, "orient": 156, "qlik_chart_subtitl": 156, "qlik_chart_typ": 156, "bar": 156, "graph": [156, 265], "pie": 156, "qlik_dataset_subtyp": 157, "qlik_dataset_technical_nam": 157, "technic": [157, 230], "qlik_dataset_typ": 157, "qix": 157, "df": 157, "snowflak": 157, "qlik_dataset_uri": 157, "uri": 157, "qlik_app": [158, 159], "qlik_chart": 158, "qlik_sheet_is_approv": 158, "approv": 158, "qlik_dataset": 159, "qlik_space_typ": 159, "privat": [159, 161], "share": [159, 161, 169], "qlikspac": [160, 237], "default_database_qualified_nam": 161, "default_schema_qualified_nam": 161, "is_priv": 161, "is_sql_snippet": 161, "snippet": 161, "is_visual_queri": 161, "long_raw_queri": 161, "raw_queri": 161, "longrawqueri": 161, "raw_query_text": 161, "variables_schema_base64": 161, "base64": 161, "variabl": 161, "visual_builder_schema_base64": 161, "builder": 161, "quick_sight_id": 162, "quick_sight_sheet_id": 162, "quick_sight_sheet_nam": 162, "quick_sight_analysis_calculated_field": 163, "analysi": [163, 164, 228, 230, 249, 251, 252, 257], "quick_sight_analysis_filter_group": 163, "quick_sight_analysis_fold": 163, "quick_sight_analysis_parameter_declar": 163, "quick_sight_analysis_statu": 163, "creation_in_progress": 163, "update_success": 163, "quick_sight_analysis_visu": 163, "quick_sight_analysi": 164, "quick_sight_analysis_qualified_nam": 164, "quicksight": [164, 237], "quick_sight_dashboard_fold": 165, "quick_sight_dashboard_last_published_tim": 165, "quick_sight_dashboard_published_version_numb": 165, "quick_sight_dashboard_visu": 165, "quick_sight_dashboard": [166, 169], "quick_sight_dashboard_qualified_nam": 166, "quick_sight_dataset_column_count": 167, "quick_sight_dataset_field": 167, "quick_sight_dataset_fold": 167, "quick_sight_dataset_import_mod": 167, "import": 167, "spice": 167, "direct_queri": 167, "quick_sight_dataset": [168, 169], "quick_sight_dataset_field_typ": 168, "integ": [168, 230], "quick_sight_dataset_qualified_nam": 168, "quick_sight_analys": 169, "quick_sight_folder_hierarchi": 169, "quick_sight_folder_typ": 169, "templat": 171, "redash_is_publish": 172, "redash_dashboard_widget_count": 173, "widget": [173, 199, 203], "redash_query_last_executed_at": 174, "redash_query_last_execution_runtim": 174, "elaps": 174, "redash_query_paramet": 174, "redash_query_schedul": 174, "redash_query_schedule_human": 174, "schdule": 174, "overview": 174, "tab": 174, "redash_query_sql": 174, "redash_visu": 174, "redash_queri": 175, "redash_query_nam": 175, "redash_query_qualified_nam": 175, "redash_visualization_typ": 175, "assigned_term": 176, "internalkeywordtextfield": 176, "atlan_tag": 176, "directli": 176, "created_bi": 176, "internalkeywordfield": 176, "create_tim": 176, "internalnumericfield": 176, "propagated_atlan_tag": 176, "propag": [176, 245, 261], "qualified_nam": [176, 245], "fulli": [176, 182], "v": 176, "super_type_nam": 176, "super": 176, "type_nam": 176, "so": [176, 245, 246, 249, 251, 252, 257, 258], "updated_bi": 176, "update_tim": 176, "arg": [176, 247, 261, 262], "kwarg": [176, 261, 262], "exclud": [176, 245], "suppli": [176, 245], "dump": [176, 245], "other": [176, 245, 246, 247, 259, 267], "is_glob": 177, "resource_metadata": 177, "aw": [178, 237], "s3encrypt": 178, "s3e_tag": 178, "s3bucket_versioning_en": 179, "s3object_count": 179, "s3bucket_nam": 180, "s3bucket_qualified_nam": 180, "s3object_content_disposit": 180, "s3object_content_typ": 180, "plain": 180, "s3object_kei": 180, "ident": 180, "usual": 180, "concaten": 180, "prefix": [180, 190, 249, 250, 251, 252], "s3object_last_modified_tim": 180, "never": 180, "s3object_s": 180, "s3object_storage_class": 180, "intellig": 180, "glacier": 180, "s3object_version_id": 180, "api_nam": 182, "organization_qualified_nam": 182, "dashboard_typ": 183, "salesforc": [183, 186, 187, 237], "source_id": [183, 186, 187], "default_value_formula": 184, "formula": [184, 215, 218], "inline_help_text": 184, "help": 184, "is_calcul": 184, "is_case_sensit": 184, "is_encrypt": 184, "is_polymorphic_foreign_kei": 184, "record": 184, "is_uniqu": 184, "lookup_object": 184, "object_qualified_nam": 184, "picklist_valu": 184, "pick": 184, "while": 184, "field_count": 185, "is_custom": 185, "is_merg": 185, "mergabl": 185, "is_query": 185, "queryabl": 185, "lookup_field": 185, "detail_column": 187, "report_typ": 187, "linked_schema_qualified_nam": 188, "depend": 188, "concept": 188, "mostli": 188, "bigqueri": 188, "analyt": [188, 230], "hub": 188, "procedur": [188, 237], "snowflake_pip": 188, "snowflake_stream": 188, "snowflake_tag": 188, "table_count": 188, "views_count": 188, "schema_registry_schema_id": 189, "registri": 189, "schema_registry_schema_typ": 189, "protobuf": 189, "schema_registry_subject_base_nam": 190, "base": [190, 201, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258], "subject": 190, "without": 190, "schema_registry_subject_governing_asset_qualified_nam": 190, "govern": 190, "schema_registry_subject_is_key_schema": 190, "schema_registry_subject_latest_schema_definit": 190, "schema_registry_subject_latest_schema_vers": 190, "schema_registry_subject_schema_compat": 190, "compat": 190, "sigma_data_element_nam": 191, "element": [191, 192, 196, 267], "sigma_data_element_qualified_nam": 191, "sigma_page_nam": 191, "sigma_page_qualified_nam": 191, "sigma_workbook_nam": 191, "workbook": [191, 197, 215, 216, 217, 218, 221, 223, 224], "sigma_workbook_qualified_nam": 191, "sigma_data_element_field": 192, "sigma_data_element_field_count": 192, "sigma_data_element_queri": 192, "sigma_data_element_typ": 192, "sigma_pag": [192, 197], "sigma_data_el": [193, 196], "sigma_data_element_field_formula": 193, "sigma_data_element_field_is_hidden": 193, "sigma_dataset_column": 194, "sigma_dataset_column_count": 194, "sigma_dataset": 195, "sigma_dataset_nam": 195, "sigma_dataset_qualified_nam": 195, "sigma_data_element_count": 196, "sigma_workbook": 196, "sigma_page_count": 197, "sisense_dashboard_folder_qualified_nam": 199, "sisense_dashboard_widget_count": 199, "sisense_datamodel": [199, 201], "sisense_fold": [199, 203], "sisense_widget": [199, 201, 202], "sisense_dashboard": [200, 202, 203], "sisense_datamodel_last_build_tim": 200, "datamodel": [200, 201], "built": 200, "sisense_datamodel_last_publish_tim": 200, "sisense_datamodel_last_successful_build_tim": 200, "successfulli": 200, "sisense_datamodel_relation_typ": 200, "extract": [200, 217], "regular": [200, 201, 250, 251, 252], "live": 200, "sisense_datamodel_revis": 200, "revis": 200, "sisense_datamodel_serv": 200, "hostnam": 200, "sisense_datamodel_t": [200, 203], "sisense_datamodel_table_count": 200, "sisense_datamodel_typ": 200, "sisense_datamodel_qualified_nam": 201, "sisense_datamodel_table_column_count": 201, "sisense_datamodel_table_express": 201, "sisense_datamodel_table_is_hidden": 201, "sisens": [201, 237], "sisense_datamodel_table_is_materi": 201, "materialis": 201, "sisense_datamodel_table_live_query_set": 201, "livequeri": 201, "sisense_datamodel_table_schedul": 201, "sisense_datamodel_table_typ": 201, "sisense_child_fold": 202, "sisense_folder_parent_folder_qualified_nam": 202, "sisense_parent_fold": 202, "sisense_widget_column_count": 203, "sisense_widget_dashboard_qualified_nam": 203, "sisense_widget_folder_qualified_nam": 203, "sisense_widget_s": 203, "sisense_widget_sub_typ": 203, "pipe": 205, "snowflake_pipe_is_auto_ingest_en": 205, "auto": 205, "ingest": 205, "snowflake_pipe_notification_channel_nam": 205, "channel": 205, "snowflake_stream_is_stal": 206, "snowflake_stream_mod": 206, "snowflake_stream_source_typ": 206, "snowflake_stream_stale_aft": 206, "snowflake_stream_typ": 206, "append": [206, 267], "sql_dbt_model": [207, 212], "sql_dbt_sourc": [207, 212], "soda_check_asset": 209, "soda_check_column": 209, "soda_check_definit": 209, "soda_check_evaluation_statu": 209, "soda_check_id": 209, "soda_check_incident_count": 209, "soda_check_last_scan_at": 209, "spark_run_end_tim": 210, "eg": [210, 211], "1695673598218": 210, "spark_run_open_lineage_st": 210, "complet": [210, 259], "spark_run_open_lineage_vers": 210, "spark_run_start_tim": 210, "spark_run_vers": 210, "3": 210, "4": [210, 211], "spark_app_nam": 211, "spark": [211, 237], "extract_raw_data": 211, "spark_mast": 211, "master": 211, "7077": 211, "datasource_qualified_nam": [215, 218], "data_categori": 215, "project_hierarchi": [215, 216, 217, 218, 219, 220, 221, 223, 224], "project_qualified_nam": [215, 216, 217, 218, 219, 220, 223, 224], "unknown": [215, 218], "site_qualified_nam": [215, 216, 217, 218, 219, 220, 221, 223, 224], "site": [215, 216, 217, 218, 219, 220, 221, 223, 224], "tableau_data_typ": 215, "tableau": [215, 217, 218, 237], "top_level_project_qualified_nam": [215, 216, 217, 218, 219, 220, 221, 223, 224], "upstream_field": [215, 218], "upstream": [215, 217, 218], "workbook_qualified_nam": [215, 216, 217, 218, 224], "worksheet": [215, 216, 218, 223, 224, 230], "child": [216, 217, 218, 219, 220, 221, 223, 224], "certification_not": 217, "cerfifi": 217, "mark": 217, "cerifi": 217, "certifier_display_nam": 217, "has_extract": 217, "is_certifi": 217, "is_publish": 217, "embed": [217, 246], "upstream_datasourc": 217, "upstream_t": [217, 218], "datasource_field_typ": 218, "fully_qualified_nam": 218, "tableau_datasource_field_bin_s": 218, "bin": 218, "tableau_datasource_field_data_categori": 218, "tableau_datasource_field_data_typ": 218, "tableau_datasource_field_formula": 218, "tableau_datasource_field_rol": 218, "upstream_column": 218, "input_field": 219, "flow": [219, 221], "output_field": 219, "output_step": 219, "step": 219, "child_project": 221, "is_top_level_project": 221, "parent_project": 221, "top_level_project_nam": 223, "calculated_field": 224, "datasource_field": 224, "child_table_partit": 225, "constraint": [225, 267], "parent_t": 225, "parent_table_partit": 225, "tag_attachment_string_valu": 227, "tag_qualified_nam": 227, "thoughtspot_chart_typ": 228, "thoughtspot_column_count": 228, "thoughtspot_join_count": 228, "join": 228, "thoughtspot_question_text": 228, "thoughtspot": [229, 237], "thoughtspot_column_data_typ": 230, "float": [230, 267], "boolean": [230, 248, 262], "thoughtspot_column_typ": 230, "categor": 230, "thoughtspot_t": 230, "thoughtspot_table_qualified_nam": 230, "thoughtspot_view": 230, "thoughtspot_view_qualified_nam": 230, "thoughtspot_worksheet": 230, "thoughtspot_worksheet_qualified_nam": 230, "thoughtspot_liveboard": 231, "thoughtspot_liveboard_nam": 231, "liveboard": 231, "dashlet": 231, "thoughtspot_liveboard_qualified_nam": 231, "thoughtspot_dashlet": 232, "thoughtspot_column": [233, 234, 235], "you": [237, 245, 246, 247, 258, 259, 269], "interact": [237, 245, 269], "follow": 237, "differ": [237, 259], "adlsaccount": 237, "adlscontain": 237, "adlsobject": 237, "apipath": 237, "apispec": 237, "accesscontrol": 237, "airflow": 237, "airflowdag": 237, "airflowtask": 237, "atlasglossari": [237, 245], "atlasglossarycategori": [237, 245], "atlasglossaryterm": [237, 245], "authpolici": 237, "authservic": 237, "azureeventhub": 237, "azureeventhubconsumergroup": 237, "biprocess": 237, "badg": 237, "calculationview": 237, "cloud": 237, "cognit": 237, "cogniteasset": 237, "cogniteev": 237, "cognitefil": 237, "cognitesequ": 237, "cognitetimeseri": 237, "columnprocess": 237, "cubedimens": 237, "cubefield": 237, "cubehierarchi": 237, "datadomain": 237, "datamesh": 237, "dataproduct": 237, "dataqu": 237, "datastudio": 237, "datastudioasset": 237, "dbtcolumnprocess": 237, "dbtmetric": 237, "dbtmodel": 237, "dbtmodelcolumn": 237, "dbtprocess": 237, "dbtsourc": 237, "dbttag": 237, "dbttest": 237, "domocard": 237, "domodashboard": 237, "domodataset": 237, "domodatasetcolumn": 237, "dynamodbglobalsecondaryindex": 237, "dynamodblocalsecondaryindex": 237, "dynamodbsecondaryindex": 237, "dynamodbt": 237, "eventstor": 237, "gcsbucket": 237, "gcsobject": 237, "infrastructur": 237, "kafkatop": 237, "lookerdashboard": 237, "lookerexplor": 237, "lookerfield": 237, "lookerfold": 237, "lookerlook": 237, "lookermodel": 237, "lookerproject": 237, "lookerqueri": 237, "lookertil": 237, "lookerview": 237, "mcincid": 237, "mcmonitor": 237, "materialisedview": 237, "matillioncompon": 237, "matilliongroup": 237, "matillionjob": 237, "matillionproject": 237, "metabas": 237, "metabasecollect": 237, "metabasedashboard": 237, "metabasequest": 237, "microstrategi": 237, "microstrategyattribut": 237, "microstrategycub": 237, "microstrategydocu": 237, "microstrategydossi": 237, "microstrategyfact": 237, "microstrategymetr": 237, "microstrategyproject": 237, "microstrategyreport": 237, "microstrategyvisu": 237, "modechart": 237, "modecollect": 237, "modequeri": 237, "modereport": 237, "modeworkspac": 237, "mongodbcollect": 237, "mongodbdatabas": 237, "montecarlo": 237, "multidimensionaldataset": 237, "objectstor": 237, "persona": [237, 245, 263, 268], "powerbi": 237, "powerbicolumn": 237, "powerbidashboard": 237, "powerbidataflow": 237, "powerbidataset": 237, "powerbidatasourc": 237, "powerbimeasur": 237, "powerbipag": 237, "powerbireport": 237, "powerbit": 237, "powerbitil": 237, "powerbiworkspac": 237, "preset": 237, "presetchart": 237, "presetdashboard": 237, "presetdataset": 237, "presetworkspac": 237, "processexecut": 237, "qlik": 237, "qlikapp": 237, "qlikchart": 237, "qlikdataset": 237, "qliksheet": 237, "qlikstream": 237, "quicksightanalysi": 237, "quicksightanalysisvisu": 237, "quicksightdashboard": 237, "quicksightdashboardvisu": 237, "quicksightdataset": 237, "quicksightdatasetfield": 237, "quicksightfold": 237, "readmetempl": 237, "redash": 237, "redashdashboard": 237, "redashqueri": 237, "redashvisu": 237, "referenc": 237, "s3bucket": 237, "s3object": 237, "saa": 237, "salesforcedashboard": 237, "salesforcefield": 237, "salesforceobject": 237, "salesforceorgan": 237, "salesforcereport": 237, "schemaregistri": 237, "schemaregistrysubject": 237, "sigma": 237, "sigmadatael": 237, "sigmadataelementfield": 237, "sigmadataset": 237, "sigmadatasetcolumn": 237, "sigmapag": 237, "sigmaworkbook": 237, "sisensedashboard": 237, "sisensedatamodel": 237, "sisensedatamodelt": 237, "sisensefold": 237, "sisensewidget": 237, "snowflakedynamict": 237, "snowflakepip": 237, "snowflakestream": 237, "snowflaketag": 237, "sodacheck": 237, "sparkjob": 237, "tablepartit": 237, "tableaucalculatedfield": 237, "tableaudashboard": 237, "tableaudatasourc": 237, "tableaudatasourcefield": 237, "tableauflow": 237, "tableaumetr": 237, "tableauproject": 237, "tableausit": 237, "tableauworkbook": 237, "tableauworksheet": 237, "tagattach": 237, "thoughtspotansw": 237, "thoughtspotcolumn": 237, "thoughtspotdashlet": 237, "thoughtspotliveboard": 237, "thoughtspott": 237, "thoughtspotview": 237, "thoughtspotworksheet": 237, "atlan_tag_cach": 238, "typedef_cli": [238, 239, 240], "typedefcli": [238, 239, 240], "lazili": [238, 239, 240, 241, 242, 243], "load": [238, 239, 240, 241, 242, 243], "translat": [238, 239, 241, 242, 243, 244, 267], "get_id_for_nam": [238, 239, 241, 242, 243], "get_name_for_id": [238, 239, 241, 242, 243], "idstr": [238, 239, 241, 242, 243], "get_source_tags_attr_id": 238, "captur": [238, 255], "refresh_cach": [238, 239, 240], "full": [238, 239, 240], "custom_metadata_cach": 239, "get_all_custom_attribut": 239, "include_delet": 239, "force_refresh": 239, "attributedef": [239, 267], "those": [239, 246, 247], "otherwis": [239, 246, 249, 250, 251, 252], "rais": [239, 240, 241, 242, 243, 245], "notfounderror": [239, 240, 247], "cannot": 239, "found": 239, "get_attr_id_for_nam": 239, "set_nam": [239, 249], "attr_nam": 239, "get_attr_name_for_id": 239, "set_id": 239, "attr_id": 239, "given": [239, 240, 241, 242, 243, 247, 262], "get_attribute_def": 239, "invalidrequesterror": [239, 247], "get_attribute_for_search_result": 239, "singl": 239, "strictli": [239, 249, 253, 254], "inclus": [239, 249, 253, 254], "get_attributes_for_search_result": 239, "get_custom_metadata_def": 239, "custommetadatadef": [239, 267], "structur": 239, "is_attr_archiv": 239, "param": [239, 248, 249, 250, 251, 252, 253, 254, 256, 257, 267], "logicerror": [239, 247], "enum_cach": 240, "enumer": [240, 258, 265, 267], "get_by_nam": [240, 245], "enumdef": [240, 267], "group_cach": 241, "group_client": 241, "groupclient": 241, "get_id_for_alia": 241, "validate_alias": 241, "alias": 241, "iter": [241, 242, 243], "valueerror": [241, 242, 243], "role_cach": 242, "role_cli": 242, "rolecli": 242, "validate_idstr": 242, "user_cach": 243, "user_cli": 243, "usercli": 243, "token_cli": 243, "tokencli": 243, "get_id_for_email": 243, "validate_nam": 243, "frequent": 244, "atlantagcach": 244, "custommetadatacach": 244, "enumcach": 244, "groupcach": 244, "rolecach": 244, "usercach": 244, "atlancli": [245, 246], "base_url": 245, "liter": 245, "httpurl": 245, "api_kei": 245, "add_api_token_as_admin": 245, "asset_guid": 245, "impersonation_token": 245, "assetmutationrespons": 245, "add_as_admin": 245, "add_api_token_as_view": 245, "add_as_view": 245, "add_atlan_tag": 245, "asset_typ": 245, "atlan_tag_nam": 245, "remove_propagation_on_delet": 245, "restrict_lineage_propag": 245, "restrict_propagation_through_hierarchi": 245, "add_user_to_group": 245, "group_id": 245, "add_to_group": 245, "append_term": 245, "change_user_rol": 245, "change_rol": 245, "construct": 245, "_fields_set": 245, "setstr": 245, "__dict__": 245, "__fields_set__": 245, "trust": 245, "pre": 245, "respect": 245, "behav": 245, "sinc": 245, "add": [245, 267], "copi": 245, "abstractsetintstr": 245, "mappingintstrani": 245, "dictstrani": 245, "deep": 245, "choos": 245, "take": 245, "preced": 245, "make": [245, 246], "create_api_token": 245, "validity_second": 245, "apitoken": 245, "token": [245, 247, 249, 251, 252, 257], "create_group": 245, "atlangroup": [245, 263], "user_id": 245, "creategrouprespons": 245, "create_typedef": 245, "typedef": [245, 269], "typedefrespons": [245, 267], "create_us": 245, "atlanus": [245, 268], "delete_entity_by_guid": 245, "by_alia": 245, "skip_default": 245, "exclude_unset": 245, "exclude_default": 245, "exclude_non": 245, "dictionari": 245, "find_category_by_nam": 245, "constrainedstrvalu": 245, "glossary_nam": 245, "strictstr": [245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "find_category_fast_by_nam": 245, "glossary_qualified_nam": 245, "find_connections_by_nam": 245, "connector_typ": 245, "atlanconnectortyp": 245, "find_glossary_by_nam": 245, "find_personas_by_nam": 245, "find_purposes_by_nam": 245, "find_term_by_nam": 245, "find_term_fast_by_nam": 245, "get_admin_ev": 245, "admin_request": 245, "admineventrequest": 245, "admineventrespons": 245, "admin": 245, "get_all_group": 245, "limit": [245, 265], "20": 245, "get_al": 245, "get_all_rol": 245, "rolerespons": 245, "self": 245, "get_all_typedef": 245, "get_all_us": 245, "get_api_token_by_id": 245, "client_id": 245, "get_by_id": 245, "get_api_token_by_nam": 245, "get_api_token": 245, "post_filt": 245, "offset": [245, 261, 265], "apitokenrespons": 245, "get_asset_by_guid": 245, "min_ext_info": 245, "ignore_relationship": 245, "get_by_guid": 245, "get_asset_by_qualified_nam": 245, "get_by_qualified_nam": 245, "get_current_us": 245, "userminimalrespons": 245, "get_curr": 245, "get_default_cli": 245, "get_group_by_nam": 245, "get_group_memb": 245, "userrespons": 245, "get_memb": 245, "get_group": 245, "grouprespons": 245, "get_groups_for_us": 245, "get_keycloak_ev": 245, "keycloak_request": 245, "keycloakeventrequest": 245, "keycloakeventrespons": 245, "get_lineag": 245, "lineage_request": 245, "lineagerequest": [245, 265], "lineagerespons": [245, 265], "older": 245, "slower": 245, "receiv": [245, 246, 247], "enhanc": 245, "get_lineage_list": 245, "atlanerror": [245, 247], "commun": 245, "issu": [245, 247], "lineagelistresult": 245, "get_rol": 245, "get_typedef": 245, "type_categori": 245, "atlantypecategori": [245, 267], "get_user_by_usernam": 245, "get_by_usernam": 245, "get_us": 245, "get_users_by_email": 245, "get_by_email": 245, "callabl": 245, "models_as_dict": 245, "dumps_kwarg": 245, "max_retri": 245, "10": [245, 248, 249, 250, 251, 252, 253, 254, 256, 257], "redirect": 245, "manger": 245, "temporarili": 245, "connnect": 245, "origin": [245, 246], "restor": 245, "exit": 245, "parse_queri": 245, "queryparserrequest": 245, "parsedqueri": 245, "explan": 245, "purge_api_token": 245, "purg": 245, "purge_entity_by_guid": 245, "purge_by_guid": 245, "purge_group": 245, "purge_typedef": 245, "typedef_typ": 245, "remove_announc": 245, "remove_atlan_tag": 245, "remove_certif": 245, "remove_custom_metadata": 245, "cm_name": 245, "remove_term": 245, "remove_users_from_group": 245, "remove_us": 245, "replace_custom_metadata": 245, "custom_metadata": [245, 262, 267], "custommetadatadict": [245, 262], "replace_term": 245, "retrieve_minim": 245, "replace_atlan_tag": 245, "overwrite_custom_metadata": 245, "save_merging_cm": 245, "save_replacing_cm": 245, "indexsearchrequest": 245, "indexsearchresult": 245, "set_default_cli": 245, "update_announc": 245, "update_api_token": 245, "update_certif": 245, "update_custom_metadata_attribut": 245, "update_forward_ref": 245, "localn": 245, "try": [245, 246, 247], "forwardref": 245, "globaln": 245, "update_group": 245, "update_merging_cm": 245, "update_replacing_cm": 245, "update_typedef": 245, "update_us": 245, "upload_imag": 245, "filenam": [245, 260], "atlanimag": [245, 260], "upsert": 245, "upsert_merging_cm": 245, "upsert_replacing_cm": 245, "replace_atlan_tagss": 245, "simplifi": [246, 249], "implement": 246, "handl": [246, 259], "split": 246, "overal": 246, "processor": 246, "small": 246, "piec": 246, "atlan_event_handl": 246, "client": [246, 259], "calculate_chang": 246, "current_view": 246, "minim": [246, 267], "form": 246, "memori": 246, "typic": 246, "want": 246, "trim_to_requir": 246, "risk": 246, "accident": 246, "clobber": 246, "someon": 246, "mai": 246, "subsequ": 246, "also": [246, 249, 250, 251, 252, 254, 257], "your": [246, 247, 259], "has_chang": 246, "actual": [246, 248, 249, 250, 251, 252, 253, 254, 256, 257], "infinit": 246, "loop": 246, "more": [246, 247, 250, 251, 252, 267], "send": 246, "get_current_st": 246, "from_ev": 246, "info": 246, "handler": 246, "decis": 246, "realli": 246, "still": 246, "could": 246, "meant": 246, "idempot": 246, "avoid": 246, "repeatedli": 246, "blindli": 246, "equal": [246, 248, 249, 250, 251, 252, 253, 254], "It": 246, "like": [246, 259, 269], "would": 246, "rather": 246, "than": [246, 249, 253, 254], "entir": 246, "relev": 246, "against": [246, 247, 249, 250, 251, 252, 253, 254, 257], "need": 246, "save_chang": 246, "changed_asset": 246, "persist": 246, "upsert_chang": 246, "validate_prerequisit": 246, "atlanev": 246, "prerequisit": 246, "expect": 246, "action": 246, "confirm": 246, "met": 246, "except": 247, "error_cod": 247, "errorinfo": 247, "apiconnectionerror": 247, "intermitt": 247, "network": 247, "outag": 247, "inabl": 247, "due": 247, "incorrect": 247, "some": [247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259], "reason": 247, "insuffici": 247, "apierror": 247, "sdk": 247, "problem": 247, "wai": 247, "interpret": 247, "basic": 247, "catch": 247, "fit": 247, "authenticationerror": 247, "permissionerror": 247, "permiss": 247, "carri": [247, 249, 251, 252, 257], "natur": 247, "asynchron": 247, "grant": 247, "conflicterror": 247, "hit": 247, "conflict": 247, "alreadi": 247, "ratelimiterror": 247, "accept": 247, "ip": 247, "By": 247, "1800": 247, "minut": 247, "exce": 247, "begin": 247, "unexpect": 247, "aris": 247, "ever": 247, "experienc": 247, "immedi": 247, "bug": 247, "atlan_field_nam": [248, 250, 251, 252, 253, 254, 255, 256, 257], "boolean_field_nam": 248, "truthi": 248, "elast": [248, 250, 251, 252, 253, 254, 257], "bucket_bi": [248, 249, 250, 251, 252, 253, 254, 256, 257], "eq": [248, 249, 250, 251, 252, 253, 254], "strictbool": [248, 249], "whose": [248, 249, 250, 251, 252, 253, 254, 257], "exactli": [248, 249, 250, 251, 252, 253, 254], "has_any_valu": [248, 249, 250, 251, 252, 253, 254, 256, 257], "non": [248, 249, 250, 251, 252, 253, 254, 256, 257], "matter": [248, 249, 250, 251, 252, 253, 254, 256, 257], "what": [248, 249, 250, 251, 252, 253, 254, 256, 257, 269], "in_lineag": [248, 250, 251, 252, 253, 254, 257], "lineagefilterfieldboolean": 248, "appropri": [248, 250, 251, 252, 253, 254, 257], "subset": [248, 250, 251, 252, 253, 254, 257], "sortord": [248, 249, 250, 251, 252, 253, 254, 256, 257], "ascend": [248, 249, 250, 251, 252, 253, 254, 256, 257], "sortitem": [248, 249, 250, 251, 252, 253, 254, 256, 257], "attribute_nam": 249, "util": 249, "minimum": [249, 253, 254], "strictint": [249, 253, 254], "strictfloat": [249, 253, 254], "datetim": 249, "case_insensit": [249, 250, 251, 252], "irrespect": [249, 250, 251, 252], "gt": [249, 253, 254], "greater": [249, 253, 254], "compar": [249, 253, 254], "gte": [249, 253, 254], "lt": [249, 253, 254], "less": [249, 253, 254], "lte": [249, 253, 254], "textual": [249, 251, 252, 257], "analyz": [249, 250, 251, 252, 257], "accord": [249, 251, 252, 257], "stem": [249, 251, 252, 257], "startswith": [249, 250, 251, 252], "insensit": [249, 250, 251, 252], "keyword_field_nam": [250, 251, 252], "keyword": [250, 251, 252], "fuzzi": 250, "lineagefilterfieldstr": [250, 251, 252, 257], "regexp": [250, 251, 252], "particularli": [250, 251, 252], "complic": [250, 251, 252], "convent": [250, 251, 252], "regex": [250, 251, 252], "pattern": [250, 251, 252], "design": [250, 251, 252], "wildcard": [250, 251, 252], "text_field_nam": [251, 252, 257], "stemmed_field_nam": 252, "variat": 252, "match_stem": 252, "numeric_field_nam": [253, 254], "avg": [253, 254], "lineagefilterfieldnumer": [253, 254], "max": [253, 254], "min": [253, 254], "rank_field_nam": 254, "rank": 254, "inher": 255, "elastic_field_nam": 256, "dictat": 258, "rememb": 258, "exact": 258, "spell": 258, "capit": 258, "subclass": 258, "searchablefield": 258, "custommetadatafield": 258, "integr": 259, "autom": 259, "thing": 259, "inevit": 259, "ll": 259, "deal": 259, "mani": 259, "too": 259, "deeper": 259, "event": [259, 269], "atlan_imag": 260, "createdat": 260, "updatedat": 260, "rawnam": 260, "contenttyp": 260, "files": 260, "isencrypt": 260, "redirecturl": 260, "isupload": 260, "uploadedat": 260, "isarchiv": 260, "atlantagnam": 261, "get_deleted_sentinel": [261, 262], "Will": [261, 262], "sentinel": [261, 262], "entityguid": 261, "removepropagationsonentitydelet": 261, "restrictpropagationthroughlineag": 261, "restrictpropagationthroughhierachi": 261, "validityperiod": 261, "__root__": [261, 262], "enum": [261, 267], "fieldinfo": 261, "assetrequest": 261, "t": [261, 262], "assetrespons": 261, "referredent": 261, "bulkrequest": 261, "searchrequest": 261, "manipul": 262, "business_attribut": 262, "resolv": 262, "clear_al": 262, "explicitli": 262, "clear_unset": 262, "haven": 262, "is_set": 262, "initi": 262, "custommetadataproxi": 262, "custommetadatarequest": 262, "decentralizedrol": [263, 268], "usercount": [263, 266], "keycloak_ev": 264, "keycloakev": 264, "clientid": 264, "ipaddress": 264, "realmid": 264, "sessionid": 264, "keycloakeventtyp": 264, "userid": 264, "adminev": [264, 268], "operationtyp": 264, "adminoperationtyp": 264, "resourcepath": 264, "resourcetyp": 264, "adminresourcetyp": 264, "authdetail": 264, "lineagegraph": 265, "downstream_list": 265, "directedpair": 265, "upstream_list": 265, "depth": 265, "lineagedirect": 265, "entityfilt": 265, "filterlist": 265, "entitytraversalfilt": 265, "relationshiptraversalfilt": 265, "excludemean": 265, "excludeclassif": 265, "attributenam": 265, "atlancomparisonoper": 265, "attributevalu": 265, "AND": 265, "criterion": 265, "both": 265, "hideprocess": 265, "allowdeletedprocess": 265, "baseentityguid": 265, "lineagedepth": 265, "hasmoreupstreamvertic": 265, "hasmoredownstreamvertic": 265, "guidentitymap": 265, "lineagerel": 265, "vertexchildreninfo": 265, "atlanrol": 266, "clientrol": 266, "membercount": 266, "typevers": 267, "atlantagdef": 267, "entitytyp": 267, "supertyp": 267, "servicetyp": 267, "skipdisplaynameuniquenesscheck": 267, "isnew": 267, "cardin": 267, "enumvalu": 267, "defaultvalu": 267, "includeinnotif": 267, "indextyp": 267, "isindex": 267, "isopt": 267, "isuniqu": 267, "searchweight": 267, "skipscrub": 267, "valuesmincount": 267, "valuesmaxcount": 267, "indextypeesconfig": 267, "indextypeesfield": 267, "isdefaultvaluenul": 267, "applicable_asset_typ": 267, "restrict": 267, "applicable_connect": 267, "applicable_entity_typ": 267, "left": 267, "overrid": 267, "applicable_glossary_typ": 267, "applicable_other_asset_typ": 267, "applicable_glossari": 267, "cover": 267, "elementdef": 267, "necessari": 267, "get_valid_valu": 267, "replace_exist": 267, "ones": 267, "relationshipattributedef": 267, "islegacyattribut": 267, "relationshiptypenam": 267, "structdef": 267, "entitydef": 267, "businessattributedef": 267, "relationshipdef": 267, "enddef1": 267, "enddef2": 267, "propagatetag": 267, "one_to_two": 267, "relationshipcategori": 267, "relationshiplabel": 267, "__salesforceorgan": 267, "classificationdef": 267, "businessmetadatadef": 267, "workspacerol": 268, "emailverifi": 268, "firstnam": 268, "lastnam": 268, "createdtimestamp": 268, "lastlogintim": 268, "groupcount": 268, "defaultrol": 268, "loginev": 268, "asid": 269, "major": 269, "core": 269, "keycloak": 269}, "objects": {"pyatlan.cache.atlan_tag_cache": [[238, 0, 1, "", "AtlanTagCache"]], "pyatlan.cache.atlan_tag_cache.AtlanTagCache": [[238, 1, 1, "", "get_id_for_name"], [238, 1, 1, "", "get_name_for_id"], [238, 1, 1, "", "get_source_tags_attr_id"], [238, 1, 1, "", "refresh_cache"]], "pyatlan.cache.custom_metadata_cache": [[239, 0, 1, "", "CustomMetadataCache"]], "pyatlan.cache.custom_metadata_cache.CustomMetadataCache": [[239, 1, 1, "", "get_all_custom_attributes"], [239, 1, 1, "", "get_attr_id_for_name"], [239, 1, 1, "", "get_attr_name_for_id"], [239, 1, 1, "", "get_attribute_def"], [239, 1, 1, "", "get_attribute_for_search_results"], [239, 1, 1, "", "get_attributes_for_search_results"], [239, 1, 1, "", "get_custom_metadata_def"], [239, 1, 1, "", "get_id_for_name"], [239, 1, 1, "", "get_name_for_id"], [239, 1, 1, "", "is_attr_archived"], [239, 1, 1, "", "refresh_cache"]], "pyatlan.cache.enum_cache": [[240, 0, 1, "", "EnumCache"]], "pyatlan.cache.enum_cache.EnumCache": [[240, 1, 1, "", "get_by_name"], [240, 1, 1, "", "refresh_cache"]], "pyatlan.cache.group_cache": [[241, 0, 1, "", "GroupCache"]], "pyatlan.cache.group_cache.GroupCache": [[241, 1, 1, "", "get_id_for_alias"], [241, 1, 1, "", "get_id_for_name"], [241, 1, 1, "", "get_name_for_id"], [241, 1, 1, "", "validate_aliases"]], "pyatlan.cache.role_cache": [[242, 0, 1, "", "RoleCache"]], "pyatlan.cache.role_cache.RoleCache": [[242, 1, 1, "", "get_id_for_name"], [242, 1, 1, "", "get_name_for_id"], [242, 1, 1, "", "validate_idstrs"]], "pyatlan.cache.user_cache": [[243, 0, 1, "", "UserCache"]], "pyatlan.cache.user_cache.UserCache": [[243, 1, 1, "", "get_id_for_email"], [243, 1, 1, "", "get_id_for_name"], [243, 1, 1, "", "get_name_for_id"], [243, 1, 1, "", "validate_names"]], "pyatlan.client.atlan": [[245, 0, 1, "", "AtlanClient"]], "pyatlan.client.atlan.AtlanClient": [[245, 1, 1, "", "add_api_token_as_admin"], [245, 1, 1, "", "add_api_token_as_viewer"], [245, 1, 1, "", "add_atlan_tags"], [245, 1, 1, "", "add_user_to_groups"], [245, 1, 1, "", "append_terms"], [245, 1, 1, "", "change_user_role"], [245, 1, 1, "", "construct"], [245, 1, 1, "", "copy"], [245, 1, 1, "", "create_api_token"], [245, 1, 1, "", "create_group"], [245, 1, 1, "", "create_typedef"], [245, 1, 1, "", "create_users"], [245, 1, 1, "", "delete_entity_by_guid"], [245, 1, 1, "", "dict"], [245, 1, 1, "", "find_category_by_name"], [245, 1, 1, "", "find_category_fast_by_name"], [245, 1, 1, "", "find_connections_by_name"], [245, 1, 1, "", "find_glossary_by_name"], [245, 1, 1, "", "find_personas_by_name"], [245, 1, 1, "", "find_purposes_by_name"], [245, 1, 1, "", "find_term_by_name"], [245, 1, 1, "", "find_term_fast_by_name"], [245, 1, 1, "", "get_admin_events"], [245, 1, 1, "", "get_all_groups"], [245, 1, 1, "", "get_all_roles"], [245, 1, 1, "", "get_all_typedefs"], [245, 1, 1, "", "get_all_users"], [245, 1, 1, "", "get_api_token_by_id"], [245, 1, 1, "", "get_api_token_by_name"], [245, 1, 1, "", "get_api_tokens"], [245, 1, 1, "", "get_asset_by_guid"], [245, 1, 1, "", "get_asset_by_qualified_name"], [245, 1, 1, "", "get_current_user"], [245, 1, 1, "", "get_default_client"], [245, 1, 1, "", "get_group_by_name"], [245, 1, 1, "", "get_group_members"], [245, 1, 1, "", "get_groups"], [245, 1, 1, "", "get_groups_for_user"], [245, 1, 1, "", "get_keycloak_events"], [245, 1, 1, "", "get_lineage"], [245, 1, 1, "", "get_lineage_list"], [245, 1, 1, "", "get_roles"], [245, 1, 1, "", "get_typedefs"], [245, 1, 1, "", "get_user_by_username"], [245, 1, 1, "", "get_users"], [245, 1, 1, "", "get_users_by_email"], [245, 1, 1, "", "json"], [245, 1, 1, "", "max_retries"], [245, 1, 1, "", "parse_query"], [245, 1, 1, "", "purge_api_token"], [245, 1, 1, "", "purge_entity_by_guid"], [245, 1, 1, "", "purge_group"], [245, 1, 1, "", "purge_typedef"], [245, 1, 1, "", "remove_announcement"], [245, 1, 1, "", "remove_atlan_tag"], [245, 1, 1, "", "remove_certificate"], [245, 1, 1, "", "remove_custom_metadata"], [245, 1, 1, "", "remove_terms"], [245, 1, 1, "", "remove_users_from_group"], [245, 1, 1, "", "replace_custom_metadata"], [245, 1, 1, "", "replace_terms"], [245, 1, 1, "", "restore"], [245, 1, 1, "", "retrieve_minimal"], [245, 1, 1, "", "save"], [245, 1, 1, "", "save_merging_cm"], [245, 1, 1, "", "save_replacing_cm"], [245, 1, 1, "", "search"], [245, 1, 1, "", "set_default_client"], [245, 1, 1, "", "update_announcement"], [245, 1, 1, "", "update_api_token"], [245, 1, 1, "", "update_certificate"], [245, 1, 1, "", "update_custom_metadata_attributes"], [245, 1, 1, "", "update_forward_refs"], [245, 1, 1, "", "update_group"], [245, 1, 1, "", "update_merging_cm"], [245, 1, 1, "", "update_replacing_cm"], [245, 1, 1, "", "update_typedef"], [245, 1, 1, "", "update_user"], [245, 1, 1, "", "upload_image"], [245, 1, 1, "", "upsert"], [245, 1, 1, "", "upsert_merging_cm"], [245, 1, 1, "", "upsert_replacing_cm"]], "pyatlan.errors": [[247, 2, 1, "", "ApiConnectionError"], [247, 2, 1, "", "ApiError"], [247, 2, 1, "", "AtlanError"], [247, 2, 1, "", "AuthenticationError"], [247, 2, 1, "", "ConflictError"], [247, 2, 1, "", "InvalidRequestError"], [247, 2, 1, "", "LogicError"], [247, 2, 1, "", "NotFoundError"], [247, 2, 1, "", "PermissionError"], [247, 2, 1, "", "RateLimitError"]], "pyatlan.events.atlan_event_handler": [[246, 0, 1, "", "AtlanEventHandler"]], "pyatlan.events.atlan_event_handler.AtlanEventHandler": [[246, 1, 1, "", "calculate_changes"], [246, 1, 1, "", "get_current_state"], [246, 1, 1, "", "has_changes"], [246, 1, 1, "", "save_changes"], [246, 1, 1, "", "upsert_changes"], [246, 1, 1, "", "validate_prerequisites"]], "pyatlan.model.assets": [[1, 0, 1, "", "ADLS"], [2, 0, 1, "", "ADLSAccount"], [3, 0, 1, "", "ADLSContainer"], [4, 0, 1, "", "ADLSObject"], [8, 0, 1, "", "API"], [9, 0, 1, "", "APIPath"], [10, 0, 1, "", "APISpec"], [17, 0, 1, "", "AWS"], [0, 0, 1, "", "AccessControl"], [5, 0, 1, "", "Airflow"], [6, 0, 1, "", "AirflowDag"], [7, 0, 1, "", "AirflowTask"], [11, 0, 1, "", "Asset"], [12, 0, 1, "", "AtlasGlossary"], [13, 0, 1, "", "AtlasGlossaryCategory"], [14, 0, 1, "", "AtlasGlossaryTerm"], [15, 0, 1, "", "AuthPolicy"], [16, 0, 1, "", "AuthService"], [18, 0, 1, "", "Azure"], [19, 0, 1, "", "AzureEventHub"], [20, 0, 1, "", "AzureEventHubConsumerGroup"], [22, 0, 1, "", "BI"], [23, 0, 1, "", "BIProcess"], [21, 0, 1, "", "Badge"], [24, 0, 1, "", "CalculationView"], [25, 0, 1, "", "Catalog"], [26, 0, 1, "", "Cloud"], [27, 0, 1, "", "Cognite"], [28, 0, 1, "", "Cognite3DModel"], [29, 0, 1, "", "CogniteAsset"], [30, 0, 1, "", "CogniteEvent"], [31, 0, 1, "", "CogniteFile"], [32, 0, 1, "", "CogniteSequence"], [33, 0, 1, "", "CogniteTimeSeries"], [34, 0, 1, "", "Collection"], [35, 0, 1, "", "Column"], [36, 0, 1, "", "ColumnProcess"], [37, 0, 1, "", "Connection"], [38, 0, 1, "", "Cube"], [39, 0, 1, "", "CubeDimension"], [40, 0, 1, "", "CubeField"], [41, 0, 1, "", "CubeHierarchy"], [44, 0, 1, "", "DataDomain"], [45, 0, 1, "", "DataMesh"], [46, 0, 1, "", "DataProduct"], [47, 0, 1, "", "DataQuality"], [48, 0, 1, "", "DataSet"], [49, 0, 1, "", "DataStudio"], [50, 0, 1, "", "DataStudioAsset"], [42, 0, 1, "", "Database"], [51, 0, 1, "", "Dbt"], [52, 0, 1, "", "DbtColumnProcess"], [53, 0, 1, "", "DbtMetric"], [54, 0, 1, "", "DbtModel"], [55, 0, 1, "", "DbtModelColumn"], [56, 0, 1, "", "DbtProcess"], [57, 0, 1, "", "DbtSource"], [58, 0, 1, "", "DbtTag"], [59, 0, 1, "", "DbtTest"], [60, 0, 1, "", "Domo"], [61, 0, 1, "", "DomoCard"], [62, 0, 1, "", "DomoDashboard"], [63, 0, 1, "", "DomoDataset"], [64, 0, 1, "", "DomoDatasetColumn"], [65, 0, 1, "", "DynamoDB"], [66, 0, 1, "", "DynamoDBGlobalSecondaryIndex"], [67, 0, 1, "", "DynamoDBLocalSecondaryIndex"], [68, 0, 1, "", "DynamoDBSecondaryIndex"], [69, 0, 1, "", "DynamoDBTable"], [70, 0, 1, "", "EventStore"], [71, 0, 1, "", "File"], [72, 0, 1, "", "Folder"], [73, 0, 1, "", "Function"], [74, 0, 1, "", "GCS"], [75, 0, 1, "", "GCSBucket"], [76, 0, 1, "", "GCSObject"], [77, 0, 1, "", "Google"], [78, 0, 1, "", "Infrastructure"], [79, 0, 1, "", "Insight"], [80, 0, 1, "", "Kafka"], [81, 0, 1, "", "KafkaConsumerGroup"], [82, 0, 1, "", "KafkaTopic"], [83, 0, 1, "", "Link"], [84, 0, 1, "", "Looker"], [85, 0, 1, "", "LookerDashboard"], [86, 0, 1, "", "LookerExplore"], [87, 0, 1, "", "LookerField"], [88, 0, 1, "", "LookerFolder"], [89, 0, 1, "", "LookerLook"], [90, 0, 1, "", "LookerModel"], [91, 0, 1, "", "LookerProject"], [92, 0, 1, "", "LookerQuery"], [93, 0, 1, "", "LookerTile"], [94, 0, 1, "", "LookerView"], [101, 0, 1, "", "MCIncident"], [102, 0, 1, "", "MCMonitor"], [95, 0, 1, "", "MaterialisedView"], [96, 0, 1, "", "Matillion"], [97, 0, 1, "", "MatillionComponent"], [98, 0, 1, "", "MatillionGroup"], [99, 0, 1, "", "MatillionJob"], [100, 0, 1, "", "MatillionProject"], [103, 0, 1, "", "Metabase"], [104, 0, 1, "", "MetabaseCollection"], [105, 0, 1, "", "MetabaseDashboard"], [106, 0, 1, "", "MetabaseQuestion"], [107, 0, 1, "", "Metric"], [108, 0, 1, "", "MicroStrategy"], [109, 0, 1, "", "MicroStrategyAttribute"], [110, 0, 1, "", "MicroStrategyCube"], [111, 0, 1, "", "MicroStrategyDocument"], [112, 0, 1, "", "MicroStrategyDossier"], [113, 0, 1, "", "MicroStrategyFact"], [114, 0, 1, "", "MicroStrategyMetric"], [115, 0, 1, "", "MicroStrategyProject"], [116, 0, 1, "", "MicroStrategyReport"], [117, 0, 1, "", "MicroStrategyVisualization"], [118, 0, 1, "", "Mode"], [119, 0, 1, "", "ModeChart"], [120, 0, 1, "", "ModeCollection"], [121, 0, 1, "", "ModeQuery"], [122, 0, 1, "", "ModeReport"], [123, 0, 1, "", "ModeWorkspace"], [124, 0, 1, "", "MongoDB"], [125, 0, 1, "", "MongoDBCollection"], [126, 0, 1, "", "MongoDBDatabase"], [127, 0, 1, "", "MonteCarlo"], [128, 0, 1, "", "MultiDimensionalDataset"], [129, 0, 1, "", "Namespace"], [130, 0, 1, "", "NoSQL"], [131, 0, 1, "", "ObjectStore"], [132, 0, 1, "", "Persona"], [133, 0, 1, "", "PowerBI"], [134, 0, 1, "", "PowerBIColumn"], [135, 0, 1, "", "PowerBIDashboard"], [136, 0, 1, "", "PowerBIDataflow"], [137, 0, 1, "", "PowerBIDataset"], [138, 0, 1, "", "PowerBIDatasource"], [139, 0, 1, "", "PowerBIMeasure"], [140, 0, 1, "", "PowerBIPage"], [141, 0, 1, "", "PowerBIReport"], [142, 0, 1, "", "PowerBITable"], [143, 0, 1, "", "PowerBITile"], [144, 0, 1, "", "PowerBIWorkspace"], [145, 0, 1, "", "Preset"], [146, 0, 1, "", "PresetChart"], [147, 0, 1, "", "PresetDashboard"], [148, 0, 1, "", "PresetDataset"], [149, 0, 1, "", "PresetWorkspace"], [150, 0, 1, "", "Procedure"], [151, 0, 1, "", "Process"], [152, 0, 1, "", "ProcessExecution"], [153, 0, 1, "", "Purpose"], [154, 0, 1, "", "Qlik"], [155, 0, 1, "", "QlikApp"], [156, 0, 1, "", "QlikChart"], [157, 0, 1, "", "QlikDataset"], [158, 0, 1, "", "QlikSheet"], [159, 0, 1, "", "QlikSpace"], [160, 0, 1, "", "QlikStream"], [161, 0, 1, "", "Query"], [162, 0, 1, "", "QuickSight"], [163, 0, 1, "", "QuickSightAnalysis"], [164, 0, 1, "", "QuickSightAnalysisVisual"], [165, 0, 1, "", "QuickSightDashboard"], [166, 0, 1, "", "QuickSightDashboardVisual"], [167, 0, 1, "", "QuickSightDataset"], [168, 0, 1, "", "QuickSightDatasetField"], [169, 0, 1, "", "QuickSightFolder"], [170, 0, 1, "", "Readme"], [171, 0, 1, "", "ReadmeTemplate"], [172, 0, 1, "", "Redash"], [173, 0, 1, "", "RedashDashboard"], [174, 0, 1, "", "RedashQuery"], [175, 0, 1, "", "RedashVisualization"], [176, 0, 1, "", "Referenceable"], [177, 0, 1, "", "Resource"], [178, 0, 1, "", "S3"], [179, 0, 1, "", "S3Bucket"], [180, 0, 1, "", "S3Object"], [212, 0, 1, "", "SQL"], [181, 0, 1, "", "SaaS"], [182, 0, 1, "", "Salesforce"], [183, 0, 1, "", "SalesforceDashboard"], [184, 0, 1, "", "SalesforceField"], [185, 0, 1, "", "SalesforceObject"], [186, 0, 1, "", "SalesforceOrganization"], [187, 0, 1, "", "SalesforceReport"], [188, 0, 1, "", "Schema"], [189, 0, 1, "", "SchemaRegistry"], [190, 0, 1, "", "SchemaRegistrySubject"], [191, 0, 1, "", "Sigma"], [192, 0, 1, "", "SigmaDataElement"], [193, 0, 1, "", "SigmaDataElementField"], [194, 0, 1, "", "SigmaDataset"], [195, 0, 1, "", "SigmaDatasetColumn"], [196, 0, 1, "", "SigmaPage"], [197, 0, 1, "", "SigmaWorkbook"], [198, 0, 1, "", "Sisense"], [199, 0, 1, "", "SisenseDashboard"], [200, 0, 1, "", "SisenseDatamodel"], [201, 0, 1, "", "SisenseDatamodelTable"], [202, 0, 1, "", "SisenseFolder"], [203, 0, 1, "", "SisenseWidget"], [204, 0, 1, "", "SnowflakeDynamicTable"], [205, 0, 1, "", "SnowflakePipe"], [206, 0, 1, "", "SnowflakeStream"], [207, 0, 1, "", "SnowflakeTag"], [208, 0, 1, "", "Soda"], [209, 0, 1, "", "SodaCheck"], [210, 0, 1, "", "Spark"], [211, 0, 1, "", "SparkJob"], [213, 0, 1, "", "Table"], [225, 0, 1, "", "TablePartition"], [214, 0, 1, "", "Tableau"], [215, 0, 1, "", "TableauCalculatedField"], [216, 0, 1, "", "TableauDashboard"], [217, 0, 1, "", "TableauDatasource"], [218, 0, 1, "", "TableauDatasourceField"], [219, 0, 1, "", "TableauFlow"], [220, 0, 1, "", "TableauMetric"], [221, 0, 1, "", "TableauProject"], [222, 0, 1, "", "TableauSite"], [223, 0, 1, "", "TableauWorkbook"], [224, 0, 1, "", "TableauWorksheet"], [226, 0, 1, "", "Tag"], [227, 0, 1, "", "TagAttachment"], [228, 0, 1, "", "Thoughtspot"], [229, 0, 1, "", "ThoughtspotAnswer"], [230, 0, 1, "", "ThoughtspotColumn"], [231, 0, 1, "", "ThoughtspotDashlet"], [232, 0, 1, "", "ThoughtspotLiveboard"], [233, 0, 1, "", "ThoughtspotTable"], [234, 0, 1, "", "ThoughtspotView"], [235, 0, 1, "", "ThoughtspotWorksheet"], [236, 0, 1, "", "View"]], "pyatlan.model.assets.ADLS": [[1, 3, 1, "", "ADLS_ACCOUNT_QUALIFIED_NAME"], [1, 3, 1, "", "ADLS_ACCOUNT_SECONDARY_LOCATION"], [1, 3, 1, "", "AZURE_LOCATION"], [1, 3, 1, "", "AZURE_RESOURCE_ID"], [1, 3, 1, "", "AZURE_TAGS"], [1, 3, 1, "", "INPUT_TO_AIRFLOW_TASKS"], [1, 3, 1, "", "INPUT_TO_PROCESSES"], [1, 3, 1, "", "INPUT_TO_SPARK_JOBS"], [1, 3, 1, "", "OUTPUT_FROM_AIRFLOW_TASKS"], [1, 3, 1, "", "OUTPUT_FROM_PROCESSES"], [1, 3, 1, "", "OUTPUT_FROM_SPARK_JOBS"]], "pyatlan.model.assets.ADLSAccount": [[2, 3, 1, "", "ADLS_ACCOUNT_ACCESS_TIER"], [2, 3, 1, "", "ADLS_ACCOUNT_KIND"], [2, 3, 1, "", "ADLS_ACCOUNT_PERFORMANCE"], [2, 3, 1, "", "ADLS_ACCOUNT_PROVISION_STATE"], [2, 3, 1, "", "ADLS_ACCOUNT_REPLICATION"], [2, 3, 1, "", "ADLS_ACCOUNT_RESOURCE_GROUP"], [2, 3, 1, "", "ADLS_ACCOUNT_SUBSCRIPTION"], [2, 3, 1, "", "ADLS_CONTAINERS"], [2, 3, 1, "", "ADLS_ENCRYPTION_TYPE"], [2, 3, 1, "", "ADLS_E_TAG"], [2, 3, 1, "", "ADLS_PRIMARY_DISK_STATE"]], "pyatlan.model.assets.ADLSContainer": [[3, 3, 1, "", "ADLS_ACCOUNT"], [3, 3, 1, "", "ADLS_CONTAINER_ENCRYPTION_SCOPE"], [3, 3, 1, "", "ADLS_CONTAINER_LEASE_STATE"], [3, 3, 1, "", "ADLS_CONTAINER_LEASE_STATUS"], [3, 3, 1, "", "ADLS_CONTAINER_URL"], [3, 3, 1, "", "ADLS_CONTAINER_VERSION_LEVEL_IMMUTABILITY_SUPPORT"], [3, 3, 1, "", "ADLS_OBJECTS"], [3, 3, 1, "", "ADLS_OBJECT_COUNT"]], "pyatlan.model.assets.ADLSObject": [[4, 3, 1, "", "ADLS_CONTAINER"], [4, 3, 1, "", "ADLS_CONTAINER_QUALIFIED_NAME"], [4, 3, 1, "", "ADLS_OBJECT_ACCESS_TIER"], [4, 3, 1, "", "ADLS_OBJECT_ACCESS_TIER_LAST_MODIFIED_TIME"], [4, 3, 1, "", "ADLS_OBJECT_ARCHIVE_STATUS"], [4, 3, 1, "", "ADLS_OBJECT_CACHE_CONTROL"], [4, 3, 1, "", "ADLS_OBJECT_CONTENT_LANGUAGE"], [4, 3, 1, "", "ADLS_OBJECT_CONTENT_MD5HASH"], [4, 3, 1, "", "ADLS_OBJECT_CONTENT_TYPE"], [4, 3, 1, "", "ADLS_OBJECT_LEASE_STATE"], [4, 3, 1, "", "ADLS_OBJECT_LEASE_STATUS"], [4, 3, 1, "", "ADLS_OBJECT_METADATA"], [4, 3, 1, "", "ADLS_OBJECT_SERVER_ENCRYPTED"], [4, 3, 1, "", "ADLS_OBJECT_SIZE"], [4, 3, 1, "", "ADLS_OBJECT_TYPE"], [4, 3, 1, "", "ADLS_OBJECT_URL"], [4, 3, 1, "", "ADLS_OBJECT_VERSION_ID"], [4, 3, 1, "", "ADLS_OBJECT_VERSION_LEVEL_IMMUTABILITY_SUPPORT"]], "pyatlan.model.assets.API": [[8, 3, 1, "", "API_EXTERNAL_DOCS"], [8, 3, 1, "", "API_IS_AUTH_OPTIONAL"], [8, 3, 1, "", "API_SPEC_NAME"], [8, 3, 1, "", "API_SPEC_QUALIFIED_NAME"], [8, 3, 1, "", "API_SPEC_TYPE"], [8, 3, 1, "", "API_SPEC_VERSION"]], "pyatlan.model.assets.APIPath": [[9, 3, 1, "", "API_PATH_AVAILABLE_OPERATIONS"], [9, 3, 1, "", "API_PATH_AVAILABLE_RESPONSE_CODES"], [9, 3, 1, "", "API_PATH_IS_INGRESS_EXPOSED"], [9, 3, 1, "", "API_PATH_IS_TEMPLATED"], [9, 3, 1, "", "API_PATH_RAW_URI"], [9, 3, 1, "", "API_PATH_SUMMARY"], [9, 3, 1, "", "API_SPEC"]], "pyatlan.model.assets.APISpec": [[10, 3, 1, "", "API_PATHS"], [10, 3, 1, "", "API_SPEC_CONTACT_EMAIL"], [10, 3, 1, "", "API_SPEC_CONTACT_NAME"], [10, 3, 1, "", "API_SPEC_CONTACT_URL"], [10, 3, 1, "", "API_SPEC_CONTRACT_VERSION"], [10, 3, 1, "", "API_SPEC_LICENSE_NAME"], [10, 3, 1, "", "API_SPEC_LICENSE_URL"], [10, 3, 1, "", "API_SPEC_SERVICE_ALIAS"], [10, 3, 1, "", "API_SPEC_TERMS_OF_SERVICE_URL"]], "pyatlan.model.assets.AWS": [[17, 3, 1, "", "AWS_ACCOUNT_ID"], [17, 3, 1, "", "AWS_ARN"], [17, 3, 1, "", "AWS_OWNER_ID"], [17, 3, 1, "", "AWS_OWNER_NAME"], [17, 3, 1, "", "AWS_PARTITION"], [17, 3, 1, "", "AWS_REGION"], [17, 3, 1, "", "AWS_RESOURCE_ID"], [17, 3, 1, "", "AWS_SERVICE"], [17, 3, 1, "", "AWS_TAGS"]], "pyatlan.model.assets.AccessControl": [[0, 3, 1, "", "CHANNEL_LINK"], [0, 3, 1, "", "DEFAULT_NAVIGATION"], [0, 3, 1, "", "DENY_ASSET_FILTERS"], [0, 3, 1, "", "DENY_ASSET_TABS"], [0, 3, 1, "", "DENY_ASSET_TYPES"], [0, 3, 1, "", "DENY_CUSTOM_METADATA_GUIDS"], [0, 3, 1, "", "DENY_NAVIGATION_PAGES"], [0, 3, 1, "", "DISPLAY_PREFERENCES"], [0, 3, 1, "", "IS_ACCESS_CONTROL_ENABLED"], [0, 3, 1, "", "POLICIES"]], "pyatlan.model.assets.Airflow": [[5, 3, 1, "", "AIRFLOW_RUN_END_TIME"], [5, 3, 1, "", "AIRFLOW_RUN_NAME"], [5, 3, 1, "", "AIRFLOW_RUN_OPEN_LINEAGE_STATE"], [5, 3, 1, "", "AIRFLOW_RUN_OPEN_LINEAGE_VERSION"], [5, 3, 1, "", "AIRFLOW_RUN_START_TIME"], [5, 3, 1, "", "AIRFLOW_RUN_TYPE"], [5, 3, 1, "", "AIRFLOW_RUN_VERSION"], [5, 3, 1, "", "AIRFLOW_TAGS"]], "pyatlan.model.assets.AirflowDag": [[6, 3, 1, "", "AIRFLOW_DAG_SCHEDULE"], [6, 3, 1, "", "AIRFLOW_DAG_SCHEDULE_DELTA"], [6, 3, 1, "", "AIRFLOW_TASKS"]], "pyatlan.model.assets.AirflowTask": [[7, 3, 1, "", "AIRFLOW_DAG"], [7, 3, 1, "", "AIRFLOW_DAG_NAME"], [7, 3, 1, "", "AIRFLOW_DAG_QUALIFIED_NAME"], [7, 3, 1, "", "AIRFLOW_TASK_CONNECTION_ID"], [7, 3, 1, "", "AIRFLOW_TASK_OPERATOR_CLASS"], [7, 3, 1, "", "AIRFLOW_TASK_POOL"], [7, 3, 1, "", "AIRFLOW_TASK_POOL_SLOTS"], [7, 3, 1, "", "AIRFLOW_TASK_PRIORITY_WEIGHT"], [7, 3, 1, "", "AIRFLOW_TASK_QUEUE"], [7, 3, 1, "", "AIRFLOW_TASK_RETRY_NUMBER"], [7, 3, 1, "", "AIRFLOW_TASK_SQL"], [7, 3, 1, "", "AIRFLOW_TASK_TRIGGER_RULE"], [7, 3, 1, "", "INPUTS"], [7, 3, 1, "", "OUTPUTS"], [7, 3, 1, "", "PROCESS"]], "pyatlan.model.assets.Asset": [[11, 3, 1, "", "ADMIN_GROUPS"], [11, 3, 1, "", "ADMIN_ROLES"], [11, 3, 1, "", "ADMIN_USERS"], [11, 3, 1, "", "ANNOUNCEMENT_MESSAGE"], [11, 3, 1, "", "ANNOUNCEMENT_TITLE"], [11, 3, 1, "", "ANNOUNCEMENT_TYPE"], [11, 3, 1, "", "ANNOUNCEMENT_UPDATED_AT"], [11, 3, 1, "", "ANNOUNCEMENT_UPDATED_BY"], [11, 3, 1, "", "ASSET_COVER_IMAGE"], [11, 3, 1, "", "ASSET_DBT_ACCOUNT_NAME"], [11, 3, 1, "", "ASSET_DBT_ALIAS"], [11, 3, 1, "", "ASSET_DBT_ENVIRONMENT_DBT_VERSION"], [11, 3, 1, "", "ASSET_DBT_ENVIRONMENT_NAME"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_ARTIFACTS_SAVED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_ARTIFACT_S3PATH"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_CREATED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_DEQUED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_EXECUTED_BY_THREAD_ID"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_GIT_BRANCH"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_GIT_SHA"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_HAS_DOCS_GENERATED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_HAS_SOURCES_GENERATED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_NOTIFICATIONS_SENT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_OWNER_THREAD_ID"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_RUN_DURATION"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_RUN_DURATION_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_STARTED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_STATUS_MESSAGE"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_UPDATED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_URL"], [11, 3, 1, "", "ASSET_DBT_JOB_NAME"], [11, 3, 1, "", "ASSET_DBT_JOB_NEXT_RUN"], [11, 3, 1, "", "ASSET_DBT_JOB_NEXT_RUN_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_SCHEDULE"], [11, 3, 1, "", "ASSET_DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_STATUS"], [11, 3, 1, "", "ASSET_DBT_META"], [11, 3, 1, "", "ASSET_DBT_PACKAGE_NAME"], [11, 3, 1, "", "ASSET_DBT_PROJECT_NAME"], [11, 3, 1, "", "ASSET_DBT_SEMANTIC_LAYER_PROXY_URL"], [11, 3, 1, "", "ASSET_DBT_SOURCE_FRESHNESS_CRITERIA"], [11, 3, 1, "", "ASSET_DBT_TAGS"], [11, 3, 1, "", "ASSET_DBT_TEST_STATUS"], [11, 3, 1, "", "ASSET_DBT_UNIQUE_ID"], [11, 3, 1, "", "ASSET_DBT_WORKFLOW_LAST_UPDATED"], [11, 3, 1, "", "ASSET_ICON"], [11, 3, 1, "", "ASSET_MC_INCIDENT_NAMES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_QUALIFIED_NAMES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_SEVERITIES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_STATES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_SUB_TYPES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_TYPES"], [11, 3, 1, "", "ASSET_MC_LAST_SYNC_RUN_AT"], [11, 3, 1, "", "ASSET_MC_MONITOR_NAMES"], [11, 3, 1, "", "ASSET_MC_MONITOR_QUALIFIED_NAMES"], [11, 3, 1, "", "ASSET_MC_MONITOR_SCHEDULE_TYPES"], [11, 3, 1, "", "ASSET_MC_MONITOR_STATUSES"], [11, 3, 1, "", "ASSET_MC_MONITOR_TYPES"], [11, 3, 1, "", "ASSET_SODA_CHECK_COUNT"], [11, 3, 1, "", "ASSET_SODA_CHECK_STATUSES"], [11, 3, 1, "", "ASSET_SODA_DQ_STATUS"], [11, 3, 1, "", "ASSET_SODA_LAST_SCAN_AT"], [11, 3, 1, "", "ASSET_SODA_LAST_SYNC_RUN_AT"], [11, 3, 1, "", "ASSET_SODA_SOURCE_URL"], [11, 3, 1, "", "ASSET_TAGS"], [11, 3, 1, "", "ASSET_THEME_HEX"], [11, 3, 1, "", "CERTIFICATE_STATUS"], [11, 3, 1, "", "CERTIFICATE_STATUS_MESSAGE"], [11, 3, 1, "", "CERTIFICATE_UPDATED_AT"], [11, 3, 1, "", "CERTIFICATE_UPDATED_BY"], [11, 3, 1, "", "CONNECTION_NAME"], [11, 3, 1, "", "CONNECTION_QUALIFIED_NAME"], [11, 3, 1, "", "CONNECTOR_NAME"], [11, 3, 1, "", "DBT_QUALIFIED_NAME"], [11, 3, 1, "", "DESCRIPTION"], [11, 3, 1, "", "DISPLAY_NAME"], [11, 3, 1, "", "FILES"], [11, 3, 1, "", "HAS_LINEAGE"], [11, 3, 1, "", "INPUT_PORT_DATA_PRODUCTS"], [11, 3, 1, "", "IS_AI_GENERATED"], [11, 3, 1, "", "IS_DISCOVERABLE"], [11, 3, 1, "", "IS_EDITABLE"], [11, 3, 1, "", "IS_PARTIAL"], [11, 3, 1, "", "LAST_ROW_CHANGED_AT"], [11, 3, 1, "", "LAST_SYNC_RUN"], [11, 3, 1, "", "LAST_SYNC_RUN_AT"], [11, 3, 1, "", "LAST_SYNC_WORKFLOW_NAME"], [11, 3, 1, "", "LINKS"], [11, 3, 1, "", "MC_INCIDENTS"], [11, 3, 1, "", "MC_MONITORS"], [11, 3, 1, "", "METRICS"], [11, 3, 1, "", "NAME"], [11, 3, 1, "", "OUTPUT_PORT_DATA_PRODUCTS"], [11, 3, 1, "", "OWNER_GROUPS"], [11, 3, 1, "", "OWNER_USERS"], [11, 3, 1, "", "POPULARITY_SCORE"], [11, 3, 1, "", "README"], [11, 3, 1, "", "SAMPLE_DATA_URL"], [11, 3, 1, "", "SCHEMA_REGISTRY_SUBJECTS"], [11, 3, 1, "", "SODA_CHECKS"], [11, 3, 1, "", "SOURCE_COST_UNIT"], [11, 3, 1, "", "SOURCE_CREATED_AT"], [11, 3, 1, "", "SOURCE_CREATED_BY"], [11, 3, 1, "", "SOURCE_EMBED_URL"], [11, 3, 1, "", "SOURCE_LAST_READ_AT"], [11, 3, 1, "", "SOURCE_OWNERS"], [11, 3, 1, "", "SOURCE_QUERY_COMPUTE_COST_LIST"], [11, 3, 1, "", "SOURCE_QUERY_COMPUTE_COST_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_COUNT"], [11, 3, 1, "", "SOURCE_READ_EXPENSIVE_QUERY_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_POPULAR_QUERY_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_QUERY_COST"], [11, 3, 1, "", "SOURCE_READ_RECENT_USER_LIST"], [11, 3, 1, "", "SOURCE_READ_RECENT_USER_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_SLOW_QUERY_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_TOP_USER_LIST"], [11, 3, 1, "", "SOURCE_READ_TOP_USER_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_USER_COUNT"], [11, 3, 1, "", "SOURCE_TOTAL_COST"], [11, 3, 1, "", "SOURCE_UPDATED_AT"], [11, 3, 1, "", "SOURCE_UPDATED_BY"], [11, 3, 1, "", "SOURCE_URL"], [11, 3, 1, "", "STARRED_BY"], [11, 3, 1, "", "STARRED_COUNT"], [11, 3, 1, "", "STARRED_DETAILS_LIST"], [11, 3, 1, "", "SUB_TYPE"], [11, 3, 1, "", "TENANT_ID"], [11, 3, 1, "", "USER_DESCRIPTION"], [11, 3, 1, "", "VIEWER_GROUPS"], [11, 3, 1, "", "VIEWER_USERS"], [11, 3, 1, "", "VIEW_SCORE"], [11, 1, 1, "", "lineage"]], "pyatlan.model.assets.AtlasGlossary": [[12, 3, 1, "", "ADDITIONAL_ATTRIBUTES"], [12, 3, 1, "", "CATEGORIES"], [12, 3, 1, "", "GLOSSARY_TYPE"], [12, 3, 1, "", "LANGUAGE"], [12, 3, 1, "", "LONG_DESCRIPTION"], [12, 3, 1, "", "SHORT_DESCRIPTION"], [12, 3, 1, "", "TERMS"], [12, 3, 1, "", "USAGE"]], "pyatlan.model.assets.AtlasGlossaryCategory": [[13, 3, 1, "", "ADDITIONAL_ATTRIBUTES"], [13, 3, 1, "", "ANCHOR"], [13, 3, 1, "", "CATEGORY_TYPE"], [13, 3, 1, "", "CHILDREN_CATEGORIES"], [13, 3, 1, "", "LONG_DESCRIPTION"], [13, 3, 1, "", "PARENT_CATEGORY"], [13, 3, 1, "", "SHORT_DESCRIPTION"], [13, 3, 1, "", "TERMS"], [13, 1, 1, "", "can_be_archived"]], "pyatlan.model.assets.AtlasGlossaryTerm": [[14, 3, 1, "", "ABBREVIATION"], [14, 3, 1, "", "ADDITIONAL_ATTRIBUTES"], [14, 3, 1, "", "ANCHOR"], [14, 3, 1, "", "ANTONYMS"], [14, 3, 1, "", "ASSIGNED_ENTITIES"], [14, 3, 1, "", "CATEGORIES"], [14, 3, 1, "", "CLASSIFIES"], [14, 3, 1, "", "EXAMPLES"], [14, 3, 1, "", "IS_A"], [14, 3, 1, "", "LONG_DESCRIPTION"], [14, 3, 1, "", "PREFERRED_TERMS"], [14, 3, 1, "", "PREFERRED_TO_TERMS"], [14, 3, 1, "", "REPLACED_BY"], [14, 3, 1, "", "REPLACEMENT_TERMS"], [14, 3, 1, "", "SEE_ALSO"], [14, 3, 1, "", "SHORT_DESCRIPTION"], [14, 3, 1, "", "SYNONYMS"], [14, 3, 1, "", "TERM_TYPE"], [14, 3, 1, "", "TRANSLATED_TERMS"], [14, 3, 1, "", "TRANSLATION_TERMS"], [14, 3, 1, "", "USAGE"], [14, 3, 1, "", "VALID_VALUES"], [14, 3, 1, "", "VALID_VALUES_FOR"]], "pyatlan.model.assets.AuthPolicy": [[15, 3, 1, "", "ACCESS_CONTROL"], [15, 3, 1, "", "IS_POLICY_ENABLED"], [15, 3, 1, "", "POLICY_ACTIONS"], [15, 3, 1, "", "POLICY_CATEGORY"], [15, 3, 1, "", "POLICY_CONDITIONS"], [15, 3, 1, "", "POLICY_DELEGATE_ADMIN"], [15, 3, 1, "", "POLICY_GROUPS"], [15, 3, 1, "", "POLICY_MASK_TYPE"], [15, 3, 1, "", "POLICY_PRIORITY"], [15, 3, 1, "", "POLICY_RESOURCES"], [15, 3, 1, "", "POLICY_RESOURCE_CATEGORY"], [15, 3, 1, "", "POLICY_RESOURCE_SIGNATURE"], [15, 3, 1, "", "POLICY_ROLES"], [15, 3, 1, "", "POLICY_SERVICE_NAME"], [15, 3, 1, "", "POLICY_SUB_CATEGORY"], [15, 3, 1, "", "POLICY_TYPE"], [15, 3, 1, "", "POLICY_USERS"], [15, 3, 1, "", "POLICY_VALIDITY_SCHEDULE"]], "pyatlan.model.assets.AuthService": [[16, 3, 1, "", "AUTH_SERVICE_CONFIG"], [16, 3, 1, "", "AUTH_SERVICE_IS_ENABLED"], [16, 3, 1, "", "AUTH_SERVICE_POLICY_LAST_SYNC"], [16, 3, 1, "", "AUTH_SERVICE_TYPE"], [16, 3, 1, "", "TAG_SERVICE"]], "pyatlan.model.assets.Azure": [[18, 3, 1, "", "ADLS_ACCOUNT_SECONDARY_LOCATION"], [18, 3, 1, "", "AZURE_LOCATION"], [18, 3, 1, "", "AZURE_RESOURCE_ID"], [18, 3, 1, "", "AZURE_TAGS"]], "pyatlan.model.assets.AzureEventHub": [[19, 3, 1, "", "AZURE_EVENT_HUB_STATUS"]], "pyatlan.model.assets.BIProcess": [[23, 3, 1, "", "INPUTS"], [23, 3, 1, "", "OUTPUTS"]], "pyatlan.model.assets.Badge": [[21, 3, 1, "", "BADGE_CONDITIONS"], [21, 3, 1, "", "BADGE_METADATA_ATTRIBUTE"]], "pyatlan.model.assets.CalculationView": [[24, 3, 1, "", "ATLAN_SCHEMA"], [24, 3, 1, "", "CALCULATION_VIEW_ACTIVATED_AT"], [24, 3, 1, "", "CALCULATION_VIEW_ACTIVATED_BY"], [24, 3, 1, "", "CALCULATION_VIEW_VERSION_ID"], [24, 3, 1, "", "COLUMNS"], [24, 3, 1, "", "COLUMN_COUNT"]], "pyatlan.model.assets.Catalog": [[25, 3, 1, "", "INPUT_TO_AIRFLOW_TASKS"], [25, 3, 1, "", "INPUT_TO_PROCESSES"], [25, 3, 1, "", "INPUT_TO_SPARK_JOBS"], [25, 3, 1, "", "OUTPUT_FROM_AIRFLOW_TASKS"], [25, 3, 1, "", "OUTPUT_FROM_PROCESSES"], [25, 3, 1, "", "OUTPUT_FROM_SPARK_JOBS"]], "pyatlan.model.assets.Cognite3DModel": [[28, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteAsset": [[29, 3, 1, "", "COGNITE3DMODELS"], [29, 3, 1, "", "COGNITE_EVENTS"], [29, 3, 1, "", "COGNITE_FILES"], [29, 3, 1, "", "COGNITE_SEQUENCES"], [29, 3, 1, "", "COGNITE_TIMESERIES"]], "pyatlan.model.assets.CogniteEvent": [[30, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteFile": [[31, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteSequence": [[32, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteTimeSeries": [[33, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.Collection": [[34, 3, 1, "", "ICON"], [34, 3, 1, "", "ICON_TYPE"]], "pyatlan.model.assets.Column": [[35, 3, 1, "", "CALCULATION_VIEW"], [35, 3, 1, "", "COLUMN_AVERAGE"], [35, 3, 1, "", "COLUMN_AVERAGE_LENGTH"], [35, 3, 1, "", "COLUMN_DBT_MODEL_COLUMNS"], [35, 3, 1, "", "COLUMN_DEPTH_LEVEL"], [35, 3, 1, "", "COLUMN_DISTINCT_VALUES_COUNT"], [35, 3, 1, "", "COLUMN_DISTINCT_VALUES_COUNT_LONG"], [35, 3, 1, "", "COLUMN_DUPLICATE_VALUES_COUNT"], [35, 3, 1, "", "COLUMN_DUPLICATE_VALUES_COUNT_LONG"], [35, 3, 1, "", "COLUMN_HISTOGRAM"], [35, 3, 1, "", "COLUMN_MAX"], [35, 3, 1, "", "COLUMN_MAXIMUM_STRING_LENGTH"], [35, 3, 1, "", "COLUMN_MAXS"], [35, 3, 1, "", "COLUMN_MEAN"], [35, 3, 1, "", "COLUMN_MEDIAN"], [35, 3, 1, "", "COLUMN_MIN"], [35, 3, 1, "", "COLUMN_MINIMUM_STRING_LENGTH"], [35, 3, 1, "", "COLUMN_MINS"], [35, 3, 1, "", "COLUMN_MISSING_VALUES_COUNT"], [35, 3, 1, "", "COLUMN_MISSING_VALUES_COUNT_LONG"], [35, 3, 1, "", "COLUMN_MISSING_VALUES_PERCENTAGE"], [35, 3, 1, "", "COLUMN_STANDARD_DEVIATION"], [35, 3, 1, "", "COLUMN_SUM"], [35, 3, 1, "", "COLUMN_TOP_VALUES"], [35, 3, 1, "", "COLUMN_UNIQUENESS_PERCENTAGE"], [35, 3, 1, "", "COLUMN_UNIQUE_VALUES_COUNT"], [35, 3, 1, "", "COLUMN_UNIQUE_VALUES_COUNT_LONG"], [35, 3, 1, "", "COLUMN_VARIANCE"], [35, 3, 1, "", "DATA_QUALITY_METRIC_DIMENSIONS"], [35, 3, 1, "", "DATA_TYPE"], [35, 3, 1, "", "DBT_METRICS"], [35, 3, 1, "", "DBT_MODEL_COLUMNS"], [35, 3, 1, "", "DEFAULT_VALUE"], [35, 3, 1, "", "FOREIGN_KEY_FROM"], [35, 3, 1, "", "FOREIGN_KEY_TO"], [35, 3, 1, "", "IS_CLUSTERED"], [35, 3, 1, "", "IS_DIST"], [35, 3, 1, "", "IS_FOREIGN"], [35, 3, 1, "", "IS_INDEXED"], [35, 3, 1, "", "IS_NULLABLE"], [35, 3, 1, "", "IS_PARTITION"], [35, 3, 1, "", "IS_PINNED"], [35, 3, 1, "", "IS_PRIMARY"], [35, 3, 1, "", "IS_SORT"], [35, 3, 1, "", "MATERIALISED_VIEW"], [35, 3, 1, "", "MAX_LENGTH"], [35, 3, 1, "", "METRIC_TIMESTAMPS"], [35, 3, 1, "", "NESTED_COLUMNS"], [35, 3, 1, "", "NESTED_COLUMN_COUNT"], [35, 3, 1, "", "NUMERIC_SCALE"], [35, 3, 1, "", "ORDER"], [35, 3, 1, "", "PARENT_COLUMN"], [35, 3, 1, "", "PARENT_COLUMN_NAME"], [35, 3, 1, "", "PARENT_COLUMN_QUALIFIED_NAME"], [35, 3, 1, "", "PARTITION_ORDER"], [35, 3, 1, "", "PINNED_AT"], [35, 3, 1, "", "PINNED_BY"], [35, 3, 1, "", "PRECISION"], [35, 3, 1, "", "QUERIES"], [35, 3, 1, "", "RAW_DATA_TYPE_DEFINITION"], [35, 3, 1, "", "SNOWFLAKE_DYNAMIC_TABLE"], [35, 3, 1, "", "SUB_DATA_TYPE"], [35, 3, 1, "", "TABLE"], [35, 3, 1, "", "TABLE_PARTITION"], [35, 3, 1, "", "VALIDATIONS"], [35, 3, 1, "", "VIEW"]], "pyatlan.model.assets.ColumnProcess": [[36, 3, 1, "", "INPUTS"], [36, 3, 1, "", "OUTPUTS"], [36, 3, 1, "", "PROCESS"]], "pyatlan.model.assets.Connection": [[37, 3, 1, "", "ALLOW_QUERY"], [37, 3, 1, "", "ALLOW_QUERY_PREVIEW"], [37, 3, 1, "", "CATEGORY"], [37, 3, 1, "", "CONNECTION_DBT_ENVIRONMENTS"], [37, 3, 1, "", "CONNECTION_SSO_CREDENTIAL_GUID"], [37, 3, 1, "", "CONNECTOR_ICON"], [37, 3, 1, "", "CONNECTOR_IMAGE"], [37, 3, 1, "", "CREDENTIAL_STRATEGY"], [37, 3, 1, "", "DEFAULT_CREDENTIAL_GUID"], [37, 3, 1, "", "HAS_POPULARITY_INSIGHTS"], [37, 3, 1, "", "HOST"], [37, 3, 1, "", "IS_SAMPLE_DATA_PREVIEW_ENABLED"], [37, 3, 1, "", "OBJECT_STORAGE_UPLOAD_THRESHOLD"], [37, 3, 1, "", "POLICY_STRATEGY"], [37, 3, 1, "", "POLICY_STRATEGY_FOR_SAMPLE_PREVIEW"], [37, 3, 1, "", "POPULARITY_INSIGHTS_TIMEFRAME"], [37, 3, 1, "", "PORT"], [37, 3, 1, "", "PREVIEW_CREDENTIAL_STRATEGY"], [37, 3, 1, "", "QUERY_CONFIG"], [37, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [37, 3, 1, "", "QUERY_TIMEOUT"], [37, 3, 1, "", "QUERY_USERNAME_STRATEGY"], [37, 3, 1, "", "ROW_LIMIT"], [37, 3, 1, "", "SOURCE_LOGO"], [37, 3, 1, "", "SUB_CATEGORY"], [37, 3, 1, "", "USE_OBJECT_STORAGE"], [37, 3, 1, "", "VECTOR_EMBEDDINGS_ENABLED"], [37, 3, 1, "", "VECTOR_EMBEDDINGS_UPDATED_AT"]], "pyatlan.model.assets.Cube": [[38, 3, 1, "", "CUBE_DIMENSIONS"], [38, 3, 1, "", "CUBE_DIMENSION_COUNT"]], "pyatlan.model.assets.CubeDimension": [[39, 3, 1, "", "CUBE"], [39, 3, 1, "", "CUBE_HIERARCHIES"], [39, 3, 1, "", "CUBE_HIERARCHY_COUNT"]], "pyatlan.model.assets.CubeField": [[40, 3, 1, "", "CUBE_FIELD_LEVEL"], [40, 3, 1, "", "CUBE_FIELD_MEASURE_EXPRESSION"], [40, 3, 1, "", "CUBE_HIERARCHY"], [40, 3, 1, "", "CUBE_NESTED_FIELDS"], [40, 3, 1, "", "CUBE_PARENT_FIELD"], [40, 3, 1, "", "CUBE_PARENT_FIELD_NAME"], [40, 3, 1, "", "CUBE_PARENT_FIELD_QUALIFIED_NAME"], [40, 3, 1, "", "CUBE_SUB_FIELD_COUNT"]], "pyatlan.model.assets.CubeHierarchy": [[41, 3, 1, "", "CUBE_DIMENSION"], [41, 3, 1, "", "CUBE_FIELDS"], [41, 3, 1, "", "CUBE_FIELD_COUNT"]], "pyatlan.model.assets.DataDomain": [[44, 3, 1, "", "DATA_PRODUCTS"], [44, 3, 1, "", "PARENT_DOMAIN"], [44, 3, 1, "", "SUB_DOMAINS"]], "pyatlan.model.assets.DataMesh": [[45, 3, 1, "", "PARENT_DOMAIN_QUALIFIED_NAME"], [45, 3, 1, "", "SUPER_DOMAIN_QUALIFIED_NAME"]], "pyatlan.model.assets.DataProduct": [[46, 3, 1, "", "DATA_DOMAIN"], [46, 3, 1, "", "DATA_PRODUCT_ASSETS_DSL"], [46, 3, 1, "", "DATA_PRODUCT_ASSETS_PLAYBOOK_FILTER"], [46, 3, 1, "", "DATA_PRODUCT_CRITICALITY"], [46, 3, 1, "", "DATA_PRODUCT_SCORE_UPDATED_AT"], [46, 3, 1, "", "DATA_PRODUCT_SCORE_VALUE"], [46, 3, 1, "", "DATA_PRODUCT_SENSITIVITY"], [46, 3, 1, "", "DATA_PRODUCT_STATUS"], [46, 3, 1, "", "DATA_PRODUCT_VISIBILITY"], [46, 3, 1, "", "INPUT_PORTS"], [46, 3, 1, "", "OUTPUT_PORTS"]], "pyatlan.model.assets.DataStudio": [[49, 3, 1, "", "GOOGLE_LABELS"], [49, 3, 1, "", "GOOGLE_LOCATION"], [49, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [49, 3, 1, "", "GOOGLE_PROJECT_ID"], [49, 3, 1, "", "GOOGLE_PROJECT_NAME"], [49, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [49, 3, 1, "", "GOOGLE_SERVICE"], [49, 3, 1, "", "GOOGLE_TAGS"], [49, 3, 1, "", "INPUT_TO_AIRFLOW_TASKS"], [49, 3, 1, "", "INPUT_TO_PROCESSES"], [49, 3, 1, "", "INPUT_TO_SPARK_JOBS"], [49, 3, 1, "", "OUTPUT_FROM_AIRFLOW_TASKS"], [49, 3, 1, "", "OUTPUT_FROM_PROCESSES"], [49, 3, 1, "", "OUTPUT_FROM_SPARK_JOBS"]], "pyatlan.model.assets.DataStudioAsset": [[50, 3, 1, "", "DATA_STUDIO_ASSET_OWNER"], [50, 3, 1, "", "DATA_STUDIO_ASSET_TITLE"], [50, 3, 1, "", "DATA_STUDIO_ASSET_TYPE"], [50, 3, 1, "", "GOOGLE_LABELS"], [50, 3, 1, "", "GOOGLE_LOCATION"], [50, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [50, 3, 1, "", "GOOGLE_PROJECT_ID"], [50, 3, 1, "", "GOOGLE_PROJECT_NAME"], [50, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [50, 3, 1, "", "GOOGLE_SERVICE"], [50, 3, 1, "", "GOOGLE_TAGS"], [50, 3, 1, "", "IS_TRASHED_DATA_STUDIO_ASSET"]], "pyatlan.model.assets.Database": [[42, 3, 1, "", "SCHEMAS"], [42, 3, 1, "", "SCHEMA_COUNT"]], "pyatlan.model.assets.Dbt": [[51, 3, 1, "", "DBT_ACCOUNT_NAME"], [51, 3, 1, "", "DBT_ALIAS"], [51, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [51, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [51, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [51, 3, 1, "", "DBT_JOB_LAST_RUN"], [51, 3, 1, "", "DBT_JOB_NAME"], [51, 3, 1, "", "DBT_JOB_NEXT_RUN"], [51, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [51, 3, 1, "", "DBT_JOB_SCHEDULE"], [51, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [51, 3, 1, "", "DBT_JOB_STATUS"], [51, 3, 1, "", "DBT_META"], [51, 3, 1, "", "DBT_PACKAGE_NAME"], [51, 3, 1, "", "DBT_PROJECT_NAME"], [51, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [51, 3, 1, "", "DBT_TAGS"], [51, 3, 1, "", "DBT_UNIQUE_ID"]], "pyatlan.model.assets.DbtColumnProcess": [[52, 3, 1, "", "AIRFLOW_TASKS"], [52, 3, 1, "", "AST"], [52, 3, 1, "", "CODE"], [52, 3, 1, "", "COLUMN_PROCESSES"], [52, 3, 1, "", "DBT_ACCOUNT_NAME"], [52, 3, 1, "", "DBT_ALIAS"], [52, 3, 1, "", "DBT_COLUMN_PROCESS_JOB_STATUS"], [52, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [52, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [52, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [52, 3, 1, "", "DBT_JOB_LAST_RUN"], [52, 3, 1, "", "DBT_JOB_NAME"], [52, 3, 1, "", "DBT_JOB_NEXT_RUN"], [52, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [52, 3, 1, "", "DBT_JOB_SCHEDULE"], [52, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [52, 3, 1, "", "DBT_JOB_STATUS"], [52, 3, 1, "", "DBT_META"], [52, 3, 1, "", "DBT_PACKAGE_NAME"], [52, 3, 1, "", "DBT_PROJECT_NAME"], [52, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [52, 3, 1, "", "DBT_TAGS"], [52, 3, 1, "", "DBT_UNIQUE_ID"], [52, 3, 1, "", "MATILLION_COMPONENT"], [52, 3, 1, "", "PROCESS"], [52, 3, 1, "", "SPARK_JOBS"], [52, 3, 1, "", "SQL"]], "pyatlan.model.assets.DbtMetric": [[53, 3, 1, "", "ASSETS"], [53, 3, 1, "", "DBT_ACCOUNT_NAME"], [53, 3, 1, "", "DBT_ALIAS"], [53, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [53, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [53, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [53, 3, 1, "", "DBT_JOB_LAST_RUN"], [53, 3, 1, "", "DBT_JOB_NAME"], [53, 3, 1, "", "DBT_JOB_NEXT_RUN"], [53, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [53, 3, 1, "", "DBT_JOB_SCHEDULE"], [53, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [53, 3, 1, "", "DBT_JOB_STATUS"], [53, 3, 1, "", "DBT_META"], [53, 3, 1, "", "DBT_METRIC_FILTERS"], [53, 3, 1, "", "DBT_METRIC_FILTER_COLUMNS"], [53, 3, 1, "", "DBT_MODEL"], [53, 3, 1, "", "DBT_PACKAGE_NAME"], [53, 3, 1, "", "DBT_PROJECT_NAME"], [53, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [53, 3, 1, "", "DBT_TAGS"], [53, 3, 1, "", "DBT_UNIQUE_ID"], [53, 3, 1, "", "METRIC_DIMENSION_COLUMNS"], [53, 3, 1, "", "METRIC_FILTERS"], [53, 3, 1, "", "METRIC_SQL"], [53, 3, 1, "", "METRIC_TIMESTAMP_COLUMN"], [53, 3, 1, "", "METRIC_TIME_GRAINS"], [53, 3, 1, "", "METRIC_TYPE"]], "pyatlan.model.assets.DbtModel": [[54, 3, 1, "", "DBT_COMPILED_SQL"], [54, 3, 1, "", "DBT_ERROR"], [54, 3, 1, "", "DBT_MATERIALIZATION_TYPE"], [54, 3, 1, "", "DBT_METRICS"], [54, 3, 1, "", "DBT_MODEL_COLUMNS"], [54, 3, 1, "", "DBT_MODEL_COMPILE_COMPLETED_AT"], [54, 3, 1, "", "DBT_MODEL_COMPILE_STARTED_AT"], [54, 3, 1, "", "DBT_MODEL_EXECUTE_COMPLETED_AT"], [54, 3, 1, "", "DBT_MODEL_EXECUTE_STARTED_AT"], [54, 3, 1, "", "DBT_MODEL_EXECUTION_TIME"], [54, 3, 1, "", "DBT_MODEL_RUN_ELAPSED_TIME"], [54, 3, 1, "", "DBT_MODEL_RUN_GENERATED_AT"], [54, 3, 1, "", "DBT_MODEL_SQL_ASSETS"], [54, 3, 1, "", "DBT_RAW_SQL"], [54, 3, 1, "", "DBT_STATS"], [54, 3, 1, "", "DBT_STATUS"], [54, 3, 1, "", "DBT_TESTS"], [54, 3, 1, "", "SQL_ASSET"]], "pyatlan.model.assets.DbtModelColumn": [[55, 3, 1, "", "DBT_MODEL"], [55, 3, 1, "", "DBT_MODEL_COLUMN_DATA_TYPE"], [55, 3, 1, "", "DBT_MODEL_COLUMN_ORDER"], [55, 3, 1, "", "DBT_MODEL_COLUMN_SQL_COLUMNS"], [55, 3, 1, "", "DBT_MODEL_QUALIFIED_NAME"], [55, 3, 1, "", "DBT_TESTS"], [55, 3, 1, "", "SQL_COLUMN"]], "pyatlan.model.assets.DbtProcess": [[56, 3, 1, "", "AIRFLOW_TASKS"], [56, 3, 1, "", "AST"], [56, 3, 1, "", "CODE"], [56, 3, 1, "", "COLUMN_PROCESSES"], [56, 3, 1, "", "DBT_ACCOUNT_NAME"], [56, 3, 1, "", "DBT_ALIAS"], [56, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [56, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [56, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [56, 3, 1, "", "DBT_JOB_LAST_RUN"], [56, 3, 1, "", "DBT_JOB_NAME"], [56, 3, 1, "", "DBT_JOB_NEXT_RUN"], [56, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [56, 3, 1, "", "DBT_JOB_SCHEDULE"], [56, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [56, 3, 1, "", "DBT_JOB_STATUS"], [56, 3, 1, "", "DBT_META"], [56, 3, 1, "", "DBT_PACKAGE_NAME"], [56, 3, 1, "", "DBT_PROCESS_JOB_STATUS"], [56, 3, 1, "", "DBT_PROJECT_NAME"], [56, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [56, 3, 1, "", "DBT_TAGS"], [56, 3, 1, "", "DBT_UNIQUE_ID"], [56, 3, 1, "", "MATILLION_COMPONENT"], [56, 3, 1, "", "SPARK_JOBS"], [56, 3, 1, "", "SQL"]], "pyatlan.model.assets.DbtSource": [[57, 3, 1, "", "DBT_FRESHNESS_CRITERIA"], [57, 3, 1, "", "DBT_STATE"], [57, 3, 1, "", "DBT_TESTS"], [57, 3, 1, "", "SQL_ASSET"], [57, 3, 1, "", "SQL_ASSETS"]], "pyatlan.model.assets.DbtTag": [[58, 3, 1, "", "DBT_ACCOUNT_NAME"], [58, 3, 1, "", "DBT_ALIAS"], [58, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [58, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [58, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [58, 3, 1, "", "DBT_JOB_LAST_RUN"], [58, 3, 1, "", "DBT_JOB_NAME"], [58, 3, 1, "", "DBT_JOB_NEXT_RUN"], [58, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [58, 3, 1, "", "DBT_JOB_SCHEDULE"], [58, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [58, 3, 1, "", "DBT_JOB_STATUS"], [58, 3, 1, "", "DBT_META"], [58, 3, 1, "", "DBT_PACKAGE_NAME"], [58, 3, 1, "", "DBT_PROJECT_NAME"], [58, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [58, 3, 1, "", "DBT_TAGS"], [58, 3, 1, "", "DBT_UNIQUE_ID"], [58, 3, 1, "", "MAPPED_CLASSIFICATION_NAME"], [58, 3, 1, "", "TAG_ALLOWED_VALUES"], [58, 3, 1, "", "TAG_ATTRIBUTES"], [58, 3, 1, "", "TAG_ID"]], "pyatlan.model.assets.DbtTest": [[59, 3, 1, "", "DBT_MODELS"], [59, 3, 1, "", "DBT_MODEL_COLUMNS"], [59, 3, 1, "", "DBT_SOURCES"], [59, 3, 1, "", "DBT_TEST_COMPILED_CODE"], [59, 3, 1, "", "DBT_TEST_COMPILED_SQL"], [59, 3, 1, "", "DBT_TEST_ERROR"], [59, 3, 1, "", "DBT_TEST_LANGUAGE"], [59, 3, 1, "", "DBT_TEST_RAW_CODE"], [59, 3, 1, "", "DBT_TEST_RAW_SQL"], [59, 3, 1, "", "DBT_TEST_STATE"], [59, 3, 1, "", "DBT_TEST_STATUS"], [59, 3, 1, "", "SQL_ASSETS"]], "pyatlan.model.assets.Domo": [[60, 3, 1, "", "DOMO_ID"], [60, 3, 1, "", "DOMO_OWNER_ID"]], "pyatlan.model.assets.DomoCard": [[61, 3, 1, "", "DOMO_CARD_DASHBOARD_COUNT"], [61, 3, 1, "", "DOMO_CARD_TYPE"], [61, 3, 1, "", "DOMO_CARD_TYPE_VALUE"], [61, 3, 1, "", "DOMO_DASHBOARDS"], [61, 3, 1, "", "DOMO_DATASET"]], "pyatlan.model.assets.DomoDashboard": [[62, 3, 1, "", "DOMO_CARDS"], [62, 3, 1, "", "DOMO_DASHBOARD_CARD_COUNT"], [62, 3, 1, "", "DOMO_DASHBOARD_CHILDREN"], [62, 3, 1, "", "DOMO_DASHBOARD_PARENT"]], "pyatlan.model.assets.DomoDataset": [[63, 3, 1, "", "DOMO_CARDS"], [63, 3, 1, "", "DOMO_DATASET_CARD_COUNT"], [63, 3, 1, "", "DOMO_DATASET_COLUMNS"], [63, 3, 1, "", "DOMO_DATASET_COLUMN_COUNT"], [63, 3, 1, "", "DOMO_DATASET_LAST_RUN"], [63, 3, 1, "", "DOMO_DATASET_ROW_COUNT"]], "pyatlan.model.assets.DomoDatasetColumn": [[64, 3, 1, "", "DOMO_DATASET"], [64, 3, 1, "", "DOMO_DATASET_COLUMN_TYPE"], [64, 3, 1, "", "DOMO_DATASET_QUALIFIED_NAME"]], "pyatlan.model.assets.DynamoDB": [[65, 3, 1, "", "DYNAMO_DB_PARTITION_KEY"], [65, 3, 1, "", "DYNAMO_DB_READ_CAPACITY_UNITS"], [65, 3, 1, "", "DYNAMO_DB_SORT_KEY"], [65, 3, 1, "", "DYNAMO_DB_STATUS"], [65, 3, 1, "", "DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "pyatlan.model.assets.DynamoDBGlobalSecondaryIndex": [[66, 3, 1, "", "DYNAMO_DB_TABLE"]], "pyatlan.model.assets.DynamoDBLocalSecondaryIndex": [[67, 3, 1, "", "DYNAMO_DB_TABLE"]], "pyatlan.model.assets.DynamoDBSecondaryIndex": [[68, 3, 1, "", "ALIAS"], [68, 3, 1, "", "CALCULATION_VIEW_NAME"], [68, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [68, 3, 1, "", "COLUMN_COUNT"], [68, 3, 1, "", "DATABASE_NAME"], [68, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [68, 3, 1, "", "DYNAMO_DB_PARTITION_KEY"], [68, 3, 1, "", "DYNAMO_DB_READ_CAPACITY_UNITS"], [68, 3, 1, "", "DYNAMO_DB_SECONDARY_INDEX_PROJECTION_TYPE"], [68, 3, 1, "", "DYNAMO_DB_SORT_KEY"], [68, 3, 1, "", "DYNAMO_DB_STATUS"], [68, 3, 1, "", "DYNAMO_DB_WRITE_CAPACITY_UNITS"], [68, 3, 1, "", "EXTERNAL_LOCATION"], [68, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [68, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [68, 3, 1, "", "IS_PARTITIONED"], [68, 3, 1, "", "IS_PROFILED"], [68, 3, 1, "", "IS_QUERY_PREVIEW"], [68, 3, 1, "", "IS_SHARDED"], [68, 3, 1, "", "IS_TEMPORARY"], [68, 3, 1, "", "LAST_PROFILED_AT"], [68, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [68, 3, 1, "", "PARTITION_COUNT"], [68, 3, 1, "", "PARTITION_LIST"], [68, 3, 1, "", "PARTITION_STRATEGY"], [68, 3, 1, "", "QUERY_COUNT"], [68, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [68, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [68, 3, 1, "", "QUERY_USER_COUNT"], [68, 3, 1, "", "QUERY_USER_MAP"], [68, 3, 1, "", "ROW_COUNT"], [68, 3, 1, "", "SCHEMA_NAME"], [68, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [68, 3, 1, "", "SIZE_BYTES"], [68, 3, 1, "", "TABLE_NAME"], [68, 3, 1, "", "TABLE_QUALIFIED_NAME"], [68, 3, 1, "", "VIEW_NAME"], [68, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.DynamoDBTable": [[69, 3, 1, "", "ALIAS"], [69, 3, 1, "", "CALCULATION_VIEW_NAME"], [69, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [69, 3, 1, "", "COLUMN_COUNT"], [69, 3, 1, "", "DATABASE_NAME"], [69, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [69, 3, 1, "", "DYNAMO_DB_GLOBAL_SECONDARY_INDEXES"], [69, 3, 1, "", "DYNAMO_DB_LOCAL_SECONDARY_INDEXES"], [69, 3, 1, "", "DYNAMO_DB_PARTITION_KEY"], [69, 3, 1, "", "DYNAMO_DB_READ_CAPACITY_UNITS"], [69, 3, 1, "", "DYNAMO_DB_SORT_KEY"], [69, 3, 1, "", "DYNAMO_DB_STATUS"], [69, 3, 1, "", "DYNAMO_DB_TABLE_GSI_COUNT"], [69, 3, 1, "", "DYNAMO_DB_TABLE_LSI_COUNT"], [69, 3, 1, "", "DYNAMO_DB_WRITE_CAPACITY_UNITS"], [69, 3, 1, "", "EXTERNAL_LOCATION"], [69, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [69, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [69, 3, 1, "", "IS_PARTITIONED"], [69, 3, 1, "", "IS_PROFILED"], [69, 3, 1, "", "IS_QUERY_PREVIEW"], [69, 3, 1, "", "IS_SHARDED"], [69, 3, 1, "", "IS_TEMPORARY"], [69, 3, 1, "", "LAST_PROFILED_AT"], [69, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [69, 3, 1, "", "PARTITION_COUNT"], [69, 3, 1, "", "PARTITION_LIST"], [69, 3, 1, "", "PARTITION_STRATEGY"], [69, 3, 1, "", "QUERY_COUNT"], [69, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [69, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [69, 3, 1, "", "QUERY_USER_COUNT"], [69, 3, 1, "", "QUERY_USER_MAP"], [69, 3, 1, "", "ROW_COUNT"], [69, 3, 1, "", "SCHEMA_NAME"], [69, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [69, 3, 1, "", "SIZE_BYTES"], [69, 3, 1, "", "TABLE_NAME"], [69, 3, 1, "", "TABLE_QUALIFIED_NAME"], [69, 3, 1, "", "VIEW_NAME"], [69, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.File": [[71, 3, 1, "", "FILE_ASSETS"], [71, 3, 1, "", "FILE_PATH"], [71, 3, 1, "", "FILE_TYPE"]], "pyatlan.model.assets.Folder": [[72, 3, 1, "", "COLLECTION_QUALIFIED_NAME"], [72, 3, 1, "", "PARENT"], [72, 3, 1, "", "PARENT_QUALIFIED_NAME"]], "pyatlan.model.assets.Function": [[73, 3, 1, "", "FUNCTION_ARGUMENTS"], [73, 3, 1, "", "FUNCTION_DEFINITION"], [73, 3, 1, "", "FUNCTION_IS_EXTERNAL"], [73, 3, 1, "", "FUNCTION_IS_MEMOIZABLE"], [73, 3, 1, "", "FUNCTION_IS_SECURE"], [73, 3, 1, "", "FUNCTION_LANGUAGE"], [73, 3, 1, "", "FUNCTION_RETURN_TYPE"], [73, 3, 1, "", "FUNCTION_SCHEMA"], [73, 3, 1, "", "FUNCTION_TYPE"]], "pyatlan.model.assets.GCS": [[74, 3, 1, "", "GCS_ACCESS_CONTROL"], [74, 3, 1, "", "GCS_ENCRYPTION_TYPE"], [74, 3, 1, "", "GCS_E_TAG"], [74, 3, 1, "", "GCS_META_GENERATION_ID"], [74, 3, 1, "", "GCS_REQUESTER_PAYS"], [74, 3, 1, "", "GCS_STORAGE_CLASS"], [74, 3, 1, "", "GOOGLE_LABELS"], [74, 3, 1, "", "GOOGLE_LOCATION"], [74, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [74, 3, 1, "", "GOOGLE_PROJECT_ID"], [74, 3, 1, "", "GOOGLE_PROJECT_NAME"], [74, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [74, 3, 1, "", "GOOGLE_SERVICE"], [74, 3, 1, "", "GOOGLE_TAGS"], [74, 3, 1, "", "INPUT_TO_AIRFLOW_TASKS"], [74, 3, 1, "", "INPUT_TO_PROCESSES"], [74, 3, 1, "", "INPUT_TO_SPARK_JOBS"], [74, 3, 1, "", "OUTPUT_FROM_AIRFLOW_TASKS"], [74, 3, 1, "", "OUTPUT_FROM_PROCESSES"], [74, 3, 1, "", "OUTPUT_FROM_SPARK_JOBS"]], "pyatlan.model.assets.GCSBucket": [[75, 3, 1, "", "GCS_BUCKET_LIFECYCLE_RULES"], [75, 3, 1, "", "GCS_BUCKET_RETENTION_EFFECTIVE_TIME"], [75, 3, 1, "", "GCS_BUCKET_RETENTION_LOCKED"], [75, 3, 1, "", "GCS_BUCKET_RETENTION_PERIOD"], [75, 3, 1, "", "GCS_BUCKET_RETENTION_POLICY"], [75, 3, 1, "", "GCS_BUCKET_VERSIONING_ENABLED"], [75, 3, 1, "", "GCS_OBJECTS"], [75, 3, 1, "", "GCS_OBJECT_COUNT"]], "pyatlan.model.assets.GCSObject": [[76, 3, 1, "", "GCS_BUCKET"], [76, 3, 1, "", "GCS_BUCKET_NAME"], [76, 3, 1, "", "GCS_BUCKET_QUALIFIED_NAME"], [76, 3, 1, "", "GCS_OBJECT_CONTENT_DISPOSITION"], [76, 3, 1, "", "GCS_OBJECT_CONTENT_ENCODING"], [76, 3, 1, "", "GCS_OBJECT_CONTENT_LANGUAGE"], [76, 3, 1, "", "GCS_OBJECT_CONTENT_TYPE"], [76, 3, 1, "", "GCS_OBJECT_CRC32C_HASH"], [76, 3, 1, "", "GCS_OBJECT_DATA_LAST_MODIFIED_TIME"], [76, 3, 1, "", "GCS_OBJECT_GENERATION_ID"], [76, 3, 1, "", "GCS_OBJECT_HOLD_TYPE"], [76, 3, 1, "", "GCS_OBJECT_KEY"], [76, 3, 1, "", "GCS_OBJECT_MD5HASH"], [76, 3, 1, "", "GCS_OBJECT_MEDIA_LINK"], [76, 3, 1, "", "GCS_OBJECT_RETENTION_EXPIRATION_DATE"], [76, 3, 1, "", "GCS_OBJECT_SIZE"]], "pyatlan.model.assets.Google": [[77, 3, 1, "", "GOOGLE_LABELS"], [77, 3, 1, "", "GOOGLE_LOCATION"], [77, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [77, 3, 1, "", "GOOGLE_PROJECT_ID"], [77, 3, 1, "", "GOOGLE_PROJECT_NAME"], [77, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [77, 3, 1, "", "GOOGLE_SERVICE"], [77, 3, 1, "", "GOOGLE_TAGS"]], "pyatlan.model.assets.KafkaConsumerGroup": [[81, 3, 1, "", "KAFKA_CONSUMER_GROUP_MEMBER_COUNT"], [81, 3, 1, "", "KAFKA_CONSUMER_GROUP_TOPIC_CONSUMPTION_PROPERTIES"], [81, 3, 1, "", "KAFKA_TOPICS"], [81, 3, 1, "", "KAFKA_TOPIC_NAMES"], [81, 3, 1, "", "KAFKA_TOPIC_QUALIFIED_NAMES"]], "pyatlan.model.assets.KafkaTopic": [[82, 3, 1, "", "KAFKA_CONSUMER_GROUPS"], [82, 3, 1, "", "KAFKA_TOPIC_CLEANUP_POLICY"], [82, 3, 1, "", "KAFKA_TOPIC_COMPRESSION_TYPE"], [82, 3, 1, "", "KAFKA_TOPIC_IS_INTERNAL"], [82, 3, 1, "", "KAFKA_TOPIC_PARTITIONS_COUNT"], [82, 3, 1, "", "KAFKA_TOPIC_RECORD_COUNT"], [82, 3, 1, "", "KAFKA_TOPIC_REPLICATION_FACTOR"], [82, 3, 1, "", "KAFKA_TOPIC_RETENTION_TIME_IN_MS"], [82, 3, 1, "", "KAFKA_TOPIC_SEGMENT_BYTES"], [82, 3, 1, "", "KAFKA_TOPIC_SIZE_IN_BYTES"]], "pyatlan.model.assets.Link": [[83, 3, 1, "", "ASSET"], [83, 3, 1, "", "ICON"], [83, 3, 1, "", "ICON_TYPE"]], "pyatlan.model.assets.LookerDashboard": [[85, 3, 1, "", "FOLDER"], [85, 3, 1, "", "FOLDER_NAME"], [85, 3, 1, "", "LOOKS"], [85, 3, 1, "", "SOURCELAST_UPDATER_ID"], [85, 3, 1, "", "SOURCE_LAST_ACCESSED_AT"], [85, 3, 1, "", "SOURCE_LAST_VIEWED_AT"], [85, 3, 1, "", "SOURCE_METADATA_ID"], [85, 3, 1, "", "SOURCE_USER_ID"], [85, 3, 1, "", "SOURCE_VIEW_COUNT"], [85, 3, 1, "", "TILES"]], "pyatlan.model.assets.LookerExplore": [[86, 3, 1, "", "FIELDS"], [86, 3, 1, "", "MODEL"], [86, 3, 1, "", "MODEL_NAME"], [86, 3, 1, "", "PROJECT"], [86, 3, 1, "", "PROJECT_NAME"], [86, 3, 1, "", "SOURCE_CONNECTION_NAME"], [86, 3, 1, "", "SQL_TABLE_NAME"], [86, 3, 1, "", "VIEW_NAME"]], "pyatlan.model.assets.LookerField": [[87, 3, 1, "", "EXPLORE"], [87, 3, 1, "", "LOOKER_EXPLORE_QUALIFIED_NAME"], [87, 3, 1, "", "LOOKER_FIELD_DATA_TYPE"], [87, 3, 1, "", "LOOKER_TIMES_USED"], [87, 3, 1, "", "LOOKER_VIEW_QUALIFIED_NAME"], [87, 3, 1, "", "MODEL"], [87, 3, 1, "", "MODEL_NAME"], [87, 3, 1, "", "PROJECT"], [87, 3, 1, "", "PROJECT_NAME"], [87, 3, 1, "", "SOURCE_DEFINITION"], [87, 3, 1, "", "VIEW"]], "pyatlan.model.assets.LookerFolder": [[88, 3, 1, "", "DASHBOARDS"], [88, 3, 1, "", "LOOKER_PARENT_FOLDER"], [88, 3, 1, "", "LOOKER_SUB_FOLDERS"], [88, 3, 1, "", "LOOKS"], [88, 3, 1, "", "SOURCE_CHILD_COUNT"], [88, 3, 1, "", "SOURCE_CONTENT_METADATA_ID"], [88, 3, 1, "", "SOURCE_CREATOR_ID"], [88, 3, 1, "", "SOURCE_PARENT_ID"]], "pyatlan.model.assets.LookerLook": [[89, 3, 1, "", "DASHBOARD"], [89, 3, 1, "", "FOLDER"], [89, 3, 1, "", "FOLDER_NAME"], [89, 3, 1, "", "MODEL"], [89, 3, 1, "", "MODEL_NAME"], [89, 3, 1, "", "QUERY"], [89, 3, 1, "", "SOURCELAST_UPDATER_ID"], [89, 3, 1, "", "SOURCE_CONTENT_METADATA_ID"], [89, 3, 1, "", "SOURCE_LAST_ACCESSED_AT"], [89, 3, 1, "", "SOURCE_LAST_VIEWED_AT"], [89, 3, 1, "", "SOURCE_QUERY_ID"], [89, 3, 1, "", "SOURCE_USER_ID"], [89, 3, 1, "", "SOURCE_VIEW_COUNT"], [89, 3, 1, "", "TILE"]], "pyatlan.model.assets.LookerModel": [[90, 3, 1, "", "EXPLORES"], [90, 3, 1, "", "FIELDS"], [90, 3, 1, "", "LOOK"], [90, 3, 1, "", "PROJECT"], [90, 3, 1, "", "PROJECT_NAME"], [90, 3, 1, "", "QUERIES"]], "pyatlan.model.assets.LookerProject": [[91, 3, 1, "", "EXPLORES"], [91, 3, 1, "", "FIELDS"], [91, 3, 1, "", "MODELS"], [91, 3, 1, "", "VIEWS"]], "pyatlan.model.assets.LookerQuery": [[92, 3, 1, "", "FIELDS"], [92, 3, 1, "", "LOOKS"], [92, 3, 1, "", "MODEL"], [92, 3, 1, "", "SOURCE_DEFINITION"], [92, 3, 1, "", "SOURCE_DEFINITION_DATABASE"], [92, 3, 1, "", "SOURCE_DEFINITION_SCHEMA"], [92, 3, 1, "", "TILES"]], "pyatlan.model.assets.LookerTile": [[93, 3, 1, "", "DASHBOARD"], [93, 3, 1, "", "LOOK"], [93, 3, 1, "", "LOOKML_LINK_ID"], [93, 3, 1, "", "LOOK_ID"], [93, 3, 1, "", "MERGE_RESULT_ID"], [93, 3, 1, "", "NOTE_TEXT"], [93, 3, 1, "", "QUERY"], [93, 3, 1, "", "QUERY_ID"], [93, 3, 1, "", "RESULT_MAKER_ID"], [93, 3, 1, "", "SUBTITLE_TEXT"]], "pyatlan.model.assets.LookerView": [[94, 3, 1, "", "FIELDS"], [94, 3, 1, "", "LOOKER_VIEW_FILE_NAME"], [94, 3, 1, "", "LOOKER_VIEW_FILE_PATH"], [94, 3, 1, "", "PROJECT"], [94, 3, 1, "", "PROJECT_NAME"]], "pyatlan.model.assets.MCIncident": [[101, 3, 1, "", "MC_INCIDENT_ASSETS"], [101, 3, 1, "", "MC_INCIDENT_ID"], [101, 3, 1, "", "MC_INCIDENT_SEVERITY"], [101, 3, 1, "", "MC_INCIDENT_STATE"], [101, 3, 1, "", "MC_INCIDENT_SUB_TYPES"], [101, 3, 1, "", "MC_INCIDENT_TYPE"], [101, 3, 1, "", "MC_INCIDENT_WAREHOUSE"], [101, 3, 1, "", "MC_MONITOR"]], "pyatlan.model.assets.MCMonitor": [[102, 3, 1, "", "MC_MONITOR_ALERT_CONDITION"], [102, 3, 1, "", "MC_MONITOR_ASSETS"], [102, 3, 1, "", "MC_MONITOR_BREACH_RATE"], [102, 3, 1, "", "MC_MONITOR_ID"], [102, 3, 1, "", "MC_MONITOR_INCIDENT_COUNT"], [102, 3, 1, "", "MC_MONITOR_NAMESPACE"], [102, 3, 1, "", "MC_MONITOR_RULE_COMPARISONS"], [102, 3, 1, "", "MC_MONITOR_RULE_CUSTOM_SQL"], [102, 3, 1, "", "MC_MONITOR_RULE_IS_SNOOZED"], [102, 3, 1, "", "MC_MONITOR_RULE_NEXT_EXECUTION_TIME"], [102, 3, 1, "", "MC_MONITOR_RULE_PREVIOUS_EXECUTION_TIME"], [102, 3, 1, "", "MC_MONITOR_RULE_SCHEDULE_CONFIG"], [102, 3, 1, "", "MC_MONITOR_RULE_SCHEDULE_CONFIG_HUMANIZED"], [102, 3, 1, "", "MC_MONITOR_RULE_TYPE"], [102, 3, 1, "", "MC_MONITOR_SCHEDULE_TYPE"], [102, 3, 1, "", "MC_MONITOR_STATUS"], [102, 3, 1, "", "MC_MONITOR_TYPE"], [102, 3, 1, "", "MC_MONITOR_WAREHOUSE"]], "pyatlan.model.assets.MaterialisedView": [[95, 3, 1, "", "ALIAS"], [95, 3, 1, "", "ATLAN_SCHEMA"], [95, 3, 1, "", "COLUMNS"], [95, 3, 1, "", "COLUMN_COUNT"], [95, 3, 1, "", "DEFINITION"], [95, 3, 1, "", "IS_QUERY_PREVIEW"], [95, 3, 1, "", "IS_TEMPORARY"], [95, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [95, 3, 1, "", "REFRESH_METHOD"], [95, 3, 1, "", "REFRESH_MODE"], [95, 3, 1, "", "ROW_COUNT"], [95, 3, 1, "", "SIZE_BYTES"], [95, 3, 1, "", "STALENESS"], [95, 3, 1, "", "STALE_SINCE_DATE"]], "pyatlan.model.assets.Matillion": [[96, 3, 1, "", "MATILLION_VERSION"]], "pyatlan.model.assets.MatillionComponent": [[97, 3, 1, "", "MATILLION_COMPONENT_ID"], [97, 3, 1, "", "MATILLION_COMPONENT_IMPLEMENTATION_ID"], [97, 3, 1, "", "MATILLION_COMPONENT_LAST_FIVE_RUN_STATUS"], [97, 3, 1, "", "MATILLION_COMPONENT_LAST_RUN_STATUS"], [97, 3, 1, "", "MATILLION_COMPONENT_LINKED_JOB"], [97, 3, 1, "", "MATILLION_COMPONENT_SQLS"], [97, 3, 1, "", "MATILLION_JOB"], [97, 3, 1, "", "MATILLION_JOB_NAME"], [97, 3, 1, "", "MATILLION_JOB_QUALIFIED_NAME"], [97, 3, 1, "", "MATILLION_PROCESS"]], "pyatlan.model.assets.MatillionGroup": [[98, 3, 1, "", "MATILLION_PROJECTS"], [98, 3, 1, "", "MATILLION_PROJECT_COUNT"]], "pyatlan.model.assets.MatillionJob": [[99, 3, 1, "", "MATILLION_COMPONENTS"], [99, 3, 1, "", "MATILLION_JOB_COMPONENT_COUNT"], [99, 3, 1, "", "MATILLION_JOB_PATH"], [99, 3, 1, "", "MATILLION_JOB_SCHEDULE"], [99, 3, 1, "", "MATILLION_JOB_TYPE"], [99, 3, 1, "", "MATILLION_PROJECT"], [99, 3, 1, "", "MATILLION_PROJECT_NAME"], [99, 3, 1, "", "MATILLION_PROJECT_QUALIFIED_NAME"]], "pyatlan.model.assets.MatillionProject": [[100, 3, 1, "", "MATILLION_ENVIRONMENTS"], [100, 3, 1, "", "MATILLION_GROUP"], [100, 3, 1, "", "MATILLION_GROUP_NAME"], [100, 3, 1, "", "MATILLION_GROUP_QUALIFIED_NAME"], [100, 3, 1, "", "MATILLION_JOBS"], [100, 3, 1, "", "MATILLION_PROJECT_JOB_COUNT"], [100, 3, 1, "", "MATILLION_VERSIONS"]], "pyatlan.model.assets.Metabase": [[103, 3, 1, "", "METABASE_COLLECTION_NAME"], [103, 3, 1, "", "METABASE_COLLECTION_QUALIFIED_NAME"]], "pyatlan.model.assets.MetabaseCollection": [[104, 3, 1, "", "METABASE_COLOR"], [104, 3, 1, "", "METABASE_DASHBOARDS"], [104, 3, 1, "", "METABASE_IS_PERSONAL_COLLECTION"], [104, 3, 1, "", "METABASE_NAMESPACE"], [104, 3, 1, "", "METABASE_QUESTIONS"], [104, 3, 1, "", "METABASE_SLUG"]], "pyatlan.model.assets.MetabaseDashboard": [[105, 3, 1, "", "METABASE_COLLECTION"], [105, 3, 1, "", "METABASE_QUESTIONS"], [105, 3, 1, "", "METABASE_QUESTION_COUNT"]], "pyatlan.model.assets.MetabaseQuestion": [[106, 3, 1, "", "METABASE_COLLECTION"], [106, 3, 1, "", "METABASE_DASHBOARDS"], [106, 3, 1, "", "METABASE_DASHBOARD_COUNT"], [106, 3, 1, "", "METABASE_QUERY"], [106, 3, 1, "", "METABASE_QUERY_TYPE"]], "pyatlan.model.assets.Metric": [[107, 3, 1, "", "ASSETS"], [107, 3, 1, "", "METRIC_DIMENSION_COLUMNS"], [107, 3, 1, "", "METRIC_FILTERS"], [107, 3, 1, "", "METRIC_SQL"], [107, 3, 1, "", "METRIC_TIMESTAMP_COLUMN"], [107, 3, 1, "", "METRIC_TIME_GRAINS"], [107, 3, 1, "", "METRIC_TYPE"]], "pyatlan.model.assets.MicroStrategy": [[108, 3, 1, "", "MICRO_STRATEGY_CERTIFIED_AT"], [108, 3, 1, "", "MICRO_STRATEGY_CERTIFIED_BY"], [108, 3, 1, "", "MICRO_STRATEGY_CUBE_NAMES"], [108, 3, 1, "", "MICRO_STRATEGY_CUBE_QUALIFIED_NAMES"], [108, 3, 1, "", "MICRO_STRATEGY_IS_CERTIFIED"], [108, 3, 1, "", "MICRO_STRATEGY_LOCATION"], [108, 3, 1, "", "MICRO_STRATEGY_PROJECT_NAME"], [108, 3, 1, "", "MICRO_STRATEGY_PROJECT_QUALIFIED_NAME"], [108, 3, 1, "", "MICRO_STRATEGY_REPORT_NAMES"], [108, 3, 1, "", "MICRO_STRATEGY_REPORT_QUALIFIED_NAMES"]], "pyatlan.model.assets.MicroStrategyAttribute": [[109, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTE_FORMS"], [109, 3, 1, "", "MICRO_STRATEGY_CUBES"], [109, 3, 1, "", "MICRO_STRATEGY_METRICS"], [109, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [109, 3, 1, "", "MICRO_STRATEGY_REPORTS"]], "pyatlan.model.assets.MicroStrategyCube": [[110, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [110, 3, 1, "", "MICRO_STRATEGY_CUBE_QUERY"], [110, 3, 1, "", "MICRO_STRATEGY_CUBE_TYPE"], [110, 3, 1, "", "MICRO_STRATEGY_METRICS"], [110, 3, 1, "", "MICRO_STRATEGY_PROJECT"]], "pyatlan.model.assets.MicroStrategyDocument": [[111, 3, 1, "", "MICRO_STRATEGY_PROJECT"]], "pyatlan.model.assets.MicroStrategyDossier": [[112, 3, 1, "", "MICRO_STRATEGY_DOSSIER_CHAPTER_NAMES"], [112, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [112, 3, 1, "", "MICRO_STRATEGY_VISUALIZATIONS"]], "pyatlan.model.assets.MicroStrategyFact": [[113, 3, 1, "", "MICRO_STRATEGY_FACT_EXPRESSIONS"], [113, 3, 1, "", "MICRO_STRATEGY_METRICS"], [113, 3, 1, "", "MICRO_STRATEGY_PROJECT"]], "pyatlan.model.assets.MicroStrategyMetric": [[114, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [114, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTE_NAMES"], [114, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTE_QUALIFIED_NAMES"], [114, 3, 1, "", "MICRO_STRATEGY_CUBES"], [114, 3, 1, "", "MICRO_STRATEGY_FACTS"], [114, 3, 1, "", "MICRO_STRATEGY_FACT_NAMES"], [114, 3, 1, "", "MICRO_STRATEGY_FACT_QUALIFIED_NAMES"], [114, 3, 1, "", "MICRO_STRATEGY_METRIC_CHILDREN"], [114, 3, 1, "", "MICRO_STRATEGY_METRIC_EXPRESSION"], [114, 3, 1, "", "MICRO_STRATEGY_METRIC_PARENTS"], [114, 3, 1, "", "MICRO_STRATEGY_METRIC_PARENT_NAMES"], [114, 3, 1, "", "MICRO_STRATEGY_METRIC_PARENT_QUALIFIED_NAMES"], [114, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [114, 3, 1, "", "MICRO_STRATEGY_REPORTS"]], "pyatlan.model.assets.MicroStrategyProject": [[115, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [115, 3, 1, "", "MICRO_STRATEGY_CUBES"], [115, 3, 1, "", "MICRO_STRATEGY_DOCUMENTS"], [115, 3, 1, "", "MICRO_STRATEGY_DOSSIERS"], [115, 3, 1, "", "MICRO_STRATEGY_FACTS"], [115, 3, 1, "", "MICRO_STRATEGY_METRICS"], [115, 3, 1, "", "MICRO_STRATEGY_REPORTS"], [115, 3, 1, "", "MICRO_STRATEGY_VISUALIZATIONS"]], "pyatlan.model.assets.MicroStrategyReport": [[116, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [116, 3, 1, "", "MICRO_STRATEGY_METRICS"], [116, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [116, 3, 1, "", "MICRO_STRATEGY_REPORT_TYPE"]], "pyatlan.model.assets.MicroStrategyVisualization": [[117, 3, 1, "", "MICRO_STRATEGY_DOSSIER"], [117, 3, 1, "", "MICRO_STRATEGY_DOSSIER_NAME"], [117, 3, 1, "", "MICRO_STRATEGY_DOSSIER_QUALIFIED_NAME"], [117, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [117, 3, 1, "", "MICRO_STRATEGY_VISUALIZATION_TYPE"]], "pyatlan.model.assets.Mode": [[118, 3, 1, "", "MODE_ID"], [118, 3, 1, "", "MODE_QUERY_NAME"], [118, 3, 1, "", "MODE_QUERY_QUALIFIED_NAME"], [118, 3, 1, "", "MODE_REPORT_NAME"], [118, 3, 1, "", "MODE_REPORT_QUALIFIED_NAME"], [118, 3, 1, "", "MODE_TOKEN"], [118, 3, 1, "", "MODE_WORKSPACE_NAME"], [118, 3, 1, "", "MODE_WORKSPACE_QUALIFIED_NAME"], [118, 3, 1, "", "MODE_WORKSPACE_USERNAME"]], "pyatlan.model.assets.ModeChart": [[119, 3, 1, "", "MODE_CHART_TYPE"], [119, 3, 1, "", "MODE_QUERY"]], "pyatlan.model.assets.ModeCollection": [[120, 3, 1, "", "MODE_COLLECTION_STATE"], [120, 3, 1, "", "MODE_COLLECTION_TYPE"], [120, 3, 1, "", "MODE_REPORTS"], [120, 3, 1, "", "MODE_WORKSPACE"]], "pyatlan.model.assets.ModeQuery": [[121, 3, 1, "", "MODE_CHARTS"], [121, 3, 1, "", "MODE_RAW_QUERY"], [121, 3, 1, "", "MODE_REPORT"], [121, 3, 1, "", "MODE_REPORT_IMPORT_COUNT"]], "pyatlan.model.assets.ModeReport": [[122, 3, 1, "", "MODE_CHART_COUNT"], [122, 3, 1, "", "MODE_COLLECTIONS"], [122, 3, 1, "", "MODE_COLLECTION_TOKEN"], [122, 3, 1, "", "MODE_IS_PUBLIC"], [122, 3, 1, "", "MODE_IS_SHARED"], [122, 3, 1, "", "MODE_QUERIES"], [122, 3, 1, "", "MODE_QUERY_COUNT"], [122, 3, 1, "", "MODE_QUERY_PREVIEW"], [122, 3, 1, "", "MODE_REPORT_PUBLISHED_AT"]], "pyatlan.model.assets.ModeWorkspace": [[123, 3, 1, "", "MODE_COLLECTIONS"], [123, 3, 1, "", "MODE_COLLECTION_COUNT"]], "pyatlan.model.assets.MongoDBCollection": [[125, 3, 1, "", "ALIAS"], [125, 3, 1, "", "CALCULATION_VIEW_NAME"], [125, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [125, 3, 1, "", "COLUMN_COUNT"], [125, 3, 1, "", "DATABASE_NAME"], [125, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [125, 3, 1, "", "EXTERNAL_LOCATION"], [125, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [125, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [125, 3, 1, "", "IS_PARTITIONED"], [125, 3, 1, "", "IS_PROFILED"], [125, 3, 1, "", "IS_QUERY_PREVIEW"], [125, 3, 1, "", "IS_SHARDED"], [125, 3, 1, "", "IS_TEMPORARY"], [125, 3, 1, "", "LAST_PROFILED_AT"], [125, 3, 1, "", "MONGO_DB_COLLECTION_AVERAGE_OBJECT_SIZE"], [125, 3, 1, "", "MONGO_DB_COLLECTION_EXPIRE_AFTER_SECONDS"], [125, 3, 1, "", "MONGO_DB_COLLECTION_IS_CAPPED"], [125, 3, 1, "", "MONGO_DB_COLLECTION_MAXIMUM_DOCUMENT_COUNT"], [125, 3, 1, "", "MONGO_DB_COLLECTION_MAX_SIZE"], [125, 3, 1, "", "MONGO_DB_COLLECTION_NUM_INDEXES"], [125, 3, 1, "", "MONGO_DB_COLLECTION_NUM_ORPHAN_DOCS"], [125, 3, 1, "", "MONGO_DB_COLLECTION_SCHEMA_DEFINITION"], [125, 3, 1, "", "MONGO_DB_COLLECTION_SUBTYPE"], [125, 3, 1, "", "MONGO_DB_COLLECTION_TIME_FIELD"], [125, 3, 1, "", "MONGO_DB_COLLECTION_TIME_GRANULARITY"], [125, 3, 1, "", "MONGO_DB_COLLECTION_TOTAL_INDEX_SIZE"], [125, 3, 1, "", "MONGO_DB_DATABASE"], [125, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [125, 3, 1, "", "PARTITION_COUNT"], [125, 3, 1, "", "PARTITION_LIST"], [125, 3, 1, "", "PARTITION_STRATEGY"], [125, 3, 1, "", "QUERY_COUNT"], [125, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [125, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [125, 3, 1, "", "QUERY_USER_COUNT"], [125, 3, 1, "", "QUERY_USER_MAP"], [125, 3, 1, "", "ROW_COUNT"], [125, 3, 1, "", "SCHEMA_NAME"], [125, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [125, 3, 1, "", "SIZE_BYTES"], [125, 3, 1, "", "TABLE_NAME"], [125, 3, 1, "", "TABLE_QUALIFIED_NAME"], [125, 3, 1, "", "VIEW_NAME"], [125, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.MongoDBDatabase": [[126, 3, 1, "", "CALCULATION_VIEW_NAME"], [126, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [126, 3, 1, "", "DATABASE_NAME"], [126, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [126, 3, 1, "", "IS_PROFILED"], [126, 3, 1, "", "LAST_PROFILED_AT"], [126, 3, 1, "", "MONGO_DB_COLLECTIONS"], [126, 3, 1, "", "MONGO_DB_DATABASE_COLLECTION_COUNT"], [126, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [126, 3, 1, "", "QUERY_COUNT"], [126, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [126, 3, 1, "", "QUERY_USER_COUNT"], [126, 3, 1, "", "QUERY_USER_MAP"], [126, 3, 1, "", "SCHEMA_COUNT"], [126, 3, 1, "", "SCHEMA_NAME"], [126, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [126, 3, 1, "", "TABLE_NAME"], [126, 3, 1, "", "TABLE_QUALIFIED_NAME"], [126, 3, 1, "", "VIEW_NAME"], [126, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.MonteCarlo": [[127, 3, 1, "", "MC_ASSET_QUALIFIED_NAMES"], [127, 3, 1, "", "MC_LABELS"]], "pyatlan.model.assets.MultiDimensionalDataset": [[128, 3, 1, "", "CUBE_DIMENSION_NAME"], [128, 3, 1, "", "CUBE_DIMENSION_QUALIFIED_NAME"], [128, 3, 1, "", "CUBE_HIERARCHY_NAME"], [128, 3, 1, "", "CUBE_HIERARCHY_QUALIFIED_NAME"], [128, 3, 1, "", "CUBE_NAME"], [128, 3, 1, "", "CUBE_QUALIFIED_NAME"]], "pyatlan.model.assets.Namespace": [[129, 3, 1, "", "CHILDREN_FOLDERS"], [129, 3, 1, "", "CHILDREN_QUERIES"]], "pyatlan.model.assets.NoSQL": [[130, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"]], "pyatlan.model.assets.Persona": [[132, 3, 1, "", "PERSONA_GROUPS"], [132, 3, 1, "", "PERSONA_USERS"], [132, 3, 1, "", "ROLE_ID"]], "pyatlan.model.assets.PowerBI": [[133, 3, 1, "", "POWER_BI_ENDORSEMENT"], [133, 3, 1, "", "POWER_BI_FORMAT_STRING"], [133, 3, 1, "", "POWER_BI_IS_HIDDEN"], [133, 3, 1, "", "POWER_BI_TABLE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIColumn": [[134, 3, 1, "", "DATASET_QUALIFIED_NAME"], [134, 3, 1, "", "POWER_BI_COLUMN_DATA_CATEGORY"], [134, 3, 1, "", "POWER_BI_COLUMN_DATA_TYPE"], [134, 3, 1, "", "POWER_BI_COLUMN_SUMMARIZE_BY"], [134, 3, 1, "", "POWER_BI_SORT_BY_COLUMN"], [134, 3, 1, "", "TABLE"], [134, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDashboard": [[135, 3, 1, "", "TILES"], [135, 3, 1, "", "TILE_COUNT"], [135, 3, 1, "", "WEB_URL"], [135, 3, 1, "", "WORKSPACE"], [135, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDataflow": [[136, 3, 1, "", "DATASETS"], [136, 3, 1, "", "WEB_URL"], [136, 3, 1, "", "WORKSPACE"], [136, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDataset": [[137, 3, 1, "", "DATAFLOWS"], [137, 3, 1, "", "DATASOURCES"], [137, 3, 1, "", "REPORTS"], [137, 3, 1, "", "TABLES"], [137, 3, 1, "", "TILES"], [137, 3, 1, "", "WEB_URL"], [137, 3, 1, "", "WORKSPACE"], [137, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDatasource": [[138, 3, 1, "", "CONNECTION_DETAILS"], [138, 3, 1, "", "DATASETS"]], "pyatlan.model.assets.PowerBIMeasure": [[139, 3, 1, "", "DATASET_QUALIFIED_NAME"], [139, 3, 1, "", "POWER_BI_IS_EXTERNAL_MEASURE"], [139, 3, 1, "", "POWER_BI_MEASURE_EXPRESSION"], [139, 3, 1, "", "TABLE"], [139, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIPage": [[140, 3, 1, "", "REPORT"], [140, 3, 1, "", "REPORT_QUALIFIED_NAME"], [140, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIReport": [[141, 3, 1, "", "DATASET"], [141, 3, 1, "", "DATASET_QUALIFIED_NAME"], [141, 3, 1, "", "PAGES"], [141, 3, 1, "", "PAGE_COUNT"], [141, 3, 1, "", "TILES"], [141, 3, 1, "", "WEB_URL"], [141, 3, 1, "", "WORKSPACE"], [141, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBITable": [[142, 3, 1, "", "COLUMNS"], [142, 3, 1, "", "DATASET"], [142, 3, 1, "", "DATASET_QUALIFIED_NAME"], [142, 3, 1, "", "MEASURES"], [142, 3, 1, "", "POWER_BI_TABLE_COLUMN_COUNT"], [142, 3, 1, "", "POWER_BI_TABLE_MEASURE_COUNT"], [142, 3, 1, "", "POWER_BI_TABLE_SOURCE_EXPRESSIONS"], [142, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBITile": [[143, 3, 1, "", "DASHBOARD"], [143, 3, 1, "", "DASHBOARD_QUALIFIED_NAME"], [143, 3, 1, "", "DATASET"], [143, 3, 1, "", "REPORT"], [143, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIWorkspace": [[144, 3, 1, "", "DASHBOARDS"], [144, 3, 1, "", "DASHBOARD_COUNT"], [144, 3, 1, "", "DATAFLOWS"], [144, 3, 1, "", "DATAFLOW_COUNT"], [144, 3, 1, "", "DATASETS"], [144, 3, 1, "", "DATASET_COUNT"], [144, 3, 1, "", "REPORTS"], [144, 3, 1, "", "REPORT_COUNT"], [144, 3, 1, "", "WEB_URL"]], "pyatlan.model.assets.Preset": [[145, 3, 1, "", "PRESET_DASHBOARD_ID"], [145, 3, 1, "", "PRESET_DASHBOARD_QUALIFIED_NAME"], [145, 3, 1, "", "PRESET_WORKSPACE_ID"], [145, 3, 1, "", "PRESET_WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PresetChart": [[146, 3, 1, "", "PRESET_CHART_DESCRIPTION_MARKDOWN"], [146, 3, 1, "", "PRESET_CHART_FORM_DATA"], [146, 3, 1, "", "PRESET_DASHBOARD"]], "pyatlan.model.assets.PresetDashboard": [[147, 3, 1, "", "PRESET_CHARTS"], [147, 3, 1, "", "PRESET_DASHBOARD_CHANGED_BY_NAME"], [147, 3, 1, "", "PRESET_DASHBOARD_CHANGED_BY_URL"], [147, 3, 1, "", "PRESET_DASHBOARD_CHART_COUNT"], [147, 3, 1, "", "PRESET_DASHBOARD_IS_MANAGED_EXTERNALLY"], [147, 3, 1, "", "PRESET_DASHBOARD_IS_PUBLISHED"], [147, 3, 1, "", "PRESET_DASHBOARD_THUMBNAIL_URL"], [147, 3, 1, "", "PRESET_DATASETS"], [147, 3, 1, "", "PRESET_WORKSPACE"]], "pyatlan.model.assets.PresetDataset": [[148, 3, 1, "", "PRESET_DASHBOARD"], [148, 3, 1, "", "PRESET_DATASET_DATASOURCE_NAME"], [148, 3, 1, "", "PRESET_DATASET_ID"], [148, 3, 1, "", "PRESET_DATASET_TYPE"]], "pyatlan.model.assets.PresetWorkspace": [[149, 3, 1, "", "PRESET_DASHBOARDS"], [149, 3, 1, "", "PRESET_WORKSPACE_CLUSTER_ID"], [149, 3, 1, "", "PRESET_WORKSPACE_DASHBOARD_COUNT"], [149, 3, 1, "", "PRESET_WORKSPACE_DATASET_COUNT"], [149, 3, 1, "", "PRESET_WORKSPACE_DEPLOYMENT_ID"], [149, 3, 1, "", "PRESET_WORKSPACE_HOSTNAME"], [149, 3, 1, "", "PRESET_WORKSPACE_IS_IN_MAINTENANCE_MODE"], [149, 3, 1, "", "PRESET_WORKSPACE_PUBLIC_DASHBOARDS_ALLOWED"], [149, 3, 1, "", "PRESET_WORKSPACE_REGION"], [149, 3, 1, "", "PRESET_WORKSPACE_STATUS"]], "pyatlan.model.assets.Procedure": [[150, 3, 1, "", "ATLAN_SCHEMA"], [150, 3, 1, "", "DEFINITION"]], "pyatlan.model.assets.Process": [[151, 3, 1, "", "AIRFLOW_TASKS"], [151, 3, 1, "", "AST"], [151, 3, 1, "", "CODE"], [151, 3, 1, "", "COLUMN_PROCESSES"], [151, 3, 1, "", "MATILLION_COMPONENT"], [151, 3, 1, "", "SPARK_JOBS"], [151, 3, 1, "", "SQL"]], "pyatlan.model.assets.Purpose": [[153, 3, 1, "", "PURPOSE_CLASSIFICATIONS"]], "pyatlan.model.assets.Qlik": [[154, 3, 1, "", "QLIK_APP_ID"], [154, 3, 1, "", "QLIK_APP_QUALIFIED_NAME"], [154, 3, 1, "", "QLIK_ID"], [154, 3, 1, "", "QLIK_IS_PUBLISHED"], [154, 3, 1, "", "QLIK_OWNER_ID"], [154, 3, 1, "", "QLIK_QRI"], [154, 3, 1, "", "QLIK_SPACE_ID"], [154, 3, 1, "", "QLIK_SPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.QlikApp": [[155, 3, 1, "", "QLIK_APP_STATIC_BYTE_SIZE"], [155, 3, 1, "", "QLIK_HAS_SECTION_ACCESS"], [155, 3, 1, "", "QLIK_IS_DIRECT_QUERY_MODE"], [155, 3, 1, "", "QLIK_IS_ENCRYPTED"], [155, 3, 1, "", "QLIK_ORIGIN_APP_ID"], [155, 3, 1, "", "QLIK_SHEETS"], [155, 3, 1, "", "QLIK_SPACE"]], "pyatlan.model.assets.QlikChart": [[156, 3, 1, "", "QLIK_CHART_FOOTNOTE"], [156, 3, 1, "", "QLIK_CHART_ORIENTATION"], [156, 3, 1, "", "QLIK_CHART_SUBTITLE"], [156, 3, 1, "", "QLIK_CHART_TYPE"], [156, 3, 1, "", "QLIK_SHEET"]], "pyatlan.model.assets.QlikDataset": [[157, 3, 1, "", "QLIK_DATASET_SUBTYPE"], [157, 3, 1, "", "QLIK_DATASET_TECHNICAL_NAME"], [157, 3, 1, "", "QLIK_DATASET_TYPE"], [157, 3, 1, "", "QLIK_DATASET_URI"], [157, 3, 1, "", "QLIK_SPACE"]], "pyatlan.model.assets.QlikSheet": [[158, 3, 1, "", "QLIK_APP"], [158, 3, 1, "", "QLIK_CHARTS"], [158, 3, 1, "", "QLIK_SHEET_IS_APPROVED"]], "pyatlan.model.assets.QlikSpace": [[159, 3, 1, "", "QLIK_APPS"], [159, 3, 1, "", "QLIK_DATASETS"], [159, 3, 1, "", "QLIK_SPACE_TYPE"]], "pyatlan.model.assets.Query": [[161, 3, 1, "", "COLLECTION_QUALIFIED_NAME"], [161, 3, 1, "", "COLUMNS"], [161, 3, 1, "", "DEFAULT_DATABASE_QUALIFIED_NAME"], [161, 3, 1, "", "DEFAULT_SCHEMA_QUALIFIED_NAME"], [161, 3, 1, "", "IS_PRIVATE"], [161, 3, 1, "", "IS_SQL_SNIPPET"], [161, 3, 1, "", "IS_VISUAL_QUERY"], [161, 3, 1, "", "LONG_RAW_QUERY"], [161, 3, 1, "", "PARENT"], [161, 3, 1, "", "PARENT_QUALIFIED_NAME"], [161, 3, 1, "", "RAW_QUERY"], [161, 3, 1, "", "RAW_QUERY_TEXT"], [161, 3, 1, "", "TABLES"], [161, 3, 1, "", "VARIABLES_SCHEMA_BASE64"], [161, 3, 1, "", "VIEWS"], [161, 3, 1, "", "VISUAL_BUILDER_SCHEMA_BASE64"]], "pyatlan.model.assets.QuickSight": [[162, 3, 1, "", "QUICK_SIGHT_ID"], [162, 3, 1, "", "QUICK_SIGHT_SHEET_ID"], [162, 3, 1, "", "QUICK_SIGHT_SHEET_NAME"]], "pyatlan.model.assets.QuickSightAnalysis": [[163, 3, 1, "", "QUICK_SIGHT_ANALYSIS_CALCULATED_FIELDS"], [163, 3, 1, "", "QUICK_SIGHT_ANALYSIS_FILTER_GROUPS"], [163, 3, 1, "", "QUICK_SIGHT_ANALYSIS_FOLDERS"], [163, 3, 1, "", "QUICK_SIGHT_ANALYSIS_PARAMETER_DECLARATIONS"], [163, 3, 1, "", "QUICK_SIGHT_ANALYSIS_STATUS"], [163, 3, 1, "", "QUICK_SIGHT_ANALYSIS_VISUALS"]], "pyatlan.model.assets.QuickSightAnalysisVisual": [[164, 3, 1, "", "QUICK_SIGHT_ANALYSIS"], [164, 3, 1, "", "QUICK_SIGHT_ANALYSIS_QUALIFIED_NAME"]], "pyatlan.model.assets.QuickSightDashboard": [[165, 3, 1, "", "QUICK_SIGHT_DASHBOARD_FOLDERS"], [165, 3, 1, "", "QUICK_SIGHT_DASHBOARD_LAST_PUBLISHED_TIME"], [165, 3, 1, "", "QUICK_SIGHT_DASHBOARD_PUBLISHED_VERSION_NUMBER"], [165, 3, 1, "", "QUICK_SIGHT_DASHBOARD_VISUALS"]], "pyatlan.model.assets.QuickSightDashboardVisual": [[166, 3, 1, "", "QUICK_SIGHT_DASHBOARD"], [166, 3, 1, "", "QUICK_SIGHT_DASHBOARD_QUALIFIED_NAME"]], "pyatlan.model.assets.QuickSightDataset": [[167, 3, 1, "", "QUICK_SIGHT_DATASET_COLUMN_COUNT"], [167, 3, 1, "", "QUICK_SIGHT_DATASET_FIELDS"], [167, 3, 1, "", "QUICK_SIGHT_DATASET_FOLDERS"], [167, 3, 1, "", "QUICK_SIGHT_DATASET_IMPORT_MODE"]], "pyatlan.model.assets.QuickSightDatasetField": [[168, 3, 1, "", "QUICK_SIGHT_DATASET"], [168, 3, 1, "", "QUICK_SIGHT_DATASET_FIELD_TYPE"], [168, 3, 1, "", "QUICK_SIGHT_DATASET_QUALIFIED_NAME"]], "pyatlan.model.assets.QuickSightFolder": [[169, 3, 1, "", "QUICK_SIGHT_ANALYSES"], [169, 3, 1, "", "QUICK_SIGHT_DASHBOARDS"], [169, 3, 1, "", "QUICK_SIGHT_DATASETS"], [169, 3, 1, "", "QUICK_SIGHT_FOLDER_HIERARCHY"], [169, 3, 1, "", "QUICK_SIGHT_FOLDER_TYPE"]], "pyatlan.model.assets.Readme": [[170, 3, 1, "", "ASSET"], [170, 3, 1, "", "SEE_ALSO"]], "pyatlan.model.assets.ReadmeTemplate": [[171, 3, 1, "", "ICON"], [171, 3, 1, "", "ICON_TYPE"]], "pyatlan.model.assets.Redash": [[172, 3, 1, "", "REDASH_IS_PUBLISHED"]], "pyatlan.model.assets.RedashDashboard": [[173, 3, 1, "", "REDASH_DASHBOARD_WIDGET_COUNT"]], "pyatlan.model.assets.RedashQuery": [[174, 3, 1, "", "REDASH_QUERY_LAST_EXECUTED_AT"], [174, 3, 1, "", "REDASH_QUERY_LAST_EXECUTION_RUNTIME"], [174, 3, 1, "", "REDASH_QUERY_PARAMETERS"], [174, 3, 1, "", "REDASH_QUERY_SCHEDULE"], [174, 3, 1, "", "REDASH_QUERY_SCHEDULE_HUMANIZED"], [174, 3, 1, "", "REDASH_QUERY_SQL"], [174, 3, 1, "", "REDASH_VISUALIZATIONS"]], "pyatlan.model.assets.RedashVisualization": [[175, 3, 1, "", "REDASH_QUERY"], [175, 3, 1, "", "REDASH_QUERY_NAME"], [175, 3, 1, "", "REDASH_QUERY_QUALIFIED_NAME"], [175, 3, 1, "", "REDASH_VISUALIZATION_TYPE"]], "pyatlan.model.assets.Referenceable": [[176, 3, 1, "", "ASSIGNED_TERMS"], [176, 3, 1, "", "ATLAN_TAGS"], [176, 3, 1, "", "CREATED_BY"], [176, 3, 1, "", "CREATE_TIME"], [176, 3, 1, "", "GUID"], [176, 3, 1, "", "PROPAGATED_ATLAN_TAGS"], [176, 3, 1, "", "QUALIFIED_NAME"], [176, 3, 1, "", "STATUS"], [176, 3, 1, "", "SUPER_TYPE_NAMES"], [176, 3, 1, "", "TYPE_NAME"], [176, 3, 1, "", "UPDATED_BY"], [176, 3, 1, "", "UPDATE_TIME"], [176, 1, 1, "", "can_be_archived"], [176, 1, 1, "", "json"]], "pyatlan.model.assets.Resource": [[177, 3, 1, "", "IS_GLOBAL"], [177, 3, 1, "", "LINK"], [177, 3, 1, "", "REFERENCE"], [177, 3, 1, "", "RESOURCE_METADATA"]], "pyatlan.model.assets.S3": [[178, 3, 1, "", "AWS_ACCOUNT_ID"], [178, 3, 1, "", "AWS_ARN"], [178, 3, 1, "", "AWS_OWNER_ID"], [178, 3, 1, "", "AWS_OWNER_NAME"], [178, 3, 1, "", "AWS_PARTITION"], [178, 3, 1, "", "AWS_REGION"], [178, 3, 1, "", "AWS_RESOURCE_ID"], [178, 3, 1, "", "AWS_SERVICE"], [178, 3, 1, "", "AWS_TAGS"], [178, 3, 1, "", "S3ENCRYPTION"], [178, 3, 1, "", "S3E_TAG"]], "pyatlan.model.assets.S3Bucket": [[179, 3, 1, "", "OBJECTS"], [179, 3, 1, "", "S3BUCKET_VERSIONING_ENABLED"], [179, 3, 1, "", "S3OBJECT_COUNT"]], "pyatlan.model.assets.S3Object": [[180, 3, 1, "", "BUCKET"], [180, 3, 1, "", "S3BUCKET_NAME"], [180, 3, 1, "", "S3BUCKET_QUALIFIED_NAME"], [180, 3, 1, "", "S3OBJECT_CONTENT_DISPOSITION"], [180, 3, 1, "", "S3OBJECT_CONTENT_TYPE"], [180, 3, 1, "", "S3OBJECT_KEY"], [180, 3, 1, "", "S3OBJECT_LAST_MODIFIED_TIME"], [180, 3, 1, "", "S3OBJECT_SIZE"], [180, 3, 1, "", "S3OBJECT_STORAGE_CLASS"], [180, 3, 1, "", "S3OBJECT_VERSION_ID"]], "pyatlan.model.assets.SQL": [[212, 3, 1, "", "CALCULATION_VIEW_NAME"], [212, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [212, 3, 1, "", "DATABASE_NAME"], [212, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [212, 3, 1, "", "DBT_MODELS"], [212, 3, 1, "", "DBT_SOURCES"], [212, 3, 1, "", "DBT_TESTS"], [212, 3, 1, "", "IS_PROFILED"], [212, 3, 1, "", "LAST_PROFILED_AT"], [212, 3, 1, "", "QUERY_COUNT"], [212, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [212, 3, 1, "", "QUERY_USER_COUNT"], [212, 3, 1, "", "QUERY_USER_MAP"], [212, 3, 1, "", "SCHEMA_NAME"], [212, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [212, 3, 1, "", "SQL_DBT_MODELS"], [212, 3, 1, "", "SQL_DBT_SOURCES"], [212, 3, 1, "", "TABLE_NAME"], [212, 3, 1, "", "TABLE_QUALIFIED_NAME"], [212, 3, 1, "", "VIEW_NAME"], [212, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.Salesforce": [[182, 3, 1, "", "API_NAME"], [182, 3, 1, "", "ORGANIZATION_QUALIFIED_NAME"]], "pyatlan.model.assets.SalesforceDashboard": [[183, 3, 1, "", "DASHBOARD_TYPE"], [183, 3, 1, "", "ORGANIZATION"], [183, 3, 1, "", "REPORTS"], [183, 3, 1, "", "REPORT_COUNT"], [183, 3, 1, "", "SOURCE_ID"]], "pyatlan.model.assets.SalesforceField": [[184, 3, 1, "", "DATA_TYPE"], [184, 3, 1, "", "DEFAULT_VALUE_FORMULA"], [184, 3, 1, "", "FORMULA"], [184, 3, 1, "", "INLINE_HELP_TEXT"], [184, 3, 1, "", "IS_CALCULATED"], [184, 3, 1, "", "IS_CASE_SENSITIVE"], [184, 3, 1, "", "IS_ENCRYPTED"], [184, 3, 1, "", "IS_NULLABLE"], [184, 3, 1, "", "IS_POLYMORPHIC_FOREIGN_KEY"], [184, 3, 1, "", "IS_UNIQUE"], [184, 3, 1, "", "LOOKUP_OBJECTS"], [184, 3, 1, "", "MAX_LENGTH"], [184, 3, 1, "", "NUMERIC_SCALE"], [184, 3, 1, "", "OBJECT"], [184, 3, 1, "", "OBJECT_QUALIFIED_NAME"], [184, 3, 1, "", "ORDER"], [184, 3, 1, "", "PICKLIST_VALUES"], [184, 3, 1, "", "PRECISION"]], "pyatlan.model.assets.SalesforceObject": [[185, 3, 1, "", "FIELDS"], [185, 3, 1, "", "FIELD_COUNT"], [185, 3, 1, "", "IS_CUSTOM"], [185, 3, 1, "", "IS_MERGABLE"], [185, 3, 1, "", "IS_QUERYABLE"], [185, 3, 1, "", "LOOKUP_FIELDS"], [185, 3, 1, "", "ORGANIZATION"]], "pyatlan.model.assets.SalesforceOrganization": [[186, 3, 1, "", "DASHBOARDS"], [186, 3, 1, "", "OBJECTS"], [186, 3, 1, "", "REPORTS"], [186, 3, 1, "", "SOURCE_ID"]], "pyatlan.model.assets.SalesforceReport": [[187, 3, 1, "", "DASHBOARDS"], [187, 3, 1, "", "DETAIL_COLUMNS"], [187, 3, 1, "", "ORGANIZATION"], [187, 3, 1, "", "REPORT_TYPE"], [187, 3, 1, "", "SOURCE_ID"]], "pyatlan.model.assets.Schema": [[188, 3, 1, "", "CALCULATION_VIEWS"], [188, 3, 1, "", "DATABASE"], [188, 3, 1, "", "FUNCTIONS"], [188, 3, 1, "", "LINKED_SCHEMA_QUALIFIED_NAME"], [188, 3, 1, "", "MATERIALISED_VIEWS"], [188, 3, 1, "", "PROCEDURES"], [188, 3, 1, "", "SNOWFLAKE_DYNAMIC_TABLES"], [188, 3, 1, "", "SNOWFLAKE_PIPES"], [188, 3, 1, "", "SNOWFLAKE_STREAMS"], [188, 3, 1, "", "SNOWFLAKE_TAGS"], [188, 3, 1, "", "TABLES"], [188, 3, 1, "", "TABLE_COUNT"], [188, 3, 1, "", "VIEWS"], [188, 3, 1, "", "VIEWS_COUNT"]], "pyatlan.model.assets.SchemaRegistry": [[189, 3, 1, "", "SCHEMA_REGISTRY_SCHEMA_ID"], [189, 3, 1, "", "SCHEMA_REGISTRY_SCHEMA_TYPE"]], "pyatlan.model.assets.SchemaRegistrySubject": [[190, 3, 1, "", "ASSETS"], [190, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_BASE_NAME"], [190, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_GOVERNING_ASSET_QUALIFIED_NAMES"], [190, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_IS_KEY_SCHEMA"], [190, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_DEFINITION"], [190, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_VERSION"], [190, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_SCHEMA_COMPATIBILITY"]], "pyatlan.model.assets.Sigma": [[191, 3, 1, "", "SIGMA_DATA_ELEMENT_NAME"], [191, 3, 1, "", "SIGMA_DATA_ELEMENT_QUALIFIED_NAME"], [191, 3, 1, "", "SIGMA_PAGE_NAME"], [191, 3, 1, "", "SIGMA_PAGE_QUALIFIED_NAME"], [191, 3, 1, "", "SIGMA_WORKBOOK_NAME"], [191, 3, 1, "", "SIGMA_WORKBOOK_QUALIFIED_NAME"]], "pyatlan.model.assets.SigmaDataElement": [[192, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELDS"], [192, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELD_COUNT"], [192, 3, 1, "", "SIGMA_DATA_ELEMENT_QUERY"], [192, 3, 1, "", "SIGMA_DATA_ELEMENT_TYPE"], [192, 3, 1, "", "SIGMA_PAGE"]], "pyatlan.model.assets.SigmaDataElementField": [[193, 3, 1, "", "SIGMA_DATA_ELEMENT"], [193, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELD_FORMULA"], [193, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELD_IS_HIDDEN"]], "pyatlan.model.assets.SigmaDataset": [[194, 3, 1, "", "SIGMA_DATASET_COLUMNS"], [194, 3, 1, "", "SIGMA_DATASET_COLUMN_COUNT"]], "pyatlan.model.assets.SigmaDatasetColumn": [[195, 3, 1, "", "SIGMA_DATASET"], [195, 3, 1, "", "SIGMA_DATASET_NAME"], [195, 3, 1, "", "SIGMA_DATASET_QUALIFIED_NAME"]], "pyatlan.model.assets.SigmaPage": [[196, 3, 1, "", "SIGMA_DATA_ELEMENTS"], [196, 3, 1, "", "SIGMA_DATA_ELEMENT_COUNT"], [196, 3, 1, "", "SIGMA_WORKBOOK"]], "pyatlan.model.assets.SigmaWorkbook": [[197, 3, 1, "", "SIGMA_PAGES"], [197, 3, 1, "", "SIGMA_PAGE_COUNT"]], "pyatlan.model.assets.SisenseDashboard": [[199, 3, 1, "", "SISENSE_DASHBOARD_FOLDER_QUALIFIED_NAME"], [199, 3, 1, "", "SISENSE_DASHBOARD_WIDGET_COUNT"], [199, 3, 1, "", "SISENSE_DATAMODELS"], [199, 3, 1, "", "SISENSE_FOLDER"], [199, 3, 1, "", "SISENSE_WIDGETS"]], "pyatlan.model.assets.SisenseDatamodel": [[200, 3, 1, "", "SISENSE_DASHBOARDS"], [200, 3, 1, "", "SISENSE_DATAMODEL_LAST_BUILD_TIME"], [200, 3, 1, "", "SISENSE_DATAMODEL_LAST_PUBLISH_TIME"], [200, 3, 1, "", "SISENSE_DATAMODEL_LAST_SUCCESSFUL_BUILD_TIME"], [200, 3, 1, "", "SISENSE_DATAMODEL_RELATION_TYPE"], [200, 3, 1, "", "SISENSE_DATAMODEL_REVISION"], [200, 3, 1, "", "SISENSE_DATAMODEL_SERVER"], [200, 3, 1, "", "SISENSE_DATAMODEL_TABLES"], [200, 3, 1, "", "SISENSE_DATAMODEL_TABLE_COUNT"], [200, 3, 1, "", "SISENSE_DATAMODEL_TYPE"]], "pyatlan.model.assets.SisenseDatamodelTable": [[201, 3, 1, "", "SISENSE_DATAMODEL"], [201, 3, 1, "", "SISENSE_DATAMODEL_QUALIFIED_NAME"], [201, 3, 1, "", "SISENSE_DATAMODEL_TABLE_COLUMN_COUNT"], [201, 3, 1, "", "SISENSE_DATAMODEL_TABLE_EXPRESSION"], [201, 3, 1, "", "SISENSE_DATAMODEL_TABLE_IS_HIDDEN"], [201, 3, 1, "", "SISENSE_DATAMODEL_TABLE_IS_MATERIALIZED"], [201, 3, 1, "", "SISENSE_DATAMODEL_TABLE_LIVE_QUERY_SETTINGS"], [201, 3, 1, "", "SISENSE_DATAMODEL_TABLE_SCHEDULE"], [201, 3, 1, "", "SISENSE_DATAMODEL_TABLE_TYPE"], [201, 3, 1, "", "SISENSE_WIDGETS"]], "pyatlan.model.assets.SisenseFolder": [[202, 3, 1, "", "SISENSE_CHILD_FOLDERS"], [202, 3, 1, "", "SISENSE_DASHBOARDS"], [202, 3, 1, "", "SISENSE_FOLDER_PARENT_FOLDER_QUALIFIED_NAME"], [202, 3, 1, "", "SISENSE_PARENT_FOLDER"], [202, 3, 1, "", "SISENSE_WIDGETS"]], "pyatlan.model.assets.SisenseWidget": [[203, 3, 1, "", "SISENSE_DASHBOARD"], [203, 3, 1, "", "SISENSE_DATAMODEL_TABLES"], [203, 3, 1, "", "SISENSE_FOLDER"], [203, 3, 1, "", "SISENSE_WIDGET_COLUMN_COUNT"], [203, 3, 1, "", "SISENSE_WIDGET_DASHBOARD_QUALIFIED_NAME"], [203, 3, 1, "", "SISENSE_WIDGET_FOLDER_QUALIFIED_NAME"], [203, 3, 1, "", "SISENSE_WIDGET_SIZE"], [203, 3, 1, "", "SISENSE_WIDGET_SUB_TYPE"]], "pyatlan.model.assets.SnowflakeDynamicTable": [[204, 3, 1, "", "DEFINITION"]], "pyatlan.model.assets.SnowflakePipe": [[205, 3, 1, "", "ATLAN_SCHEMA"], [205, 3, 1, "", "DEFINITION"], [205, 3, 1, "", "SNOWFLAKE_PIPE_IS_AUTO_INGEST_ENABLED"], [205, 3, 1, "", "SNOWFLAKE_PIPE_NOTIFICATION_CHANNEL_NAME"]], "pyatlan.model.assets.SnowflakeStream": [[206, 3, 1, "", "ATLAN_SCHEMA"], [206, 3, 1, "", "SNOWFLAKE_STREAM_IS_STALE"], [206, 3, 1, "", "SNOWFLAKE_STREAM_MODE"], [206, 3, 1, "", "SNOWFLAKE_STREAM_SOURCE_TYPE"], [206, 3, 1, "", "SNOWFLAKE_STREAM_STALE_AFTER"], [206, 3, 1, "", "SNOWFLAKE_STREAM_TYPE"]], "pyatlan.model.assets.SnowflakeTag": [[207, 3, 1, "", "ATLAN_SCHEMA"], [207, 3, 1, "", "CALCULATION_VIEW_NAME"], [207, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [207, 3, 1, "", "DATABASE_NAME"], [207, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [207, 3, 1, "", "DBT_MODELS"], [207, 3, 1, "", "DBT_SOURCES"], [207, 3, 1, "", "DBT_TESTS"], [207, 3, 1, "", "IS_PROFILED"], [207, 3, 1, "", "LAST_PROFILED_AT"], [207, 3, 1, "", "MAPPED_CLASSIFICATION_NAME"], [207, 3, 1, "", "QUERY_COUNT"], [207, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [207, 3, 1, "", "QUERY_USER_COUNT"], [207, 3, 1, "", "QUERY_USER_MAP"], [207, 3, 1, "", "SCHEMA_NAME"], [207, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [207, 3, 1, "", "SQL_DBT_MODELS"], [207, 3, 1, "", "SQL_DBT_SOURCES"], [207, 3, 1, "", "TABLE_NAME"], [207, 3, 1, "", "TABLE_QUALIFIED_NAME"], [207, 3, 1, "", "TAG_ALLOWED_VALUES"], [207, 3, 1, "", "TAG_ATTRIBUTES"], [207, 3, 1, "", "TAG_ID"], [207, 3, 1, "", "VIEW_NAME"], [207, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.SodaCheck": [[209, 3, 1, "", "SODA_CHECK_ASSETS"], [209, 3, 1, "", "SODA_CHECK_COLUMNS"], [209, 3, 1, "", "SODA_CHECK_DEFINITION"], [209, 3, 1, "", "SODA_CHECK_EVALUATION_STATUS"], [209, 3, 1, "", "SODA_CHECK_ID"], [209, 3, 1, "", "SODA_CHECK_INCIDENT_COUNT"], [209, 3, 1, "", "SODA_CHECK_LAST_SCAN_AT"]], "pyatlan.model.assets.Spark": [[210, 3, 1, "", "SPARK_RUN_END_TIME"], [210, 3, 1, "", "SPARK_RUN_OPEN_LINEAGE_STATE"], [210, 3, 1, "", "SPARK_RUN_OPEN_LINEAGE_VERSION"], [210, 3, 1, "", "SPARK_RUN_START_TIME"], [210, 3, 1, "", "SPARK_RUN_VERSION"]], "pyatlan.model.assets.SparkJob": [[211, 3, 1, "", "INPUTS"], [211, 3, 1, "", "OUTPUTS"], [211, 3, 1, "", "PROCESS"], [211, 3, 1, "", "SPARK_APP_NAME"], [211, 3, 1, "", "SPARK_MASTER"]], "pyatlan.model.assets.Table": [[213, 3, 1, "", "ALIAS"], [213, 3, 1, "", "ATLAN_SCHEMA"], [213, 3, 1, "", "COLUMNS"], [213, 3, 1, "", "COLUMN_COUNT"], [213, 3, 1, "", "DIMENSIONS"], [213, 3, 1, "", "EXTERNAL_LOCATION"], [213, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [213, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [213, 3, 1, "", "FACTS"], [213, 3, 1, "", "IS_PARTITIONED"], [213, 3, 1, "", "IS_QUERY_PREVIEW"], [213, 3, 1, "", "IS_SHARDED"], [213, 3, 1, "", "IS_TEMPORARY"], [213, 3, 1, "", "PARTITIONS"], [213, 3, 1, "", "PARTITION_COUNT"], [213, 3, 1, "", "PARTITION_LIST"], [213, 3, 1, "", "PARTITION_STRATEGY"], [213, 3, 1, "", "QUERIES"], [213, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [213, 3, 1, "", "ROW_COUNT"], [213, 3, 1, "", "SIZE_BYTES"]], "pyatlan.model.assets.TablePartition": [[225, 3, 1, "", "ALIAS"], [225, 3, 1, "", "CHILD_TABLE_PARTITIONS"], [225, 3, 1, "", "COLUMNS"], [225, 3, 1, "", "COLUMN_COUNT"], [225, 3, 1, "", "CONSTRAINT"], [225, 3, 1, "", "EXTERNAL_LOCATION"], [225, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [225, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [225, 3, 1, "", "IS_PARTITIONED"], [225, 3, 1, "", "IS_QUERY_PREVIEW"], [225, 3, 1, "", "IS_TEMPORARY"], [225, 3, 1, "", "PARENT_TABLE"], [225, 3, 1, "", "PARENT_TABLE_PARTITION"], [225, 3, 1, "", "PARTITION_COUNT"], [225, 3, 1, "", "PARTITION_LIST"], [225, 3, 1, "", "PARTITION_STRATEGY"], [225, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [225, 3, 1, "", "ROW_COUNT"], [225, 3, 1, "", "SIZE_BYTES"]], "pyatlan.model.assets.TableauCalculatedField": [[215, 3, 1, "", "DATASOURCE"], [215, 3, 1, "", "DATASOURCE_QUALIFIED_NAME"], [215, 3, 1, "", "DATA_CATEGORY"], [215, 3, 1, "", "FORMULA"], [215, 3, 1, "", "PROJECT_HIERARCHY"], [215, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [215, 3, 1, "", "ROLE"], [215, 3, 1, "", "SITE_QUALIFIED_NAME"], [215, 3, 1, "", "TABLEAU_DATA_TYPE"], [215, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [215, 3, 1, "", "UPSTREAM_FIELDS"], [215, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"], [215, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauDashboard": [[216, 3, 1, "", "PROJECT_HIERARCHY"], [216, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [216, 3, 1, "", "SITE_QUALIFIED_NAME"], [216, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [216, 3, 1, "", "WORKBOOK"], [216, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"], [216, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauDatasource": [[217, 3, 1, "", "CERTIFICATION_NOTE"], [217, 3, 1, "", "CERTIFIER"], [217, 3, 1, "", "CERTIFIER_DISPLAY_NAME"], [217, 3, 1, "", "FIELDS"], [217, 3, 1, "", "HAS_EXTRACTS"], [217, 3, 1, "", "IS_CERTIFIED"], [217, 3, 1, "", "IS_PUBLISHED"], [217, 3, 1, "", "PROJECT"], [217, 3, 1, "", "PROJECT_HIERARCHY"], [217, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [217, 3, 1, "", "SITE_QUALIFIED_NAME"], [217, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [217, 3, 1, "", "UPSTREAM_DATASOURCES"], [217, 3, 1, "", "UPSTREAM_TABLES"], [217, 3, 1, "", "WORKBOOK"], [217, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"]], "pyatlan.model.assets.TableauDatasourceField": [[218, 3, 1, "", "DATASOURCE"], [218, 3, 1, "", "DATASOURCE_FIELD_TYPE"], [218, 3, 1, "", "DATASOURCE_QUALIFIED_NAME"], [218, 3, 1, "", "FULLY_QUALIFIED_NAME"], [218, 3, 1, "", "PROJECT_HIERARCHY"], [218, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [218, 3, 1, "", "SITE_QUALIFIED_NAME"], [218, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_BIN_SIZE"], [218, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_DATA_CATEGORY"], [218, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_DATA_TYPE"], [218, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_FORMULA"], [218, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_ROLE"], [218, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [218, 3, 1, "", "UPSTREAM_COLUMNS"], [218, 3, 1, "", "UPSTREAM_FIELDS"], [218, 3, 1, "", "UPSTREAM_TABLES"], [218, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"], [218, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauFlow": [[219, 3, 1, "", "INPUT_FIELDS"], [219, 3, 1, "", "OUTPUT_FIELDS"], [219, 3, 1, "", "OUTPUT_STEPS"], [219, 3, 1, "", "PROJECT"], [219, 3, 1, "", "PROJECT_HIERARCHY"], [219, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [219, 3, 1, "", "SITE_QUALIFIED_NAME"], [219, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "pyatlan.model.assets.TableauMetric": [[220, 3, 1, "", "PROJECT"], [220, 3, 1, "", "PROJECT_HIERARCHY"], [220, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [220, 3, 1, "", "SITE_QUALIFIED_NAME"], [220, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "pyatlan.model.assets.TableauProject": [[221, 3, 1, "", "CHILD_PROJECTS"], [221, 3, 1, "", "DATASOURCES"], [221, 3, 1, "", "FLOWS"], [221, 3, 1, "", "IS_TOP_LEVEL_PROJECT"], [221, 3, 1, "", "PARENT_PROJECT"], [221, 3, 1, "", "PROJECT_HIERARCHY"], [221, 3, 1, "", "SITE"], [221, 3, 1, "", "SITE_QUALIFIED_NAME"], [221, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [221, 3, 1, "", "WORKBOOKS"]], "pyatlan.model.assets.TableauSite": [[222, 3, 1, "", "PROJECTS"]], "pyatlan.model.assets.TableauWorkbook": [[223, 3, 1, "", "DASHBOARDS"], [223, 3, 1, "", "DATASOURCES"], [223, 3, 1, "", "PROJECT"], [223, 3, 1, "", "PROJECT_HIERARCHY"], [223, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [223, 3, 1, "", "SITE_QUALIFIED_NAME"], [223, 3, 1, "", "TOP_LEVEL_PROJECT_NAME"], [223, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [223, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauWorksheet": [[224, 3, 1, "", "CALCULATED_FIELDS"], [224, 3, 1, "", "DASHBOARDS"], [224, 3, 1, "", "DATASOURCE_FIELDS"], [224, 3, 1, "", "PROJECT_HIERARCHY"], [224, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [224, 3, 1, "", "SITE_QUALIFIED_NAME"], [224, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [224, 3, 1, "", "WORKBOOK"], [224, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"]], "pyatlan.model.assets.Tag": [[226, 3, 1, "", "MAPPED_CLASSIFICATION_NAME"], [226, 3, 1, "", "TAG_ALLOWED_VALUES"], [226, 3, 1, "", "TAG_ATTRIBUTES"], [226, 3, 1, "", "TAG_ID"]], "pyatlan.model.assets.TagAttachment": [[227, 3, 1, "", "TAG_ATTACHMENT_STRING_VALUE"], [227, 3, 1, "", "TAG_QUALIFIED_NAME"]], "pyatlan.model.assets.Thoughtspot": [[228, 3, 1, "", "THOUGHTSPOT_CHART_TYPE"], [228, 3, 1, "", "THOUGHTSPOT_COLUMN_COUNT"], [228, 3, 1, "", "THOUGHTSPOT_JOIN_COUNT"], [228, 3, 1, "", "THOUGHTSPOT_QUESTION_TEXT"]], "pyatlan.model.assets.ThoughtspotColumn": [[230, 3, 1, "", "THOUGHTSPOT_COLUMN_DATA_TYPE"], [230, 3, 1, "", "THOUGHTSPOT_COLUMN_TYPE"], [230, 3, 1, "", "THOUGHTSPOT_TABLE"], [230, 3, 1, "", "THOUGHTSPOT_TABLE_QUALIFIED_NAME"], [230, 3, 1, "", "THOUGHTSPOT_VIEW"], [230, 3, 1, "", "THOUGHTSPOT_VIEW_QUALIFIED_NAME"], [230, 3, 1, "", "THOUGHTSPOT_WORKSHEET"], [230, 3, 1, "", "THOUGHTSPOT_WORKSHEET_QUALIFIED_NAME"]], "pyatlan.model.assets.ThoughtspotDashlet": [[231, 3, 1, "", "THOUGHTSPOT_LIVEBOARD"], [231, 3, 1, "", "THOUGHTSPOT_LIVEBOARD_NAME"], [231, 3, 1, "", "THOUGHTSPOT_LIVEBOARD_QUALIFIED_NAME"]], "pyatlan.model.assets.ThoughtspotLiveboard": [[232, 3, 1, "", "THOUGHTSPOT_DASHLETS"]], "pyatlan.model.assets.ThoughtspotTable": [[233, 3, 1, "", "THOUGHTSPOT_COLUMNS"]], "pyatlan.model.assets.ThoughtspotView": [[234, 3, 1, "", "THOUGHTSPOT_COLUMNS"]], "pyatlan.model.assets.ThoughtspotWorksheet": [[235, 3, 1, "", "THOUGHTSPOT_COLUMNS"]], "pyatlan.model.assets.View": [[236, 3, 1, "", "ALIAS"], [236, 3, 1, "", "ATLAN_SCHEMA"], [236, 3, 1, "", "COLUMNS"], [236, 3, 1, "", "COLUMN_COUNT"], [236, 3, 1, "", "DEFINITION"], [236, 3, 1, "", "IS_QUERY_PREVIEW"], [236, 3, 1, "", "IS_TEMPORARY"], [236, 3, 1, "", "QUERIES"], [236, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [236, 3, 1, "", "ROW_COUNT"], [236, 3, 1, "", "SIZE_BYTES"]], "pyatlan.model.atlan_image": [[260, 0, 1, "", "AtlanImage"]], "pyatlan.model.core": [[261, 0, 1, "", "Announcement"], [261, 0, 1, "", "AssetRequest"], [261, 0, 1, "", "AssetResponse"], [261, 0, 1, "", "AtlanTag"], [261, 0, 1, "", "AtlanTagName"], [261, 0, 1, "", "AtlanTags"], [261, 0, 1, "", "BulkRequest"], [261, 0, 1, "", "SearchRequest"]], "pyatlan.model.core.AtlanTagName": [[261, 1, 1, "", "get_deleted_sentinel"]], "pyatlan.model.custom_metadata": [[262, 0, 1, "", "CustomMetadataDict"], [262, 0, 1, "", "CustomMetadataProxy"], [262, 0, 1, "", "CustomMetadataRequest"]], "pyatlan.model.custom_metadata.CustomMetadataDict": [[262, 4, 1, "", "business_attributes"], [262, 1, 1, "", "clear_all"], [262, 1, 1, "", "clear_unset"], [262, 1, 1, "", "get_deleted_sentinel"], [262, 1, 1, "", "is_set"], [262, 4, 1, "", "modified"]], "pyatlan.model.fields.atlan_fields": [[258, 0, 1, "", "AtlanField"], [248, 0, 1, "", "BooleanField"], [249, 0, 1, "", "CustomMetadataField"], [250, 0, 1, "", "KeywordField"], [251, 0, 1, "", "KeywordTextField"], [252, 0, 1, "", "KeywordTextStemmedField"], [253, 0, 1, "", "NumericField"], [254, 0, 1, "", "NumericRankField"], [255, 0, 1, "", "RelationField"], [256, 0, 1, "", "SearchableField"], [257, 0, 1, "", "TextField"]], "pyatlan.model.fields.atlan_fields.BooleanField": [[248, 4, 1, "", "boolean_field_name"], [248, 1, 1, "", "bucket_by"], [248, 1, 1, "", "eq"], [248, 1, 1, "", "has_any_value"], [248, 4, 1, "", "in_lineage"], [248, 1, 1, "", "order"]], "pyatlan.model.fields.atlan_fields.CustomMetadataField": [[249, 1, 1, "", "between"], [249, 1, 1, "", "bucket_by"], [249, 1, 1, "", "eq"], [249, 1, 1, "", "gt"], [249, 1, 1, "", "gte"], [249, 1, 1, "", "has_any_value"], [249, 1, 1, "", "lt"], [249, 1, 1, "", "lte"], [249, 1, 1, "", "match"], [249, 1, 1, "", "order"], [249, 1, 1, "", "startswith"], [249, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.KeywordField": [[250, 1, 1, "", "bucket_by"], [250, 1, 1, "", "eq"], [250, 1, 1, "", "has_any_value"], [250, 4, 1, "", "in_lineage"], [250, 4, 1, "", "keyword_field_name"], [250, 1, 1, "", "order"], [250, 1, 1, "", "regexp"], [250, 1, 1, "", "startswith"], [250, 1, 1, "", "wildcard"], [250, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.KeywordTextField": [[251, 1, 1, "", "bucket_by"], [251, 1, 1, "", "eq"], [251, 1, 1, "", "has_any_value"], [251, 4, 1, "", "in_lineage"], [251, 4, 1, "", "keyword_field_name"], [251, 1, 1, "", "match"], [251, 1, 1, "", "order"], [251, 1, 1, "", "regexp"], [251, 1, 1, "", "startswith"], [251, 4, 1, "", "text_field_name"], [251, 1, 1, "", "wildcard"], [251, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField": [[252, 1, 1, "", "bucket_by"], [252, 1, 1, "", "eq"], [252, 1, 1, "", "has_any_value"], [252, 4, 1, "", "in_lineage"], [252, 4, 1, "", "keyword_field_name"], [252, 1, 1, "", "match"], [252, 1, 1, "", "match_stemmed"], [252, 1, 1, "", "order"], [252, 1, 1, "", "regexp"], [252, 1, 1, "", "startswith"], [252, 4, 1, "", "text_field_name"], [252, 1, 1, "", "wildcard"], [252, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.NumericField": [[253, 1, 1, "", "avg"], [253, 1, 1, "", "between"], [253, 1, 1, "", "bucket_by"], [253, 1, 1, "", "eq"], [253, 1, 1, "", "gt"], [253, 1, 1, "", "gte"], [253, 1, 1, "", "has_any_value"], [253, 4, 1, "", "in_lineage"], [253, 1, 1, "", "lt"], [253, 1, 1, "", "lte"], [253, 1, 1, "", "max"], [253, 1, 1, "", "min"], [253, 4, 1, "", "numeric_field_name"], [253, 1, 1, "", "order"], [253, 1, 1, "", "sum"]], "pyatlan.model.fields.atlan_fields.NumericRankField": [[254, 1, 1, "", "avg"], [254, 1, 1, "", "between"], [254, 1, 1, "", "bucket_by"], [254, 1, 1, "", "eq"], [254, 1, 1, "", "gt"], [254, 1, 1, "", "gte"], [254, 1, 1, "", "has_any_value"], [254, 4, 1, "", "in_lineage"], [254, 1, 1, "", "lt"], [254, 1, 1, "", "lte"], [254, 1, 1, "", "max"], [254, 1, 1, "", "min"], [254, 4, 1, "", "numeric_field_name"], [254, 1, 1, "", "order"], [254, 1, 1, "", "sum"]], "pyatlan.model.fields.atlan_fields.SearchableField": [[256, 1, 1, "", "bucket_by"], [256, 1, 1, "", "has_any_value"], [256, 1, 1, "", "order"]], "pyatlan.model.fields.atlan_fields.TextField": [[257, 1, 1, "", "bucket_by"], [257, 1, 1, "", "has_any_value"], [257, 4, 1, "", "in_lineage"], [257, 1, 1, "", "match"], [257, 1, 1, "", "order"], [257, 4, 1, "", "text_field_name"]], "pyatlan.model.group": [[263, 0, 1, "", "AtlanGroup"]], "pyatlan.model.keycloak_events": [[264, 0, 1, "", "AdminEvent"], [264, 0, 1, "", "KeycloakEvent"]], "pyatlan.model.lineage": [[265, 0, 1, "", "EntityFilter"], [265, 0, 1, "", "FilterList"], [265, 0, 1, "", "LineageGraph"], [265, 0, 1, "", "LineageListRequest"], [265, 0, 1, "", "LineageRequest"], [265, 0, 1, "", "LineageResponse"]], "pyatlan.model.lineage.FilterList": [[265, 0, 1, "", "Condition"]], "pyatlan.model.role": [[266, 0, 1, "", "AtlanRole"]], "pyatlan.model.role.AtlanRole": [[266, 3, 1, "", "id"]], "pyatlan.model.typedef": [[267, 0, 1, "", "AtlanTagDef"], [267, 0, 1, "", "AttributeDef"], [267, 0, 1, "", "CustomMetadataDef"], [267, 0, 1, "", "EntityDef"], [267, 0, 1, "", "EnumDef"], [267, 0, 1, "", "RelationshipAttributeDef"], [267, 0, 1, "", "RelationshipDef"], [267, 0, 1, "", "StructDef"], [267, 0, 1, "", "TypeDef"], [267, 0, 1, "", "TypeDefResponse"]], "pyatlan.model.typedef.AttributeDef": [[267, 4, 1, "", "applicable_asset_types"], [267, 4, 1, "", "applicable_connections"], [267, 4, 1, "", "applicable_entity_types"], [267, 4, 1, "", "applicable_glossaries"], [267, 4, 1, "", "applicable_glossary_types"], [267, 4, 1, "", "applicable_other_asset_types"]], "pyatlan.model.typedef.EnumDef": [[267, 1, 1, "", "create"], [267, 1, 1, "", "get_valid_values"], [267, 1, 1, "", "update"]], "pyatlan.model.user": [[268, 0, 1, "", "AtlanUser"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"accesscontrol": 0, "adl": 1, "adlsaccount": 2, "adlscontain": 3, "adlsobject": 4, "airflow": 5, "airflowdag": 6, "airflowtask": 7, "api": 8, "apipath": 9, "apispec": 10, "asset": [11, 237], "atlasglossari": 12, "atlasglossarycategori": 13, "atlasglossaryterm": 14, "authpolici": 15, "authservic": 16, "aw": 17, "azur": 18, "azureeventhub": 19, "azureeventhubconsumergroup": 20, "badg": 21, "bi": 22, "biprocess": 23, "calculationview": 24, "catalog": 25, "cloud": 26, "cognit": 27, "cognite3dmodel": 28, "cogniteasset": 29, "cogniteev": 30, "cognitefil": 31, "cognitesequ": 32, "cognitetimeseri": 33, "collect": 34, "column": 35, "columnprocess": 36, "connect": 37, "cube": 38, "cubedimens": 39, "cubefield": 40, "cubehierarchi": 41, "databas": 42, "datacontract": 43, "datadomain": 44, "datamesh": 45, "dataproduct": 46, "dataqu": 47, "dataset": 48, "datastudio": 49, "datastudioasset": 50, "dbt": 51, "dbtcolumnprocess": 52, "dbtmetric": 53, "dbtmodel": 54, "dbtmodelcolumn": 55, "dbtprocess": 56, "dbtsourc": 57, "dbttag": 58, "dbttest": 59, "domo": 60, "domocard": 61, "domodashboard": 62, "domodataset": 63, "domodatasetcolumn": 64, "dynamodb": 65, "dynamodbglobalsecondaryindex": 66, "dynamodblocalsecondaryindex": 67, "dynamodbsecondaryindex": 68, "dynamodbt": 69, "eventstor": 70, "file": 71, "folder": 72, "function": 73, "gc": 74, "gcsbucket": 75, "gcsobject": 76, "googl": 77, "infrastructur": 78, "insight": 79, "kafka": 80, "kafkaconsumergroup": 81, "kafkatop": 82, "link": 83, "looker": 84, "lookerdashboard": 85, "lookerexplor": 86, "lookerfield": 87, "lookerfold": 88, "lookerlook": 89, "lookermodel": 90, "lookerproject": 91, "lookerqueri": 92, "lookertil": 93, "lookerview": 94, "materialisedview": 95, "matillion": 96, "matillioncompon": 97, "matilliongroup": 98, "matillionjob": 99, "matillionproject": 100, "mcincid": 101, "mcmonitor": 102, "metabas": 103, "metabasecollect": 104, "metabasedashboard": 105, "metabasequest": 106, "metric": 107, "microstrategi": 108, "microstrategyattribut": 109, "microstrategycub": 110, "microstrategydocu": 111, "microstrategydossi": 112, "microstrategyfact": 113, "microstrategymetr": 114, "microstrategyproject": 115, "microstrategyreport": 116, "microstrategyvisu": 117, "mode": 118, "modechart": 119, "modecollect": 120, "modequeri": 121, "modereport": 122, "modeworkspac": 123, "mongodb": 124, "mongodbcollect": 125, "mongodbdatabas": 126, "montecarlo": 127, "multidimensionaldataset": 128, "namespac": 129, "nosql": 130, "objectstor": 131, "persona": 132, "powerbi": 133, "powerbicolumn": 134, "powerbidashboard": 135, "powerbidataflow": 136, "powerbidataset": 137, "powerbidatasourc": 138, "powerbimeasur": 139, "powerbipag": 140, "powerbireport": 141, "powerbit": 142, "powerbitil": 143, "powerbiworkspac": 144, "preset": 145, "presetchart": 146, "presetdashboard": 147, "presetdataset": 148, "presetworkspac": 149, "procedur": 150, "process": 151, "processexecut": 152, "purpos": 153, "qlik": 154, "qlikapp": 155, "qlikchart": 156, "qlikdataset": 157, "qliksheet": 158, "qlikspac": 159, "qlikstream": 160, "queri": 161, "quicksight": 162, "quicksightanalysi": 163, "quicksightanalysisvisu": 164, "quicksightdashboard": 165, "quicksightdashboardvisu": 166, "quicksightdataset": 167, "quicksightdatasetfield": 168, "quicksightfold": 169, "readm": 170, "readmetempl": 171, "redash": 172, "redashdashboard": 173, "redashqueri": 174, "redashvisu": 175, "referenc": 176, "resourc": 177, "s3": 178, "s3bucket": 179, "s3object": 180, "saa": 181, "salesforc": 182, "salesforcedashboard": 183, "salesforcefield": 184, "salesforceobject": 185, "salesforceorgan": 186, "salesforcereport": 187, "schema": 188, "schemaregistri": 189, "schemaregistrysubject": 190, "sigma": 191, "sigmadatael": 192, "sigmadataelementfield": 193, "sigmadataset": 194, "sigmadatasetcolumn": 195, "sigmapag": 196, "sigmaworkbook": 197, "sisens": 198, "sisensedashboard": 199, "sisensedatamodel": 200, "sisensedatamodelt": 201, "sisensefold": 202, "sisensewidget": 203, "snowflakedynamict": 204, "snowflakepip": 205, "snowflakestream": 206, "snowflaketag": 207, "soda": 208, "sodacheck": 209, "spark": 210, "sparkjob": 211, "sql": 212, "tabl": 213, "tableau": 214, "tableaucalculatedfield": 215, "tableaudashboard": 216, "tableaudatasourc": 217, "tableaudatasourcefield": 218, "tableauflow": 219, "tableaumetr": 220, "tableauproject": 221, "tableausit": 222, "tableauworkbook": 223, "tableauworksheet": 224, "tablepartit": 225, "tag": 226, "tagattach": 227, "thoughtspot": 228, "thoughtspotansw": 229, "thoughtspotcolumn": 230, "thoughtspotdashlet": 231, "thoughtspotliveboard": 232, "thoughtspott": 233, "thoughtspotview": 234, "thoughtspotworksheet": 235, "view": 236, "atlantagcach": 238, "custommetadatacach": 239, "enumcach": 240, "groupcach": 241, "rolecach": 242, "usercach": 243, "cach": 244, "atlan": [245, 260], "client": 245, "interfac": 245, "event": [246, 264], "atlaneventhandl": 246, "error": 247, "handl": 247, "booleanfield": 248, "custommetadatafield": 249, "keywordfield": 250, "keywordtextfield": 251, "keywordtextstemmedfield": 252, "numericfield": 253, "numericrankfield": 254, "relationfield": 255, "searchablefield": 256, "textfield": 257, "field": 258, "atlanfield": 258, "pyatlan": 259, "imag": 260, "core": 261, "model": [261, 269], "custom": 262, "metadata": 262, "group": 263, "keycloak": 264, "lineag": 265, "role": 266, "typedef": 267, "user": 268, "other": 269}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"AccessControl": [[0, "accesscontrol"]], "ADLS": [[1, "adls"]], "ADLSAccount": [[2, "adlsaccount"]], "ADLSContainer": [[3, "adlscontainer"]], "ADLSObject": [[4, "adlsobject"]], "Airflow": [[5, "airflow"]], "AirflowDag": [[6, "airflowdag"]], "AirflowTask": [[7, "airflowtask"]], "API": [[8, "api"]], "APIPath": [[9, "apipath"]], "APISpec": [[10, "apispec"]], "Asset": [[11, "asset"]], "AtlasGlossary": [[12, "atlasglossary"]], "AtlasGlossaryCategory": [[13, "atlasglossarycategory"]], "AtlasGlossaryTerm": [[14, "atlasglossaryterm"]], "AuthPolicy": [[15, "authpolicy"]], "AuthService": [[16, "authservice"]], "AWS": [[17, "aws"]], "Azure": [[18, "azure"]], "AzureEventHub": [[19, "azureeventhub"]], "AzureEventHubConsumerGroup": [[20, "azureeventhubconsumergroup"]], "Badge": [[21, "badge"]], "BI": [[22, "bi"]], "BIProcess": [[23, "biprocess"]], "CalculationView": [[24, "calculationview"]], "Catalog": [[25, "catalog"]], "Cloud": [[26, "cloud"]], "Cognite": [[27, "cognite"]], "Cognite3DModel": [[28, "cognite3dmodel"]], "CogniteAsset": [[29, "cogniteasset"]], "CogniteEvent": [[30, "cogniteevent"]], "CogniteFile": [[31, "cognitefile"]], "CogniteSequence": [[32, "cognitesequence"]], "CogniteTimeSeries": [[33, "cognitetimeseries"]], "Collection": [[34, "collection"]], "Column": [[35, "column"]], "ColumnProcess": [[36, "columnprocess"]], "Connection": [[37, "connection"]], "Cube": [[38, "cube"]], "CubeDimension": [[39, "cubedimension"]], "CubeField": [[40, "cubefield"]], "CubeHierarchy": [[41, "cubehierarchy"]], "Database": [[42, "database"]], "DataContract": [[43, "datacontract"]], "DataDomain": [[44, "datadomain"]], "DataMesh": [[45, "datamesh"]], "DataProduct": [[46, "dataproduct"]], "DataQuality": [[47, "dataquality"]], "DataSet": [[48, "dataset"]], "DataStudio": [[49, "datastudio"]], "DataStudioAsset": [[50, "datastudioasset"]], "Dbt": [[51, "dbt"]], "DbtColumnProcess": [[52, "dbtcolumnprocess"]], "DbtMetric": [[53, "dbtmetric"]], "DbtModel": [[54, "dbtmodel"]], "DbtModelColumn": [[55, "dbtmodelcolumn"]], "DbtProcess": [[56, "dbtprocess"]], "DbtSource": [[57, "dbtsource"]], "DbtTag": [[58, "dbttag"]], "DbtTest": [[59, "dbttest"]], "Domo": [[60, "domo"]], "DomoCard": [[61, "domocard"]], "DomoDashboard": [[62, "domodashboard"]], "DomoDataset": [[63, "domodataset"]], "DomoDatasetColumn": [[64, "domodatasetcolumn"]], "DynamoDB": [[65, "dynamodb"]], "DynamoDBGlobalSecondaryIndex": [[66, "dynamodbglobalsecondaryindex"]], "DynamoDBLocalSecondaryIndex": [[67, "dynamodblocalsecondaryindex"]], "DynamoDBSecondaryIndex": [[68, "dynamodbsecondaryindex"]], "DynamoDBTable": [[69, "dynamodbtable"]], "EventStore": [[70, "eventstore"]], "File": [[71, "file"]], "Folder": [[72, "folder"]], "Function": [[73, "function"]], "GCS": [[74, "gcs"]], "GCSBucket": [[75, "gcsbucket"]], "GCSObject": [[76, "gcsobject"]], "Google": [[77, "google"]], "Infrastructure": [[78, "infrastructure"]], "Insight": [[79, "insight"]], "Kafka": [[80, "kafka"]], "KafkaConsumerGroup": [[81, "kafkaconsumergroup"]], "KafkaTopic": [[82, "kafkatopic"]], "Link": [[83, "link"]], "Looker": [[84, "looker"]], "LookerDashboard": [[85, "lookerdashboard"]], "LookerExplore": [[86, "lookerexplore"]], "LookerField": [[87, "lookerfield"]], "LookerFolder": [[88, "lookerfolder"]], "LookerLook": [[89, "lookerlook"]], "LookerModel": [[90, "lookermodel"]], "LookerProject": [[91, "lookerproject"]], "LookerQuery": [[92, "lookerquery"]], "LookerTile": [[93, "lookertile"]], "LookerView": [[94, "lookerview"]], "MaterialisedView": [[95, "materialisedview"]], "Matillion": [[96, "matillion"]], "MatillionComponent": [[97, "matillioncomponent"]], "MatillionGroup": [[98, "matilliongroup"]], "MatillionJob": [[99, "matillionjob"]], "MatillionProject": [[100, "matillionproject"]], "MCIncident": [[101, "mcincident"]], "MCMonitor": [[102, "mcmonitor"]], "Metabase": [[103, "metabase"]], "MetabaseCollection": [[104, "metabasecollection"]], "MetabaseDashboard": [[105, "metabasedashboard"]], "MetabaseQuestion": [[106, "metabasequestion"]], "Metric": [[107, "metric"]], "MicroStrategy": [[108, "microstrategy"]], "MicroStrategyAttribute": [[109, "microstrategyattribute"]], "MicroStrategyCube": [[110, "microstrategycube"]], "MicroStrategyDocument": [[111, "microstrategydocument"]], "MicroStrategyDossier": [[112, "microstrategydossier"]], "MicroStrategyFact": [[113, "microstrategyfact"]], "MicroStrategyMetric": [[114, "microstrategymetric"]], "MicroStrategyProject": [[115, "microstrategyproject"]], "MicroStrategyReport": [[116, "microstrategyreport"]], "MicroStrategyVisualization": [[117, "microstrategyvisualization"]], "Mode": [[118, "mode"]], "ModeChart": [[119, "modechart"]], "ModeCollection": [[120, "modecollection"]], "ModeQuery": [[121, "modequery"]], "ModeReport": [[122, "modereport"]], "ModeWorkspace": [[123, "modeworkspace"]], "MongoDB": [[124, "mongodb"]], "MongoDBCollection": [[125, "mongodbcollection"]], "MongoDBDatabase": [[126, "mongodbdatabase"]], "MonteCarlo": [[127, "montecarlo"]], "MultiDimensionalDataset": [[128, "multidimensionaldataset"]], "Namespace": [[129, "namespace"]], "NoSQL": [[130, "nosql"]], "ObjectStore": [[131, "objectstore"]], "Persona": [[132, "persona"]], "PowerBI": [[133, "powerbi"]], "PowerBIColumn": [[134, "powerbicolumn"]], "PowerBIDashboard": [[135, "powerbidashboard"]], "PowerBIDataflow": [[136, "powerbidataflow"]], "PowerBIDataset": [[137, "powerbidataset"]], "PowerBIDatasource": [[138, "powerbidatasource"]], "PowerBIMeasure": [[139, "powerbimeasure"]], "PowerBIPage": [[140, "powerbipage"]], "PowerBIReport": [[141, "powerbireport"]], "PowerBITable": [[142, "powerbitable"]], "PowerBITile": [[143, "powerbitile"]], "PowerBIWorkspace": [[144, "powerbiworkspace"]], "Preset": [[145, "preset"]], "PresetChart": [[146, "presetchart"]], "PresetDashboard": [[147, "presetdashboard"]], "PresetDataset": [[148, "presetdataset"]], "PresetWorkspace": [[149, "presetworkspace"]], "Procedure": [[150, "procedure"]], "Process": [[151, "process"]], "ProcessExecution": [[152, "processexecution"]], "Purpose": [[153, "purpose"]], "Qlik": [[154, "qlik"]], "QlikApp": [[155, "qlikapp"]], "QlikChart": [[156, "qlikchart"]], "QlikDataset": [[157, "qlikdataset"]], "QlikSheet": [[158, "qliksheet"]], "QlikSpace": [[159, "qlikspace"]], "QlikStream": [[160, "qlikstream"]], "Query": [[161, "query"]], "QuickSight": [[162, "quicksight"]], "QuickSightAnalysis": [[163, "quicksightanalysis"]], "QuickSightAnalysisVisual": [[164, "quicksightanalysisvisual"]], "QuickSightDashboard": [[165, "quicksightdashboard"]], "QuickSightDashboardVisual": [[166, "quicksightdashboardvisual"]], "QuickSightDataset": [[167, "quicksightdataset"]], "QuickSightDatasetField": [[168, "quicksightdatasetfield"]], "QuickSightFolder": [[169, "quicksightfolder"]], "Readme": [[170, "readme"]], "ReadmeTemplate": [[171, "readmetemplate"]], "Redash": [[172, "redash"]], "RedashDashboard": [[173, "redashdashboard"]], "RedashQuery": [[174, "redashquery"]], "RedashVisualization": [[175, "redashvisualization"]], "Referenceable": [[176, "referenceable"]], "Resource": [[177, "resource"]], "S3": [[178, "s3"]], "S3Bucket": [[179, "s3bucket"]], "S3Object": [[180, "s3object"]], "SaaS": [[181, "saas"]], "Salesforce": [[182, "salesforce"]], "SalesforceDashboard": [[183, "salesforcedashboard"]], "SalesforceField": [[184, "salesforcefield"]], "SalesforceObject": [[185, "salesforceobject"]], "SalesforceOrganization": [[186, "salesforceorganization"]], "SalesforceReport": [[187, "salesforcereport"]], "Schema": [[188, "schema"]], "SchemaRegistry": [[189, "schemaregistry"]], "SchemaRegistrySubject": [[190, "schemaregistrysubject"]], "Sigma": [[191, "sigma"]], "SigmaDataElement": [[192, "sigmadataelement"]], "SigmaDataElementField": [[193, "sigmadataelementfield"]], "SigmaDataset": [[194, "sigmadataset"]], "SigmaDatasetColumn": [[195, "sigmadatasetcolumn"]], "SigmaPage": [[196, "sigmapage"]], "SigmaWorkbook": [[197, "sigmaworkbook"]], "Sisense": [[198, "sisense"]], "SisenseDashboard": [[199, "sisensedashboard"]], "SisenseDatamodel": [[200, "sisensedatamodel"]], "SisenseDatamodelTable": [[201, "sisensedatamodeltable"]], "SisenseFolder": [[202, "sisensefolder"]], "SisenseWidget": [[203, "sisensewidget"]], "SnowflakeDynamicTable": [[204, "snowflakedynamictable"]], "SnowflakePipe": [[205, "snowflakepipe"]], "SnowflakeStream": [[206, "snowflakestream"]], "SnowflakeTag": [[207, "snowflaketag"]], "Soda": [[208, "soda"]], "SodaCheck": [[209, "sodacheck"]], "Spark": [[210, "spark"]], "SparkJob": [[211, "sparkjob"]], "SQL": [[212, "sql"]], "Table": [[213, "table"]], "Tableau": [[214, "tableau"]], "TableauCalculatedField": [[215, "tableaucalculatedfield"]], "TableauDashboard": [[216, "tableaudashboard"]], "TableauDatasource": [[217, "tableaudatasource"]], "TableauDatasourceField": [[218, "tableaudatasourcefield"]], "TableauFlow": [[219, "tableauflow"]], "TableauMetric": [[220, "tableaumetric"]], "TableauProject": [[221, "tableauproject"]], "TableauSite": [[222, "tableausite"]], "TableauWorkbook": [[223, "tableauworkbook"]], "TableauWorksheet": [[224, "tableauworksheet"]], "TablePartition": [[225, "tablepartition"]], "Tag": [[226, "tag"]], "TagAttachment": [[227, "tagattachment"]], "Thoughtspot": [[228, "thoughtspot"]], "ThoughtspotAnswer": [[229, "thoughtspotanswer"]], "ThoughtspotColumn": [[230, "thoughtspotcolumn"]], "ThoughtspotDashlet": [[231, "thoughtspotdashlet"]], "ThoughtspotLiveboard": [[232, "thoughtspotliveboard"]], "ThoughtspotTable": [[233, "thoughtspottable"]], "ThoughtspotView": [[234, "thoughtspotview"]], "ThoughtspotWorksheet": [[235, "thoughtspotworksheet"]], "View": [[236, "view"]], "Assets": [[237, "assets"]], "AtlanTagCache": [[238, "atlantagcache"]], "CustomMetadataCache": [[239, "custommetadatacache"]], "EnumCache": [[240, "enumcache"]], "GroupCache": [[241, "groupcache"]], "RoleCache": [[242, "rolecache"]], "UserCache": [[243, "usercache"]], "Caches": [[244, "caches"]], "Atlan Client Interface": [[245, "atlan-client-interface"]], "Events": [[246, "events"]], "AtlanEventHandler": [[246, "atlaneventhandler"]], "Error Handling": [[247, "error-handling"]], "BooleanField": [[248, "booleanfield"]], "CustomMetadataField": [[249, "custommetadatafield"]], "KeywordField": [[250, "keywordfield"]], "KeywordTextField": [[251, "keywordtextfield"]], "KeywordTextStemmedField": [[252, "keywordtextstemmedfield"]], "NumericField": [[253, "numericfield"]], "NumericRankField": [[254, "numericrankfield"]], "RelationField": [[255, "relationfield"]], "SearchableField": [[256, "searchablefield"]], "TextField": [[257, "textfield"]], "Fields": [[258, "fields"]], "AtlanField": [[258, "atlanfield"]], "pyatlan": [[259, "pyatlan"]], "Atlan image": [[260, "atlan-image"]], "Core model": [[261, "core-model"]], "Custom metadata": [[262, "custom-metadata"]], "Group": [[263, "group"]], "Keycloak events": [[264, "keycloak-events"]], "Lineage": [[265, "lineage"]], "Role": [[266, "role"]], "TypeDef": [[267, "typedef"]], "User": [[268, "user"]], "Other models": [[269, "other-models"]]}, "indexentries": {"accesscontrol (class in pyatlan.model.assets)": [[0, "pyatlan.model.assets.AccessControl"]], "channel_link (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.CHANNEL_LINK"]], "default_navigation (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DEFAULT_NAVIGATION"]], "deny_asset_filters (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_ASSET_FILTERS"]], "deny_asset_tabs (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_ASSET_TABS"]], "deny_asset_types (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_ASSET_TYPES"]], "deny_custom_metadata_guids (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_CUSTOM_METADATA_GUIDS"]], "deny_navigation_pages (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_NAVIGATION_PAGES"]], "display_preferences (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DISPLAY_PREFERENCES"]], "is_access_control_enabled (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.IS_ACCESS_CONTROL_ENABLED"]], "policies (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.POLICIES"]], "adls (class in pyatlan.model.assets)": [[1, "pyatlan.model.assets.ADLS"]], "adls_account_qualified_name (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.ADLS_ACCOUNT_QUALIFIED_NAME"]], "adls_account_secondary_location (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.ADLS_ACCOUNT_SECONDARY_LOCATION"]], "azure_location (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.AZURE_LOCATION"]], "azure_resource_id (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.AZURE_RESOURCE_ID"]], "azure_tags (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.AZURE_TAGS"]], "input_to_airflow_tasks (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.INPUT_TO_AIRFLOW_TASKS"]], "input_to_processes (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.INPUT_TO_PROCESSES"]], "input_to_spark_jobs (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.INPUT_TO_SPARK_JOBS"]], "output_from_airflow_tasks (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.OUTPUT_FROM_AIRFLOW_TASKS"]], "output_from_processes (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.OUTPUT_FROM_PROCESSES"]], "output_from_spark_jobs (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.OUTPUT_FROM_SPARK_JOBS"]], "adlsaccount (class in pyatlan.model.assets)": [[2, "pyatlan.model.assets.ADLSAccount"]], "adls_account_access_tier (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_ACCESS_TIER"]], "adls_account_kind (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_KIND"]], "adls_account_performance (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_PERFORMANCE"]], "adls_account_provision_state (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_PROVISION_STATE"]], "adls_account_replication (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_REPLICATION"]], "adls_account_resource_group (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_RESOURCE_GROUP"]], "adls_account_subscription (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_SUBSCRIPTION"]], "adls_containers (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_CONTAINERS"]], "adls_encryption_type (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ENCRYPTION_TYPE"]], "adls_e_tag (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_E_TAG"]], "adls_primary_disk_state (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_PRIMARY_DISK_STATE"]], "adlscontainer (class in pyatlan.model.assets)": [[3, "pyatlan.model.assets.ADLSContainer"]], "adls_account (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_ACCOUNT"]], "adls_container_encryption_scope (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_ENCRYPTION_SCOPE"]], "adls_container_lease_state (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_LEASE_STATE"]], "adls_container_lease_status (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_LEASE_STATUS"]], "adls_container_url (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_URL"]], "adls_container_version_level_immutability_support (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_VERSION_LEVEL_IMMUTABILITY_SUPPORT"]], "adls_objects (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_OBJECTS"]], "adls_object_count (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_OBJECT_COUNT"]], "adlsobject (class in pyatlan.model.assets)": [[4, "pyatlan.model.assets.ADLSObject"]], "adls_container (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_CONTAINER"]], "adls_container_qualified_name (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_CONTAINER_QUALIFIED_NAME"]], "adls_object_access_tier (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_ACCESS_TIER"]], "adls_object_access_tier_last_modified_time (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_ACCESS_TIER_LAST_MODIFIED_TIME"]], "adls_object_archive_status (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_ARCHIVE_STATUS"]], "adls_object_cache_control (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CACHE_CONTROL"]], "adls_object_content_language (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CONTENT_LANGUAGE"]], "adls_object_content_md5hash (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CONTENT_MD5HASH"]], "adls_object_content_type (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CONTENT_TYPE"]], "adls_object_lease_state (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_LEASE_STATE"]], "adls_object_lease_status (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_LEASE_STATUS"]], "adls_object_metadata (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_METADATA"]], "adls_object_server_encrypted (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_SERVER_ENCRYPTED"]], "adls_object_size (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_SIZE"]], "adls_object_type (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_TYPE"]], "adls_object_url (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_URL"]], "adls_object_version_id (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_VERSION_ID"]], "adls_object_version_level_immutability_support (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_VERSION_LEVEL_IMMUTABILITY_SUPPORT"]], "airflow_run_end_time (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_END_TIME"]], "airflow_run_name (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_NAME"]], "airflow_run_open_lineage_state (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_OPEN_LINEAGE_STATE"]], "airflow_run_open_lineage_version (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_OPEN_LINEAGE_VERSION"]], "airflow_run_start_time (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_START_TIME"]], "airflow_run_type (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_TYPE"]], "airflow_run_version (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_VERSION"]], "airflow_tags (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_TAGS"]], "airflow (class in pyatlan.model.assets)": [[5, "pyatlan.model.assets.Airflow"]], "airflow_dag_schedule (pyatlan.model.assets.airflowdag attribute)": [[6, "pyatlan.model.assets.AirflowDag.AIRFLOW_DAG_SCHEDULE"]], "airflow_dag_schedule_delta (pyatlan.model.assets.airflowdag attribute)": [[6, "pyatlan.model.assets.AirflowDag.AIRFLOW_DAG_SCHEDULE_DELTA"]], "airflow_tasks (pyatlan.model.assets.airflowdag attribute)": [[6, "pyatlan.model.assets.AirflowDag.AIRFLOW_TASKS"]], "airflowdag (class in pyatlan.model.assets)": [[6, "pyatlan.model.assets.AirflowDag"]], "airflow_dag (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_DAG"]], "airflow_dag_name (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_DAG_NAME"]], "airflow_dag_qualified_name (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_DAG_QUALIFIED_NAME"]], "airflow_task_connection_id (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_CONNECTION_ID"]], "airflow_task_operator_class (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_OPERATOR_CLASS"]], "airflow_task_pool (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_POOL"]], "airflow_task_pool_slots (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_POOL_SLOTS"]], "airflow_task_priority_weight (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_PRIORITY_WEIGHT"]], "airflow_task_queue (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_QUEUE"]], "airflow_task_retry_number (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_RETRY_NUMBER"]], "airflow_task_sql (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_SQL"]], "airflow_task_trigger_rule (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_TRIGGER_RULE"]], "airflowtask (class in pyatlan.model.assets)": [[7, "pyatlan.model.assets.AirflowTask"]], "inputs (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.INPUTS"]], "outputs (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.OUTPUTS"]], "process (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.PROCESS"]], "api (class in pyatlan.model.assets)": [[8, "pyatlan.model.assets.API"]], "api_external_docs (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_EXTERNAL_DOCS"]], "api_is_auth_optional (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_IS_AUTH_OPTIONAL"]], "api_spec_name (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_NAME"]], "api_spec_qualified_name (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_QUALIFIED_NAME"]], "api_spec_type (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_TYPE"]], "api_spec_version (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_VERSION"]], "apipath (class in pyatlan.model.assets)": [[9, "pyatlan.model.assets.APIPath"]], "api_path_available_operations (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_AVAILABLE_OPERATIONS"]], "api_path_available_response_codes (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_AVAILABLE_RESPONSE_CODES"]], "api_path_is_ingress_exposed (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_IS_INGRESS_EXPOSED"]], "api_path_is_templated (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_IS_TEMPLATED"]], "api_path_raw_uri (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_RAW_URI"]], "api_path_summary (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_SUMMARY"]], "api_spec (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_SPEC"]], "apispec (class in pyatlan.model.assets)": [[10, "pyatlan.model.assets.APISpec"]], "api_paths (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_PATHS"]], "api_spec_contact_email (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTACT_EMAIL"]], "api_spec_contact_name (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTACT_NAME"]], "api_spec_contact_url (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTACT_URL"]], "api_spec_contract_version (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTRACT_VERSION"]], "api_spec_license_name (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_LICENSE_NAME"]], "api_spec_license_url (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_LICENSE_URL"]], "api_spec_service_alias (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_SERVICE_ALIAS"]], "api_spec_terms_of_service_url (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_TERMS_OF_SERVICE_URL"]], "admin_groups (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ADMIN_GROUPS"]], "admin_roles (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ADMIN_ROLES"]], "admin_users (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ADMIN_USERS"]], "announcement_message (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_MESSAGE"]], "announcement_title (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_TITLE"]], "announcement_type (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_TYPE"]], "announcement_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_UPDATED_AT"]], "announcement_updated_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_UPDATED_BY"]], "asset_cover_image (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_COVER_IMAGE"]], "asset_dbt_account_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ACCOUNT_NAME"]], "asset_dbt_alias (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ALIAS"]], "asset_dbt_environment_dbt_version (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ENVIRONMENT_DBT_VERSION"]], "asset_dbt_environment_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ENVIRONMENT_NAME"]], "asset_dbt_job_last_run (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN"]], "asset_dbt_job_last_run_artifacts_saved (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_ARTIFACTS_SAVED"]], "asset_dbt_job_last_run_artifact_s3path (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_ARTIFACT_S3PATH"]], "asset_dbt_job_last_run_created_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_CREATED_AT"]], "asset_dbt_job_last_run_dequed_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_DEQUED_AT"]], "asset_dbt_job_last_run_executed_by_thread_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_EXECUTED_BY_THREAD_ID"]], "asset_dbt_job_last_run_git_branch (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_GIT_BRANCH"]], "asset_dbt_job_last_run_git_sha (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_GIT_SHA"]], "asset_dbt_job_last_run_has_docs_generated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_HAS_DOCS_GENERATED"]], "asset_dbt_job_last_run_has_sources_generated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_HAS_SOURCES_GENERATED"]], "asset_dbt_job_last_run_notifications_sent (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_NOTIFICATIONS_SENT"]], "asset_dbt_job_last_run_owner_thread_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_OWNER_THREAD_ID"]], "asset_dbt_job_last_run_queued_duration (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION"]], "asset_dbt_job_last_run_queued_duration_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION_HUMANIZED"]], "asset_dbt_job_last_run_run_duration (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_RUN_DURATION"]], "asset_dbt_job_last_run_run_duration_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_RUN_DURATION_HUMANIZED"]], "asset_dbt_job_last_run_started_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_STARTED_AT"]], "asset_dbt_job_last_run_status_message (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_STATUS_MESSAGE"]], "asset_dbt_job_last_run_total_duration (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION"]], "asset_dbt_job_last_run_total_duration_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION_HUMANIZED"]], "asset_dbt_job_last_run_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_UPDATED_AT"]], "asset_dbt_job_last_run_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_URL"]], "asset_dbt_job_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_NAME"]], "asset_dbt_job_next_run (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_NEXT_RUN"]], "asset_dbt_job_next_run_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_NEXT_RUN_HUMANIZED"]], "asset_dbt_job_schedule (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_SCHEDULE"]], "asset_dbt_job_schedule_cron_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "asset_dbt_job_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_STATUS"]], "asset_dbt_meta (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_META"]], "asset_dbt_package_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_PACKAGE_NAME"]], "asset_dbt_project_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_PROJECT_NAME"]], "asset_dbt_semantic_layer_proxy_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_SEMANTIC_LAYER_PROXY_URL"]], "asset_dbt_source_freshness_criteria (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_SOURCE_FRESHNESS_CRITERIA"]], "asset_dbt_tags (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_TAGS"]], "asset_dbt_test_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_TEST_STATUS"]], "asset_dbt_unique_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_UNIQUE_ID"]], "asset_dbt_workflow_last_updated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_WORKFLOW_LAST_UPDATED"]], "asset_icon (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_ICON"]], "asset_mc_incident_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_NAMES"]], "asset_mc_incident_qualified_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_QUALIFIED_NAMES"]], "asset_mc_incident_severities (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_SEVERITIES"]], "asset_mc_incident_states (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_STATES"]], "asset_mc_incident_sub_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_SUB_TYPES"]], "asset_mc_incident_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_TYPES"]], "asset_mc_last_sync_run_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_LAST_SYNC_RUN_AT"]], "asset_mc_monitor_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_NAMES"]], "asset_mc_monitor_qualified_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_QUALIFIED_NAMES"]], "asset_mc_monitor_schedule_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_SCHEDULE_TYPES"]], "asset_mc_monitor_statuses (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_STATUSES"]], "asset_mc_monitor_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_TYPES"]], "asset_soda_check_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_CHECK_COUNT"]], "asset_soda_check_statuses (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_CHECK_STATUSES"]], "asset_soda_dq_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_DQ_STATUS"]], "asset_soda_last_scan_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_LAST_SCAN_AT"]], "asset_soda_last_sync_run_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_LAST_SYNC_RUN_AT"]], "asset_soda_source_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_SOURCE_URL"]], "asset_tags (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_TAGS"]], "asset_theme_hex (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_THEME_HEX"]], "asset (class in pyatlan.model.assets)": [[11, "pyatlan.model.assets.Asset"]], "certificate_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_STATUS"]], "certificate_status_message (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_STATUS_MESSAGE"]], "certificate_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_UPDATED_AT"]], "certificate_updated_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_UPDATED_BY"]], "connection_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CONNECTION_NAME"]], "connection_qualified_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CONNECTION_QUALIFIED_NAME"]], "connector_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CONNECTOR_NAME"]], "dbt_qualified_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DBT_QUALIFIED_NAME"]], "description (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DESCRIPTION"]], "display_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DISPLAY_NAME"]], "files (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.FILES"]], "has_lineage (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.HAS_LINEAGE"]], "input_port_data_products (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.INPUT_PORT_DATA_PRODUCTS"]], "is_ai_generated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_AI_GENERATED"]], "is_discoverable (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_DISCOVERABLE"]], "is_editable (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_EDITABLE"]], "is_partial (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_PARTIAL"]], "last_row_changed_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_ROW_CHANGED_AT"]], "last_sync_run (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_SYNC_RUN"]], "last_sync_run_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_SYNC_RUN_AT"]], "last_sync_workflow_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_SYNC_WORKFLOW_NAME"]], "links (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LINKS"]], "mc_incidents (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.MC_INCIDENTS"]], "mc_monitors (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.MC_MONITORS"]], "metrics (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.METRICS"]], "name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.NAME"]], "output_port_data_products (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.OUTPUT_PORT_DATA_PRODUCTS"]], "owner_groups (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.OWNER_GROUPS"]], "owner_users (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.OWNER_USERS"]], "popularity_score (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.POPULARITY_SCORE"]], "readme (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.README"]], "sample_data_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SAMPLE_DATA_URL"]], "schema_registry_subjects (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SCHEMA_REGISTRY_SUBJECTS"]], "soda_checks (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SODA_CHECKS"]], "source_cost_unit (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_COST_UNIT"]], "source_created_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_CREATED_AT"]], "source_created_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_CREATED_BY"]], "source_embed_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_EMBED_URL"]], "source_last_read_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_LAST_READ_AT"]], "source_owners (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_OWNERS"]], "source_query_compute_cost_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_QUERY_COMPUTE_COST_LIST"]], "source_query_compute_cost_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_QUERY_COMPUTE_COST_RECORD_LIST"]], "source_read_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_COUNT"]], "source_read_expensive_query_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_EXPENSIVE_QUERY_RECORD_LIST"]], "source_read_popular_query_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_POPULAR_QUERY_RECORD_LIST"]], "source_read_query_cost (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_QUERY_COST"]], "source_read_recent_user_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_RECENT_USER_LIST"]], "source_read_recent_user_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_RECENT_USER_RECORD_LIST"]], "source_read_slow_query_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_SLOW_QUERY_RECORD_LIST"]], "source_read_top_user_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_TOP_USER_LIST"]], "source_read_top_user_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_TOP_USER_RECORD_LIST"]], "source_read_user_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_USER_COUNT"]], "source_total_cost (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_TOTAL_COST"]], "source_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_UPDATED_AT"]], "source_updated_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_UPDATED_BY"]], "source_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_URL"]], "starred_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.STARRED_BY"]], "starred_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.STARRED_COUNT"]], "starred_details_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.STARRED_DETAILS_LIST"]], "sub_type (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SUB_TYPE"]], "tenant_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.TENANT_ID"]], "user_description (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.USER_DESCRIPTION"]], "viewer_groups (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.VIEWER_GROUPS"]], "viewer_users (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.VIEWER_USERS"]], "view_score (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.VIEW_SCORE"]], "lineage() (pyatlan.model.assets.asset class method)": [[11, "pyatlan.model.assets.Asset.lineage"]], "additional_attributes (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.ADDITIONAL_ATTRIBUTES"]], "atlasglossary (class in pyatlan.model.assets)": [[12, "pyatlan.model.assets.AtlasGlossary"]], "categories (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.CATEGORIES"]], "glossary_type (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.GLOSSARY_TYPE"]], "language (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.LANGUAGE"]], "long_description (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.LONG_DESCRIPTION"]], "short_description (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.SHORT_DESCRIPTION"]], "terms (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.TERMS"]], "usage (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.USAGE"]], "additional_attributes (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.ADDITIONAL_ATTRIBUTES"]], "anchor (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.ANCHOR"]], "atlasglossarycategory (class in pyatlan.model.assets)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory"]], "category_type (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.CATEGORY_TYPE"]], "children_categories (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.CHILDREN_CATEGORIES"]], "long_description (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.LONG_DESCRIPTION"]], "parent_category (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.PARENT_CATEGORY"]], "short_description (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.SHORT_DESCRIPTION"]], "terms (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.TERMS"]], "can_be_archived() (pyatlan.model.assets.atlasglossarycategory class method)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.can_be_archived"]], "abbreviation (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ABBREVIATION"]], "additional_attributes (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ADDITIONAL_ATTRIBUTES"]], "anchor (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ANCHOR"]], "antonyms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ANTONYMS"]], "assigned_entities (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ASSIGNED_ENTITIES"]], "atlasglossaryterm (class in pyatlan.model.assets)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm"]], "categories (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.CATEGORIES"]], "classifies (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.CLASSIFIES"]], "examples (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.EXAMPLES"]], "is_a (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.IS_A"]], "long_description (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.LONG_DESCRIPTION"]], "preferred_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.PREFERRED_TERMS"]], "preferred_to_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.PREFERRED_TO_TERMS"]], "replaced_by (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.REPLACED_BY"]], "replacement_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.REPLACEMENT_TERMS"]], "see_also (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.SEE_ALSO"]], "short_description (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.SHORT_DESCRIPTION"]], "synonyms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.SYNONYMS"]], "term_type (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.TERM_TYPE"]], "translated_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.TRANSLATED_TERMS"]], "translation_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.TRANSLATION_TERMS"]], "usage (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.USAGE"]], "valid_values (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.VALID_VALUES"]], "valid_values_for (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.VALID_VALUES_FOR"]], "access_control (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.ACCESS_CONTROL"]], "authpolicy (class in pyatlan.model.assets)": [[15, "pyatlan.model.assets.AuthPolicy"]], "is_policy_enabled (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.IS_POLICY_ENABLED"]], "policy_actions (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_ACTIONS"]], "policy_category (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_CATEGORY"]], "policy_conditions (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_CONDITIONS"]], "policy_delegate_admin (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_DELEGATE_ADMIN"]], "policy_groups (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_GROUPS"]], "policy_mask_type (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_MASK_TYPE"]], "policy_priority (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_PRIORITY"]], "policy_resources (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_RESOURCES"]], "policy_resource_category (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_RESOURCE_CATEGORY"]], "policy_resource_signature (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_RESOURCE_SIGNATURE"]], "policy_roles (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_ROLES"]], "policy_service_name (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_SERVICE_NAME"]], "policy_sub_category (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_SUB_CATEGORY"]], "policy_type (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_TYPE"]], "policy_users (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_USERS"]], "policy_validity_schedule (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_VALIDITY_SCHEDULE"]], "auth_service_config (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_CONFIG"]], "auth_service_is_enabled (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_IS_ENABLED"]], "auth_service_policy_last_sync (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_POLICY_LAST_SYNC"]], "auth_service_type (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_TYPE"]], "authservice (class in pyatlan.model.assets)": [[16, "pyatlan.model.assets.AuthService"]], "tag_service (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.TAG_SERVICE"]], "aws (class in pyatlan.model.assets)": [[17, "pyatlan.model.assets.AWS"]], "aws_account_id (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_ACCOUNT_ID"]], "aws_arn (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_ARN"]], "aws_owner_id (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_OWNER_ID"]], "aws_owner_name (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_OWNER_NAME"]], "aws_partition (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_PARTITION"]], "aws_region (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_REGION"]], "aws_resource_id (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_RESOURCE_ID"]], "aws_service (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_SERVICE"]], "aws_tags (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_TAGS"]], "adls_account_secondary_location (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.ADLS_ACCOUNT_SECONDARY_LOCATION"]], "azure_location (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.AZURE_LOCATION"]], "azure_resource_id (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.AZURE_RESOURCE_ID"]], "azure_tags (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.AZURE_TAGS"]], "azure (class in pyatlan.model.assets)": [[18, "pyatlan.model.assets.Azure"]], "azure_event_hub_status (pyatlan.model.assets.azureeventhub attribute)": [[19, "pyatlan.model.assets.AzureEventHub.AZURE_EVENT_HUB_STATUS"]], "azureeventhub (class in pyatlan.model.assets)": [[19, "pyatlan.model.assets.AzureEventHub"]], "azureeventhubconsumergroup (class in pyatlan.model.assets)": [[20, "pyatlan.model.assets.AzureEventHubConsumerGroup"]], "badge_conditions (pyatlan.model.assets.badge attribute)": [[21, "pyatlan.model.assets.Badge.BADGE_CONDITIONS"]], "badge_metadata_attribute (pyatlan.model.assets.badge attribute)": [[21, "pyatlan.model.assets.Badge.BADGE_METADATA_ATTRIBUTE"]], "badge (class in pyatlan.model.assets)": [[21, "pyatlan.model.assets.Badge"]], "bi (class in pyatlan.model.assets)": [[22, "pyatlan.model.assets.BI"]], "biprocess (class in pyatlan.model.assets)": [[23, "pyatlan.model.assets.BIProcess"]], "inputs (pyatlan.model.assets.biprocess attribute)": [[23, "pyatlan.model.assets.BIProcess.INPUTS"]], "outputs (pyatlan.model.assets.biprocess attribute)": [[23, "pyatlan.model.assets.BIProcess.OUTPUTS"]], "atlan_schema (pyatlan.model.assets.calculationview attribute)": [[24, "pyatlan.model.assets.CalculationView.ATLAN_SCHEMA"]], "calculation_view_activated_at (pyatlan.model.assets.calculationview attribute)": [[24, "pyatlan.model.assets.CalculationView.CALCULATION_VIEW_ACTIVATED_AT"]], "calculation_view_activated_by (pyatlan.model.assets.calculationview attribute)": [[24, "pyatlan.model.assets.CalculationView.CALCULATION_VIEW_ACTIVATED_BY"]], "calculation_view_version_id (pyatlan.model.assets.calculationview attribute)": [[24, "pyatlan.model.assets.CalculationView.CALCULATION_VIEW_VERSION_ID"]], "columns (pyatlan.model.assets.calculationview attribute)": [[24, "pyatlan.model.assets.CalculationView.COLUMNS"]], "column_count (pyatlan.model.assets.calculationview attribute)": [[24, "pyatlan.model.assets.CalculationView.COLUMN_COUNT"]], "calculationview (class in pyatlan.model.assets)": [[24, "pyatlan.model.assets.CalculationView"]], "catalog (class in pyatlan.model.assets)": [[25, "pyatlan.model.assets.Catalog"]], "input_to_airflow_tasks (pyatlan.model.assets.catalog attribute)": [[25, "pyatlan.model.assets.Catalog.INPUT_TO_AIRFLOW_TASKS"]], "input_to_processes (pyatlan.model.assets.catalog attribute)": [[25, "pyatlan.model.assets.Catalog.INPUT_TO_PROCESSES"]], "input_to_spark_jobs (pyatlan.model.assets.catalog attribute)": [[25, "pyatlan.model.assets.Catalog.INPUT_TO_SPARK_JOBS"]], "output_from_airflow_tasks (pyatlan.model.assets.catalog attribute)": [[25, "pyatlan.model.assets.Catalog.OUTPUT_FROM_AIRFLOW_TASKS"]], "output_from_processes (pyatlan.model.assets.catalog attribute)": [[25, "pyatlan.model.assets.Catalog.OUTPUT_FROM_PROCESSES"]], "output_from_spark_jobs (pyatlan.model.assets.catalog attribute)": [[25, "pyatlan.model.assets.Catalog.OUTPUT_FROM_SPARK_JOBS"]], "cloud (class in pyatlan.model.assets)": [[26, "pyatlan.model.assets.Cloud"]], "cognite (class in pyatlan.model.assets)": [[27, "pyatlan.model.assets.Cognite"]], "cognite_asset (pyatlan.model.assets.cognite3dmodel attribute)": [[28, "pyatlan.model.assets.Cognite3DModel.COGNITE_ASSET"]], "cognite3dmodel (class in pyatlan.model.assets)": [[28, "pyatlan.model.assets.Cognite3DModel"]], "cognite3dmodels (pyatlan.model.assets.cogniteasset attribute)": [[29, "pyatlan.model.assets.CogniteAsset.COGNITE3DMODELS"]], "cognite_events (pyatlan.model.assets.cogniteasset attribute)": [[29, "pyatlan.model.assets.CogniteAsset.COGNITE_EVENTS"]], "cognite_files (pyatlan.model.assets.cogniteasset attribute)": [[29, "pyatlan.model.assets.CogniteAsset.COGNITE_FILES"]], "cognite_sequences (pyatlan.model.assets.cogniteasset attribute)": [[29, "pyatlan.model.assets.CogniteAsset.COGNITE_SEQUENCES"]], "cognite_timeseries (pyatlan.model.assets.cogniteasset attribute)": [[29, "pyatlan.model.assets.CogniteAsset.COGNITE_TIMESERIES"]], "cogniteasset (class in pyatlan.model.assets)": [[29, "pyatlan.model.assets.CogniteAsset"]], "cognite_asset (pyatlan.model.assets.cogniteevent attribute)": [[30, "pyatlan.model.assets.CogniteEvent.COGNITE_ASSET"]], "cogniteevent (class in pyatlan.model.assets)": [[30, "pyatlan.model.assets.CogniteEvent"]], "cognite_asset (pyatlan.model.assets.cognitefile attribute)": [[31, "pyatlan.model.assets.CogniteFile.COGNITE_ASSET"]], "cognitefile (class in pyatlan.model.assets)": [[31, "pyatlan.model.assets.CogniteFile"]], "cognite_asset (pyatlan.model.assets.cognitesequence attribute)": [[32, "pyatlan.model.assets.CogniteSequence.COGNITE_ASSET"]], "cognitesequence (class in pyatlan.model.assets)": [[32, "pyatlan.model.assets.CogniteSequence"]], "cognite_asset (pyatlan.model.assets.cognitetimeseries attribute)": [[33, "pyatlan.model.assets.CogniteTimeSeries.COGNITE_ASSET"]], "cognitetimeseries (class in pyatlan.model.assets)": [[33, "pyatlan.model.assets.CogniteTimeSeries"]], "collection (class in pyatlan.model.assets)": [[34, "pyatlan.model.assets.Collection"]], "icon (pyatlan.model.assets.collection attribute)": [[34, "pyatlan.model.assets.Collection.ICON"]], "icon_type (pyatlan.model.assets.collection attribute)": [[34, "pyatlan.model.assets.Collection.ICON_TYPE"]], "calculation_view (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.CALCULATION_VIEW"]], "column_average (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_AVERAGE"]], "column_average_length (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_AVERAGE_LENGTH"]], "column_dbt_model_columns (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_DBT_MODEL_COLUMNS"]], "column_depth_level (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_DEPTH_LEVEL"]], "column_distinct_values_count (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_DISTINCT_VALUES_COUNT"]], "column_distinct_values_count_long (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_DISTINCT_VALUES_COUNT_LONG"]], "column_duplicate_values_count (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_DUPLICATE_VALUES_COUNT"]], "column_duplicate_values_count_long (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_DUPLICATE_VALUES_COUNT_LONG"]], "column_histogram (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_HISTOGRAM"]], "column_max (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MAX"]], "column_maximum_string_length (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MAXIMUM_STRING_LENGTH"]], "column_maxs (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MAXS"]], "column_mean (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MEAN"]], "column_median (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MEDIAN"]], "column_min (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MIN"]], "column_minimum_string_length (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MINIMUM_STRING_LENGTH"]], "column_mins (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MINS"]], "column_missing_values_count (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MISSING_VALUES_COUNT"]], "column_missing_values_count_long (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MISSING_VALUES_COUNT_LONG"]], "column_missing_values_percentage (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_MISSING_VALUES_PERCENTAGE"]], "column_standard_deviation (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_STANDARD_DEVIATION"]], "column_sum (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_SUM"]], "column_top_values (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_TOP_VALUES"]], "column_uniqueness_percentage (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_UNIQUENESS_PERCENTAGE"]], "column_unique_values_count (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_UNIQUE_VALUES_COUNT"]], "column_unique_values_count_long (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_UNIQUE_VALUES_COUNT_LONG"]], "column_variance (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.COLUMN_VARIANCE"]], "column (class in pyatlan.model.assets)": [[35, "pyatlan.model.assets.Column"]], "data_quality_metric_dimensions (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.DATA_QUALITY_METRIC_DIMENSIONS"]], "data_type (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.DATA_TYPE"]], "dbt_metrics (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.DBT_METRICS"]], "dbt_model_columns (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.DBT_MODEL_COLUMNS"]], "default_value (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.DEFAULT_VALUE"]], "foreign_key_from (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.FOREIGN_KEY_FROM"]], "foreign_key_to (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.FOREIGN_KEY_TO"]], "is_clustered (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_CLUSTERED"]], "is_dist (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_DIST"]], "is_foreign (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_FOREIGN"]], "is_indexed (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_INDEXED"]], "is_nullable (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_NULLABLE"]], "is_partition (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_PARTITION"]], "is_pinned (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_PINNED"]], "is_primary (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_PRIMARY"]], "is_sort (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.IS_SORT"]], "materialised_view (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.MATERIALISED_VIEW"]], "max_length (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.MAX_LENGTH"]], "metric_timestamps (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.METRIC_TIMESTAMPS"]], "nested_columns (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.NESTED_COLUMNS"]], "nested_column_count (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.NESTED_COLUMN_COUNT"]], "numeric_scale (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.NUMERIC_SCALE"]], "order (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.ORDER"]], "parent_column (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.PARENT_COLUMN"]], "parent_column_name (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.PARENT_COLUMN_NAME"]], "parent_column_qualified_name (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.PARENT_COLUMN_QUALIFIED_NAME"]], "partition_order (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.PARTITION_ORDER"]], "pinned_at (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.PINNED_AT"]], "pinned_by (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.PINNED_BY"]], "precision (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.PRECISION"]], "queries (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.QUERIES"]], "raw_data_type_definition (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.RAW_DATA_TYPE_DEFINITION"]], "snowflake_dynamic_table (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.SNOWFLAKE_DYNAMIC_TABLE"]], "sub_data_type (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.SUB_DATA_TYPE"]], "table (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.TABLE"]], "table_partition (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.TABLE_PARTITION"]], "validations (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.VALIDATIONS"]], "view (pyatlan.model.assets.column attribute)": [[35, "pyatlan.model.assets.Column.VIEW"]], "columnprocess (class in pyatlan.model.assets)": [[36, "pyatlan.model.assets.ColumnProcess"]], "inputs (pyatlan.model.assets.columnprocess attribute)": [[36, "pyatlan.model.assets.ColumnProcess.INPUTS"]], "outputs (pyatlan.model.assets.columnprocess attribute)": [[36, "pyatlan.model.assets.ColumnProcess.OUTPUTS"]], "process (pyatlan.model.assets.columnprocess attribute)": [[36, "pyatlan.model.assets.ColumnProcess.PROCESS"]], "allow_query (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.ALLOW_QUERY"]], "allow_query_preview (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.ALLOW_QUERY_PREVIEW"]], "category (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.CATEGORY"]], "connection_dbt_environments (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.CONNECTION_DBT_ENVIRONMENTS"]], "connection_sso_credential_guid (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.CONNECTION_SSO_CREDENTIAL_GUID"]], "connector_icon (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.CONNECTOR_ICON"]], "connector_image (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.CONNECTOR_IMAGE"]], "credential_strategy (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.CREDENTIAL_STRATEGY"]], "connection (class in pyatlan.model.assets)": [[37, "pyatlan.model.assets.Connection"]], "default_credential_guid (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.DEFAULT_CREDENTIAL_GUID"]], "has_popularity_insights (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.HAS_POPULARITY_INSIGHTS"]], "host (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.HOST"]], "is_sample_data_preview_enabled (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.IS_SAMPLE_DATA_PREVIEW_ENABLED"]], "object_storage_upload_threshold (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.OBJECT_STORAGE_UPLOAD_THRESHOLD"]], "policy_strategy (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.POLICY_STRATEGY"]], "policy_strategy_for_sample_preview (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.POLICY_STRATEGY_FOR_SAMPLE_PREVIEW"]], "popularity_insights_timeframe (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.POPULARITY_INSIGHTS_TIMEFRAME"]], "port (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.PORT"]], "preview_credential_strategy (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.PREVIEW_CREDENTIAL_STRATEGY"]], "query_config (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.QUERY_CONFIG"]], "query_preview_config (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.QUERY_PREVIEW_CONFIG"]], "query_timeout (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.QUERY_TIMEOUT"]], "query_username_strategy (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.QUERY_USERNAME_STRATEGY"]], "row_limit (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.ROW_LIMIT"]], "source_logo (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.SOURCE_LOGO"]], "sub_category (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.SUB_CATEGORY"]], "use_object_storage (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.USE_OBJECT_STORAGE"]], "vector_embeddings_enabled (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.VECTOR_EMBEDDINGS_ENABLED"]], "vector_embeddings_updated_at (pyatlan.model.assets.connection attribute)": [[37, "pyatlan.model.assets.Connection.VECTOR_EMBEDDINGS_UPDATED_AT"]], "cube_dimensions (pyatlan.model.assets.cube attribute)": [[38, "pyatlan.model.assets.Cube.CUBE_DIMENSIONS"]], "cube_dimension_count (pyatlan.model.assets.cube attribute)": [[38, "pyatlan.model.assets.Cube.CUBE_DIMENSION_COUNT"]], "cube (class in pyatlan.model.assets)": [[38, "pyatlan.model.assets.Cube"]], "cube (pyatlan.model.assets.cubedimension attribute)": [[39, "pyatlan.model.assets.CubeDimension.CUBE"]], "cube_hierarchies (pyatlan.model.assets.cubedimension attribute)": [[39, "pyatlan.model.assets.CubeDimension.CUBE_HIERARCHIES"]], "cube_hierarchy_count (pyatlan.model.assets.cubedimension attribute)": [[39, "pyatlan.model.assets.CubeDimension.CUBE_HIERARCHY_COUNT"]], "cubedimension (class in pyatlan.model.assets)": [[39, "pyatlan.model.assets.CubeDimension"]], "cube_field_level (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_FIELD_LEVEL"]], "cube_field_measure_expression (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_FIELD_MEASURE_EXPRESSION"]], "cube_hierarchy (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_HIERARCHY"]], "cube_nested_fields (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_NESTED_FIELDS"]], "cube_parent_field (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_PARENT_FIELD"]], "cube_parent_field_name (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_PARENT_FIELD_NAME"]], "cube_parent_field_qualified_name (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_PARENT_FIELD_QUALIFIED_NAME"]], "cube_sub_field_count (pyatlan.model.assets.cubefield attribute)": [[40, "pyatlan.model.assets.CubeField.CUBE_SUB_FIELD_COUNT"]], "cubefield (class in pyatlan.model.assets)": [[40, "pyatlan.model.assets.CubeField"]], "cube_dimension (pyatlan.model.assets.cubehierarchy attribute)": [[41, "pyatlan.model.assets.CubeHierarchy.CUBE_DIMENSION"]], "cube_fields (pyatlan.model.assets.cubehierarchy attribute)": [[41, "pyatlan.model.assets.CubeHierarchy.CUBE_FIELDS"]], "cube_field_count (pyatlan.model.assets.cubehierarchy attribute)": [[41, "pyatlan.model.assets.CubeHierarchy.CUBE_FIELD_COUNT"]], "cubehierarchy (class in pyatlan.model.assets)": [[41, "pyatlan.model.assets.CubeHierarchy"]], "database (class in pyatlan.model.assets)": [[42, "pyatlan.model.assets.Database"]], "schemas (pyatlan.model.assets.database attribute)": [[42, "pyatlan.model.assets.Database.SCHEMAS"]], "schema_count (pyatlan.model.assets.database attribute)": [[42, "pyatlan.model.assets.Database.SCHEMA_COUNT"]], "data_products (pyatlan.model.assets.datadomain attribute)": [[44, "pyatlan.model.assets.DataDomain.DATA_PRODUCTS"]], "datadomain (class in pyatlan.model.assets)": [[44, "pyatlan.model.assets.DataDomain"]], "parent_domain (pyatlan.model.assets.datadomain attribute)": [[44, "pyatlan.model.assets.DataDomain.PARENT_DOMAIN"]], "sub_domains (pyatlan.model.assets.datadomain attribute)": [[44, "pyatlan.model.assets.DataDomain.SUB_DOMAINS"]], "datamesh (class in pyatlan.model.assets)": [[45, "pyatlan.model.assets.DataMesh"]], "parent_domain_qualified_name (pyatlan.model.assets.datamesh attribute)": [[45, "pyatlan.model.assets.DataMesh.PARENT_DOMAIN_QUALIFIED_NAME"]], "super_domain_qualified_name (pyatlan.model.assets.datamesh attribute)": [[45, "pyatlan.model.assets.DataMesh.SUPER_DOMAIN_QUALIFIED_NAME"]], "data_domain (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_DOMAIN"]], "data_product_assets_dsl (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_ASSETS_DSL"]], "data_product_assets_playbook_filter (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_ASSETS_PLAYBOOK_FILTER"]], "data_product_criticality (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_CRITICALITY"]], "data_product_score_updated_at (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_SCORE_UPDATED_AT"]], "data_product_score_value (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_SCORE_VALUE"]], "data_product_sensitivity (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_SENSITIVITY"]], "data_product_status (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_STATUS"]], "data_product_visibility (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_VISIBILITY"]], "dataproduct (class in pyatlan.model.assets)": [[46, "pyatlan.model.assets.DataProduct"]], "input_ports (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.INPUT_PORTS"]], "output_ports (pyatlan.model.assets.dataproduct attribute)": [[46, "pyatlan.model.assets.DataProduct.OUTPUT_PORTS"]], "dataquality (class in pyatlan.model.assets)": [[47, "pyatlan.model.assets.DataQuality"]], "dataset (class in pyatlan.model.assets)": [[48, "pyatlan.model.assets.DataSet"]], "datastudio (class in pyatlan.model.assets)": [[49, "pyatlan.model.assets.DataStudio"]], "google_labels (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.GOOGLE_TAGS"]], "input_to_airflow_tasks (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.INPUT_TO_AIRFLOW_TASKS"]], "input_to_processes (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.INPUT_TO_PROCESSES"]], "input_to_spark_jobs (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.INPUT_TO_SPARK_JOBS"]], "output_from_airflow_tasks (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.OUTPUT_FROM_AIRFLOW_TASKS"]], "output_from_processes (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.OUTPUT_FROM_PROCESSES"]], "output_from_spark_jobs (pyatlan.model.assets.datastudio attribute)": [[49, "pyatlan.model.assets.DataStudio.OUTPUT_FROM_SPARK_JOBS"]], "data_studio_asset_owner (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.DATA_STUDIO_ASSET_OWNER"]], "data_studio_asset_title (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.DATA_STUDIO_ASSET_TITLE"]], "data_studio_asset_type (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.DATA_STUDIO_ASSET_TYPE"]], "datastudioasset (class in pyatlan.model.assets)": [[50, "pyatlan.model.assets.DataStudioAsset"]], "google_labels (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.GOOGLE_TAGS"]], "is_trashed_data_studio_asset (pyatlan.model.assets.datastudioasset attribute)": [[50, "pyatlan.model.assets.DataStudioAsset.IS_TRASHED_DATA_STUDIO_ASSET"]], "dbt_account_name (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbt attribute)": [[51, "pyatlan.model.assets.Dbt.DBT_UNIQUE_ID"]], "dbt (class in pyatlan.model.assets)": [[51, "pyatlan.model.assets.Dbt"]], "airflow_tasks (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.AIRFLOW_TASKS"]], "ast (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.AST"]], "code (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.CODE"]], "column_processes (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.COLUMN_PROCESSES"]], "dbt_account_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_ALIAS"]], "dbt_column_process_job_status (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_COLUMN_PROCESS_JOB_STATUS"]], "dbt_connection_context (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.DBT_UNIQUE_ID"]], "dbtcolumnprocess (class in pyatlan.model.assets)": [[52, "pyatlan.model.assets.DbtColumnProcess"]], "matillion_component (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.MATILLION_COMPONENT"]], "process (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.PROCESS"]], "spark_jobs (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.SPARK_JOBS"]], "sql (pyatlan.model.assets.dbtcolumnprocess attribute)": [[52, "pyatlan.model.assets.DbtColumnProcess.SQL"]], "assets (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.ASSETS"]], "dbt_account_name (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_META"]], "dbt_metric_filters (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_METRIC_FILTERS"]], "dbt_metric_filter_columns (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_METRIC_FILTER_COLUMNS"]], "dbt_model (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_MODEL"]], "dbt_package_name (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.DBT_UNIQUE_ID"]], "dbtmetric (class in pyatlan.model.assets)": [[53, "pyatlan.model.assets.DbtMetric"]], "metric_dimension_columns (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.METRIC_DIMENSION_COLUMNS"]], "metric_filters (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.METRIC_FILTERS"]], "metric_sql (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.METRIC_SQL"]], "metric_timestamp_column (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.METRIC_TIMESTAMP_COLUMN"]], "metric_time_grains (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.METRIC_TIME_GRAINS"]], "metric_type (pyatlan.model.assets.dbtmetric attribute)": [[53, "pyatlan.model.assets.DbtMetric.METRIC_TYPE"]], "dbt_compiled_sql (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_COMPILED_SQL"]], "dbt_error (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_ERROR"]], "dbt_materialization_type (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MATERIALIZATION_TYPE"]], "dbt_metrics (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_METRICS"]], "dbt_model_columns (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_COLUMNS"]], "dbt_model_compile_completed_at (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_COMPILE_COMPLETED_AT"]], "dbt_model_compile_started_at (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_COMPILE_STARTED_AT"]], "dbt_model_execute_completed_at (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_EXECUTE_COMPLETED_AT"]], "dbt_model_execute_started_at (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_EXECUTE_STARTED_AT"]], "dbt_model_execution_time (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_EXECUTION_TIME"]], "dbt_model_run_elapsed_time (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_RUN_ELAPSED_TIME"]], "dbt_model_run_generated_at (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_RUN_GENERATED_AT"]], "dbt_model_sql_assets (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_MODEL_SQL_ASSETS"]], "dbt_raw_sql (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_RAW_SQL"]], "dbt_stats (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_STATS"]], "dbt_status (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_STATUS"]], "dbt_tests (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.DBT_TESTS"]], "dbtmodel (class in pyatlan.model.assets)": [[54, "pyatlan.model.assets.DbtModel"]], "sql_asset (pyatlan.model.assets.dbtmodel attribute)": [[54, "pyatlan.model.assets.DbtModel.SQL_ASSET"]], "dbt_model (pyatlan.model.assets.dbtmodelcolumn attribute)": [[55, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL"]], "dbt_model_column_data_type (pyatlan.model.assets.dbtmodelcolumn attribute)": [[55, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_COLUMN_DATA_TYPE"]], "dbt_model_column_order (pyatlan.model.assets.dbtmodelcolumn attribute)": [[55, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_COLUMN_ORDER"]], "dbt_model_column_sql_columns (pyatlan.model.assets.dbtmodelcolumn attribute)": [[55, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_COLUMN_SQL_COLUMNS"]], "dbt_model_qualified_name (pyatlan.model.assets.dbtmodelcolumn attribute)": [[55, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_QUALIFIED_NAME"]], "dbt_tests (pyatlan.model.assets.dbtmodelcolumn attribute)": [[55, "pyatlan.model.assets.DbtModelColumn.DBT_TESTS"]], "dbtmodelcolumn (class in pyatlan.model.assets)": [[55, "pyatlan.model.assets.DbtModelColumn"]], "sql_column (pyatlan.model.assets.dbtmodelcolumn attribute)": [[55, "pyatlan.model.assets.DbtModelColumn.SQL_COLUMN"]], "airflow_tasks (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.AIRFLOW_TASKS"]], "ast (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.AST"]], "code (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.CODE"]], "column_processes (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.COLUMN_PROCESSES"]], "dbt_account_name (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_PACKAGE_NAME"]], "dbt_process_job_status (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_PROCESS_JOB_STATUS"]], "dbt_project_name (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.DBT_UNIQUE_ID"]], "dbtprocess (class in pyatlan.model.assets)": [[56, "pyatlan.model.assets.DbtProcess"]], "matillion_component (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.MATILLION_COMPONENT"]], "spark_jobs (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.SPARK_JOBS"]], "sql (pyatlan.model.assets.dbtprocess attribute)": [[56, "pyatlan.model.assets.DbtProcess.SQL"]], "dbt_freshness_criteria (pyatlan.model.assets.dbtsource attribute)": [[57, "pyatlan.model.assets.DbtSource.DBT_FRESHNESS_CRITERIA"]], "dbt_state (pyatlan.model.assets.dbtsource attribute)": [[57, "pyatlan.model.assets.DbtSource.DBT_STATE"]], "dbt_tests (pyatlan.model.assets.dbtsource attribute)": [[57, "pyatlan.model.assets.DbtSource.DBT_TESTS"]], "dbtsource (class in pyatlan.model.assets)": [[57, "pyatlan.model.assets.DbtSource"]], "sql_asset (pyatlan.model.assets.dbtsource attribute)": [[57, "pyatlan.model.assets.DbtSource.SQL_ASSET"]], "sql_assets (pyatlan.model.assets.dbtsource attribute)": [[57, "pyatlan.model.assets.DbtSource.SQL_ASSETS"]], "dbt_account_name (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.DBT_UNIQUE_ID"]], "dbttag (class in pyatlan.model.assets)": [[58, "pyatlan.model.assets.DbtTag"]], "mapped_classification_name (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.MAPPED_CLASSIFICATION_NAME"]], "tag_allowed_values (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.TAG_ALLOWED_VALUES"]], "tag_attributes (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.TAG_ATTRIBUTES"]], "tag_id (pyatlan.model.assets.dbttag attribute)": [[58, "pyatlan.model.assets.DbtTag.TAG_ID"]], "dbt_models (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_MODELS"]], "dbt_model_columns (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_MODEL_COLUMNS"]], "dbt_sources (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_SOURCES"]], "dbt_test_compiled_code (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_COMPILED_CODE"]], "dbt_test_compiled_sql (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_COMPILED_SQL"]], "dbt_test_error (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_ERROR"]], "dbt_test_language (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_LANGUAGE"]], "dbt_test_raw_code (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_RAW_CODE"]], "dbt_test_raw_sql (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_RAW_SQL"]], "dbt_test_state (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_STATE"]], "dbt_test_status (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.DBT_TEST_STATUS"]], "dbttest (class in pyatlan.model.assets)": [[59, "pyatlan.model.assets.DbtTest"]], "sql_assets (pyatlan.model.assets.dbttest attribute)": [[59, "pyatlan.model.assets.DbtTest.SQL_ASSETS"]], "domo_id (pyatlan.model.assets.domo attribute)": [[60, "pyatlan.model.assets.Domo.DOMO_ID"]], "domo_owner_id (pyatlan.model.assets.domo attribute)": [[60, "pyatlan.model.assets.Domo.DOMO_OWNER_ID"]], "domo (class in pyatlan.model.assets)": [[60, "pyatlan.model.assets.Domo"]], "domo_card_dashboard_count (pyatlan.model.assets.domocard attribute)": [[61, "pyatlan.model.assets.DomoCard.DOMO_CARD_DASHBOARD_COUNT"]], "domo_card_type (pyatlan.model.assets.domocard attribute)": [[61, "pyatlan.model.assets.DomoCard.DOMO_CARD_TYPE"]], "domo_card_type_value (pyatlan.model.assets.domocard attribute)": [[61, "pyatlan.model.assets.DomoCard.DOMO_CARD_TYPE_VALUE"]], "domo_dashboards (pyatlan.model.assets.domocard attribute)": [[61, "pyatlan.model.assets.DomoCard.DOMO_DASHBOARDS"]], "domo_dataset (pyatlan.model.assets.domocard attribute)": [[61, "pyatlan.model.assets.DomoCard.DOMO_DATASET"]], "domocard (class in pyatlan.model.assets)": [[61, "pyatlan.model.assets.DomoCard"]], "domo_cards (pyatlan.model.assets.domodashboard attribute)": [[62, "pyatlan.model.assets.DomoDashboard.DOMO_CARDS"]], "domo_dashboard_card_count (pyatlan.model.assets.domodashboard attribute)": [[62, "pyatlan.model.assets.DomoDashboard.DOMO_DASHBOARD_CARD_COUNT"]], "domo_dashboard_children (pyatlan.model.assets.domodashboard attribute)": [[62, "pyatlan.model.assets.DomoDashboard.DOMO_DASHBOARD_CHILDREN"]], "domo_dashboard_parent (pyatlan.model.assets.domodashboard attribute)": [[62, "pyatlan.model.assets.DomoDashboard.DOMO_DASHBOARD_PARENT"]], "domodashboard (class in pyatlan.model.assets)": [[62, "pyatlan.model.assets.DomoDashboard"]], "domo_cards (pyatlan.model.assets.domodataset attribute)": [[63, "pyatlan.model.assets.DomoDataset.DOMO_CARDS"]], "domo_dataset_card_count (pyatlan.model.assets.domodataset attribute)": [[63, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_CARD_COUNT"]], "domo_dataset_columns (pyatlan.model.assets.domodataset attribute)": [[63, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_COLUMNS"]], "domo_dataset_column_count (pyatlan.model.assets.domodataset attribute)": [[63, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_COLUMN_COUNT"]], "domo_dataset_last_run (pyatlan.model.assets.domodataset attribute)": [[63, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_LAST_RUN"]], "domo_dataset_row_count (pyatlan.model.assets.domodataset attribute)": [[63, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_ROW_COUNT"]], "domodataset (class in pyatlan.model.assets)": [[63, "pyatlan.model.assets.DomoDataset"]], "domo_dataset (pyatlan.model.assets.domodatasetcolumn attribute)": [[64, "pyatlan.model.assets.DomoDatasetColumn.DOMO_DATASET"]], "domo_dataset_column_type (pyatlan.model.assets.domodatasetcolumn attribute)": [[64, "pyatlan.model.assets.DomoDatasetColumn.DOMO_DATASET_COLUMN_TYPE"]], "domo_dataset_qualified_name (pyatlan.model.assets.domodatasetcolumn attribute)": [[64, "pyatlan.model.assets.DomoDatasetColumn.DOMO_DATASET_QUALIFIED_NAME"]], "domodatasetcolumn (class in pyatlan.model.assets)": [[64, "pyatlan.model.assets.DomoDatasetColumn"]], "dynamo_db_partition_key (pyatlan.model.assets.dynamodb attribute)": [[65, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_PARTITION_KEY"]], "dynamo_db_read_capacity_units (pyatlan.model.assets.dynamodb attribute)": [[65, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_READ_CAPACITY_UNITS"]], "dynamo_db_sort_key (pyatlan.model.assets.dynamodb attribute)": [[65, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_SORT_KEY"]], "dynamo_db_status (pyatlan.model.assets.dynamodb attribute)": [[65, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_STATUS"]], "dynamo_db_write_capacity_units (pyatlan.model.assets.dynamodb attribute)": [[65, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "dynamodb (class in pyatlan.model.assets)": [[65, "pyatlan.model.assets.DynamoDB"]], "dynamo_db_table (pyatlan.model.assets.dynamodbglobalsecondaryindex attribute)": [[66, "pyatlan.model.assets.DynamoDBGlobalSecondaryIndex.DYNAMO_DB_TABLE"]], "dynamodbglobalsecondaryindex (class in pyatlan.model.assets)": [[66, "pyatlan.model.assets.DynamoDBGlobalSecondaryIndex"]], "dynamo_db_table (pyatlan.model.assets.dynamodblocalsecondaryindex attribute)": [[67, "pyatlan.model.assets.DynamoDBLocalSecondaryIndex.DYNAMO_DB_TABLE"]], "dynamodblocalsecondaryindex (class in pyatlan.model.assets)": [[67, "pyatlan.model.assets.DynamoDBLocalSecondaryIndex"]], "alias (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.ALIAS"]], "calculation_view_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.CALCULATION_VIEW_QUALIFIED_NAME"]], "column_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.COLUMN_COUNT"]], "database_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DATABASE_QUALIFIED_NAME"]], "dynamo_db_partition_key (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_PARTITION_KEY"]], "dynamo_db_read_capacity_units (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_READ_CAPACITY_UNITS"]], "dynamo_db_secondary_index_projection_type (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_SECONDARY_INDEX_PROJECTION_TYPE"]], "dynamo_db_sort_key (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_SORT_KEY"]], "dynamo_db_status (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_STATUS"]], "dynamo_db_write_capacity_units (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "dynamodbsecondaryindex (class in pyatlan.model.assets)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex"]], "external_location (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_PARTITIONED"]], "is_profiled (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_PROFILED"]], "is_query_preview (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_TEMPORARY"]], "last_profiled_at (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.LAST_PROFILED_AT"]], "no_sql_schema_definition (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.NO_SQL_SCHEMA_DEFINITION"]], "partition_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.PARTITION_STRATEGY"]], "query_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_COUNT_UPDATED_AT"]], "query_preview_config (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_PREVIEW_CONFIG"]], "query_user_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_USER_MAP"]], "row_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.ROW_COUNT"]], "schema_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.SCHEMA_QUALIFIED_NAME"]], "size_bytes (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.SIZE_BYTES"]], "table_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[68, "pyatlan.model.assets.DynamoDBSecondaryIndex.VIEW_QUALIFIED_NAME"]], "alias (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.ALIAS"]], "calculation_view_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.CALCULATION_VIEW_QUALIFIED_NAME"]], "column_count (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.COLUMN_COUNT"]], "database_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DATABASE_QUALIFIED_NAME"]], "dynamo_db_global_secondary_indexes (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_GLOBAL_SECONDARY_INDEXES"]], "dynamo_db_local_secondary_indexes (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_LOCAL_SECONDARY_INDEXES"]], "dynamo_db_partition_key (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_PARTITION_KEY"]], "dynamo_db_read_capacity_units (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_READ_CAPACITY_UNITS"]], "dynamo_db_sort_key (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_SORT_KEY"]], "dynamo_db_status (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_STATUS"]], "dynamo_db_table_gsi_count (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_TABLE_GSI_COUNT"]], "dynamo_db_table_lsi_count (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_TABLE_LSI_COUNT"]], "dynamo_db_write_capacity_units (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "dynamodbtable (class in pyatlan.model.assets)": [[69, "pyatlan.model.assets.DynamoDBTable"]], "external_location (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.IS_PARTITIONED"]], "is_profiled (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.IS_PROFILED"]], "is_query_preview (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.IS_TEMPORARY"]], "last_profiled_at (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.LAST_PROFILED_AT"]], "no_sql_schema_definition (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.NO_SQL_SCHEMA_DEFINITION"]], "partition_count (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.PARTITION_STRATEGY"]], "query_count (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.QUERY_COUNT_UPDATED_AT"]], "query_preview_config (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.QUERY_PREVIEW_CONFIG"]], "query_user_count (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.QUERY_USER_MAP"]], "row_count (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.ROW_COUNT"]], "schema_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.SCHEMA_QUALIFIED_NAME"]], "size_bytes (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.SIZE_BYTES"]], "table_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[69, "pyatlan.model.assets.DynamoDBTable.VIEW_QUALIFIED_NAME"]], "eventstore (class in pyatlan.model.assets)": [[70, "pyatlan.model.assets.EventStore"]], "file_assets (pyatlan.model.assets.file attribute)": [[71, "pyatlan.model.assets.File.FILE_ASSETS"]], "file_path (pyatlan.model.assets.file attribute)": [[71, "pyatlan.model.assets.File.FILE_PATH"]], "file_type (pyatlan.model.assets.file attribute)": [[71, "pyatlan.model.assets.File.FILE_TYPE"]], "file (class in pyatlan.model.assets)": [[71, "pyatlan.model.assets.File"]], "collection_qualified_name (pyatlan.model.assets.folder attribute)": [[72, "pyatlan.model.assets.Folder.COLLECTION_QUALIFIED_NAME"]], "folder (class in pyatlan.model.assets)": [[72, "pyatlan.model.assets.Folder"]], "parent (pyatlan.model.assets.folder attribute)": [[72, "pyatlan.model.assets.Folder.PARENT"]], "parent_qualified_name (pyatlan.model.assets.folder attribute)": [[72, "pyatlan.model.assets.Folder.PARENT_QUALIFIED_NAME"]], "function_arguments (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_ARGUMENTS"]], "function_definition (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_DEFINITION"]], "function_is_external (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_IS_EXTERNAL"]], "function_is_memoizable (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_IS_MEMOIZABLE"]], "function_is_secure (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_IS_SECURE"]], "function_language (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_LANGUAGE"]], "function_return_type (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_RETURN_TYPE"]], "function_schema (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_SCHEMA"]], "function_type (pyatlan.model.assets.function attribute)": [[73, "pyatlan.model.assets.Function.FUNCTION_TYPE"]], "function (class in pyatlan.model.assets)": [[73, "pyatlan.model.assets.Function"]], "gcs (class in pyatlan.model.assets)": [[74, "pyatlan.model.assets.GCS"]], "gcs_access_control (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GCS_ACCESS_CONTROL"]], "gcs_encryption_type (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GCS_ENCRYPTION_TYPE"]], "gcs_e_tag (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GCS_E_TAG"]], "gcs_meta_generation_id (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GCS_META_GENERATION_ID"]], "gcs_requester_pays (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GCS_REQUESTER_PAYS"]], "gcs_storage_class (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GCS_STORAGE_CLASS"]], "google_labels (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.GOOGLE_TAGS"]], "input_to_airflow_tasks (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.INPUT_TO_AIRFLOW_TASKS"]], "input_to_processes (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.INPUT_TO_PROCESSES"]], "input_to_spark_jobs (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.INPUT_TO_SPARK_JOBS"]], "output_from_airflow_tasks (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.OUTPUT_FROM_AIRFLOW_TASKS"]], "output_from_processes (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.OUTPUT_FROM_PROCESSES"]], "output_from_spark_jobs (pyatlan.model.assets.gcs attribute)": [[74, "pyatlan.model.assets.GCS.OUTPUT_FROM_SPARK_JOBS"]], "gcsbucket (class in pyatlan.model.assets)": [[75, "pyatlan.model.assets.GCSBucket"]], "gcs_bucket_lifecycle_rules (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_LIFECYCLE_RULES"]], "gcs_bucket_retention_effective_time (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_EFFECTIVE_TIME"]], "gcs_bucket_retention_locked (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_LOCKED"]], "gcs_bucket_retention_period (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_PERIOD"]], "gcs_bucket_retention_policy (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_POLICY"]], "gcs_bucket_versioning_enabled (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_VERSIONING_ENABLED"]], "gcs_objects (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_OBJECTS"]], "gcs_object_count (pyatlan.model.assets.gcsbucket attribute)": [[75, "pyatlan.model.assets.GCSBucket.GCS_OBJECT_COUNT"]], "gcsobject (class in pyatlan.model.assets)": [[76, "pyatlan.model.assets.GCSObject"]], "gcs_bucket (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_BUCKET"]], "gcs_bucket_name (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_BUCKET_NAME"]], "gcs_bucket_qualified_name (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_BUCKET_QUALIFIED_NAME"]], "gcs_object_content_disposition (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_DISPOSITION"]], "gcs_object_content_encoding (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_ENCODING"]], "gcs_object_content_language (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_LANGUAGE"]], "gcs_object_content_type (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_TYPE"]], "gcs_object_crc32c_hash (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CRC32C_HASH"]], "gcs_object_data_last_modified_time (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_DATA_LAST_MODIFIED_TIME"]], "gcs_object_generation_id (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_GENERATION_ID"]], "gcs_object_hold_type (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_HOLD_TYPE"]], "gcs_object_key (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_KEY"]], "gcs_object_md5hash (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_MD5HASH"]], "gcs_object_media_link (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_MEDIA_LINK"]], "gcs_object_retention_expiration_date (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_RETENTION_EXPIRATION_DATE"]], "gcs_object_size (pyatlan.model.assets.gcsobject attribute)": [[76, "pyatlan.model.assets.GCSObject.GCS_OBJECT_SIZE"]], "google_labels (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.google attribute)": [[77, "pyatlan.model.assets.Google.GOOGLE_TAGS"]], "google (class in pyatlan.model.assets)": [[77, "pyatlan.model.assets.Google"]], "infrastructure (class in pyatlan.model.assets)": [[78, "pyatlan.model.assets.Infrastructure"]], "insight (class in pyatlan.model.assets)": [[79, "pyatlan.model.assets.Insight"]], "kafka (class in pyatlan.model.assets)": [[80, "pyatlan.model.assets.Kafka"]], "kafka_consumer_group_member_count (pyatlan.model.assets.kafkaconsumergroup attribute)": [[81, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_CONSUMER_GROUP_MEMBER_COUNT"]], "kafka_consumer_group_topic_consumption_properties (pyatlan.model.assets.kafkaconsumergroup attribute)": [[81, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_CONSUMER_GROUP_TOPIC_CONSUMPTION_PROPERTIES"]], "kafka_topics (pyatlan.model.assets.kafkaconsumergroup attribute)": [[81, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_TOPICS"]], "kafka_topic_names (pyatlan.model.assets.kafkaconsumergroup attribute)": [[81, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_TOPIC_NAMES"]], "kafka_topic_qualified_names (pyatlan.model.assets.kafkaconsumergroup attribute)": [[81, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_TOPIC_QUALIFIED_NAMES"]], "kafkaconsumergroup (class in pyatlan.model.assets)": [[81, "pyatlan.model.assets.KafkaConsumerGroup"]], "kafka_consumer_groups (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_CONSUMER_GROUPS"]], "kafka_topic_cleanup_policy (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_CLEANUP_POLICY"]], "kafka_topic_compression_type (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_COMPRESSION_TYPE"]], "kafka_topic_is_internal (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_IS_INTERNAL"]], "kafka_topic_partitions_count (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_PARTITIONS_COUNT"]], "kafka_topic_record_count (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_RECORD_COUNT"]], "kafka_topic_replication_factor (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_REPLICATION_FACTOR"]], "kafka_topic_retention_time_in_ms (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_RETENTION_TIME_IN_MS"]], "kafka_topic_segment_bytes (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_SEGMENT_BYTES"]], "kafka_topic_size_in_bytes (pyatlan.model.assets.kafkatopic attribute)": [[82, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_SIZE_IN_BYTES"]], "kafkatopic (class in pyatlan.model.assets)": [[82, "pyatlan.model.assets.KafkaTopic"]], "asset (pyatlan.model.assets.link attribute)": [[83, "pyatlan.model.assets.Link.ASSET"]], "icon (pyatlan.model.assets.link attribute)": [[83, "pyatlan.model.assets.Link.ICON"]], "icon_type (pyatlan.model.assets.link attribute)": [[83, "pyatlan.model.assets.Link.ICON_TYPE"]], "link (class in pyatlan.model.assets)": [[83, "pyatlan.model.assets.Link"]], "looker (class in pyatlan.model.assets)": [[84, "pyatlan.model.assets.Looker"]], "folder (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.FOLDER"]], "folder_name (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.FOLDER_NAME"]], "looks (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.LOOKS"]], "lookerdashboard (class in pyatlan.model.assets)": [[85, "pyatlan.model.assets.LookerDashboard"]], "sourcelast_updater_id (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.SOURCELAST_UPDATER_ID"]], "source_last_accessed_at (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.SOURCE_LAST_ACCESSED_AT"]], "source_last_viewed_at (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.SOURCE_LAST_VIEWED_AT"]], "source_metadata_id (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.SOURCE_METADATA_ID"]], "source_user_id (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.SOURCE_USER_ID"]], "source_view_count (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.SOURCE_VIEW_COUNT"]], "tiles (pyatlan.model.assets.lookerdashboard attribute)": [[85, "pyatlan.model.assets.LookerDashboard.TILES"]], "fields (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.FIELDS"]], "lookerexplore (class in pyatlan.model.assets)": [[86, "pyatlan.model.assets.LookerExplore"]], "model (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.MODEL"]], "model_name (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.MODEL_NAME"]], "project (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.PROJECT"]], "project_name (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.PROJECT_NAME"]], "source_connection_name (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.SOURCE_CONNECTION_NAME"]], "sql_table_name (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.SQL_TABLE_NAME"]], "view_name (pyatlan.model.assets.lookerexplore attribute)": [[86, "pyatlan.model.assets.LookerExplore.VIEW_NAME"]], "explore (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.EXPLORE"]], "looker_explore_qualified_name (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.LOOKER_EXPLORE_QUALIFIED_NAME"]], "looker_field_data_type (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.LOOKER_FIELD_DATA_TYPE"]], "looker_times_used (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.LOOKER_TIMES_USED"]], "looker_view_qualified_name (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.LOOKER_VIEW_QUALIFIED_NAME"]], "lookerfield (class in pyatlan.model.assets)": [[87, "pyatlan.model.assets.LookerField"]], "model (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.MODEL"]], "model_name (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.MODEL_NAME"]], "project (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.PROJECT"]], "project_name (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.PROJECT_NAME"]], "source_definition (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.SOURCE_DEFINITION"]], "view (pyatlan.model.assets.lookerfield attribute)": [[87, "pyatlan.model.assets.LookerField.VIEW"]], "dashboards (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.DASHBOARDS"]], "looker_parent_folder (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.LOOKER_PARENT_FOLDER"]], "looker_sub_folders (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.LOOKER_SUB_FOLDERS"]], "looks (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.LOOKS"]], "lookerfolder (class in pyatlan.model.assets)": [[88, "pyatlan.model.assets.LookerFolder"]], "source_child_count (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.SOURCE_CHILD_COUNT"]], "source_content_metadata_id (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.SOURCE_CONTENT_METADATA_ID"]], "source_creator_id (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.SOURCE_CREATOR_ID"]], "source_parent_id (pyatlan.model.assets.lookerfolder attribute)": [[88, "pyatlan.model.assets.LookerFolder.SOURCE_PARENT_ID"]], "dashboard (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.DASHBOARD"]], "folder (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.FOLDER"]], "folder_name (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.FOLDER_NAME"]], "lookerlook (class in pyatlan.model.assets)": [[89, "pyatlan.model.assets.LookerLook"]], "model (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.MODEL"]], "model_name (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.MODEL_NAME"]], "query (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.QUERY"]], "sourcelast_updater_id (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.SOURCELAST_UPDATER_ID"]], "source_content_metadata_id (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.SOURCE_CONTENT_METADATA_ID"]], "source_last_accessed_at (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.SOURCE_LAST_ACCESSED_AT"]], "source_last_viewed_at (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.SOURCE_LAST_VIEWED_AT"]], "source_query_id (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.SOURCE_QUERY_ID"]], "source_user_id (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.SOURCE_USER_ID"]], "source_view_count (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.SOURCE_VIEW_COUNT"]], "tile (pyatlan.model.assets.lookerlook attribute)": [[89, "pyatlan.model.assets.LookerLook.TILE"]], "explores (pyatlan.model.assets.lookermodel attribute)": [[90, "pyatlan.model.assets.LookerModel.EXPLORES"]], "fields (pyatlan.model.assets.lookermodel attribute)": [[90, "pyatlan.model.assets.LookerModel.FIELDS"]], "look (pyatlan.model.assets.lookermodel attribute)": [[90, "pyatlan.model.assets.LookerModel.LOOK"]], "lookermodel (class in pyatlan.model.assets)": [[90, "pyatlan.model.assets.LookerModel"]], "project (pyatlan.model.assets.lookermodel attribute)": [[90, "pyatlan.model.assets.LookerModel.PROJECT"]], "project_name (pyatlan.model.assets.lookermodel attribute)": [[90, "pyatlan.model.assets.LookerModel.PROJECT_NAME"]], "queries (pyatlan.model.assets.lookermodel attribute)": [[90, "pyatlan.model.assets.LookerModel.QUERIES"]], "explores (pyatlan.model.assets.lookerproject attribute)": [[91, "pyatlan.model.assets.LookerProject.EXPLORES"]], "fields (pyatlan.model.assets.lookerproject attribute)": [[91, "pyatlan.model.assets.LookerProject.FIELDS"]], "lookerproject (class in pyatlan.model.assets)": [[91, "pyatlan.model.assets.LookerProject"]], "models (pyatlan.model.assets.lookerproject attribute)": [[91, "pyatlan.model.assets.LookerProject.MODELS"]], "views (pyatlan.model.assets.lookerproject attribute)": [[91, "pyatlan.model.assets.LookerProject.VIEWS"]], "fields (pyatlan.model.assets.lookerquery attribute)": [[92, "pyatlan.model.assets.LookerQuery.FIELDS"]], "looks (pyatlan.model.assets.lookerquery attribute)": [[92, "pyatlan.model.assets.LookerQuery.LOOKS"]], "lookerquery (class in pyatlan.model.assets)": [[92, "pyatlan.model.assets.LookerQuery"]], "model (pyatlan.model.assets.lookerquery attribute)": [[92, "pyatlan.model.assets.LookerQuery.MODEL"]], "source_definition (pyatlan.model.assets.lookerquery attribute)": [[92, "pyatlan.model.assets.LookerQuery.SOURCE_DEFINITION"]], "source_definition_database (pyatlan.model.assets.lookerquery attribute)": [[92, "pyatlan.model.assets.LookerQuery.SOURCE_DEFINITION_DATABASE"]], "source_definition_schema (pyatlan.model.assets.lookerquery attribute)": [[92, "pyatlan.model.assets.LookerQuery.SOURCE_DEFINITION_SCHEMA"]], "tiles (pyatlan.model.assets.lookerquery attribute)": [[92, "pyatlan.model.assets.LookerQuery.TILES"]], "dashboard (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.DASHBOARD"]], "look (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.LOOK"]], "lookml_link_id (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.LOOKML_LINK_ID"]], "look_id (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.LOOK_ID"]], "lookertile (class in pyatlan.model.assets)": [[93, "pyatlan.model.assets.LookerTile"]], "merge_result_id (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.MERGE_RESULT_ID"]], "note_text (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.NOTE_TEXT"]], "query (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.QUERY"]], "query_id (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.QUERY_ID"]], "result_maker_id (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.RESULT_MAKER_ID"]], "subtitle_text (pyatlan.model.assets.lookertile attribute)": [[93, "pyatlan.model.assets.LookerTile.SUBTITLE_TEXT"]], "fields (pyatlan.model.assets.lookerview attribute)": [[94, "pyatlan.model.assets.LookerView.FIELDS"]], "looker_view_file_name (pyatlan.model.assets.lookerview attribute)": [[94, "pyatlan.model.assets.LookerView.LOOKER_VIEW_FILE_NAME"]], "looker_view_file_path (pyatlan.model.assets.lookerview attribute)": [[94, "pyatlan.model.assets.LookerView.LOOKER_VIEW_FILE_PATH"]], "lookerview (class in pyatlan.model.assets)": [[94, "pyatlan.model.assets.LookerView"]], "project (pyatlan.model.assets.lookerview attribute)": [[94, "pyatlan.model.assets.LookerView.PROJECT"]], "project_name (pyatlan.model.assets.lookerview attribute)": [[94, "pyatlan.model.assets.LookerView.PROJECT_NAME"]], "alias (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.ALIAS"]], "atlan_schema (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.ATLAN_SCHEMA"]], "columns (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.COLUMNS"]], "column_count (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.COLUMN_COUNT"]], "definition (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.DEFINITION"]], "is_query_preview (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.IS_QUERY_PREVIEW"]], "is_temporary (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.IS_TEMPORARY"]], "materialisedview (class in pyatlan.model.assets)": [[95, "pyatlan.model.assets.MaterialisedView"]], "query_preview_config (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.QUERY_PREVIEW_CONFIG"]], "refresh_method (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.REFRESH_METHOD"]], "refresh_mode (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.REFRESH_MODE"]], "row_count (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.SIZE_BYTES"]], "staleness (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.STALENESS"]], "stale_since_date (pyatlan.model.assets.materialisedview attribute)": [[95, "pyatlan.model.assets.MaterialisedView.STALE_SINCE_DATE"]], "matillion_version (pyatlan.model.assets.matillion attribute)": [[96, "pyatlan.model.assets.Matillion.MATILLION_VERSION"]], "matillion (class in pyatlan.model.assets)": [[96, "pyatlan.model.assets.Matillion"]], "matillion_component_id (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_ID"]], "matillion_component_implementation_id (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_IMPLEMENTATION_ID"]], "matillion_component_last_five_run_status (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_LAST_FIVE_RUN_STATUS"]], "matillion_component_last_run_status (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_LAST_RUN_STATUS"]], "matillion_component_linked_job (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_LINKED_JOB"]], "matillion_component_sqls (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_SQLS"]], "matillion_job (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_JOB"]], "matillion_job_name (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_JOB_NAME"]], "matillion_job_qualified_name (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_JOB_QUALIFIED_NAME"]], "matillion_process (pyatlan.model.assets.matillioncomponent attribute)": [[97, "pyatlan.model.assets.MatillionComponent.MATILLION_PROCESS"]], "matillioncomponent (class in pyatlan.model.assets)": [[97, "pyatlan.model.assets.MatillionComponent"]], "matillion_projects (pyatlan.model.assets.matilliongroup attribute)": [[98, "pyatlan.model.assets.MatillionGroup.MATILLION_PROJECTS"]], "matillion_project_count (pyatlan.model.assets.matilliongroup attribute)": [[98, "pyatlan.model.assets.MatillionGroup.MATILLION_PROJECT_COUNT"]], "matilliongroup (class in pyatlan.model.assets)": [[98, "pyatlan.model.assets.MatillionGroup"]], "matillion_components (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_COMPONENTS"]], "matillion_job_component_count (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_COMPONENT_COUNT"]], "matillion_job_path (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_PATH"]], "matillion_job_schedule (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_SCHEDULE"]], "matillion_job_type (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_TYPE"]], "matillion_project (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_PROJECT"]], "matillion_project_name (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_PROJECT_NAME"]], "matillion_project_qualified_name (pyatlan.model.assets.matillionjob attribute)": [[99, "pyatlan.model.assets.MatillionJob.MATILLION_PROJECT_QUALIFIED_NAME"]], "matillionjob (class in pyatlan.model.assets)": [[99, "pyatlan.model.assets.MatillionJob"]], "matillion_environments (pyatlan.model.assets.matillionproject attribute)": [[100, "pyatlan.model.assets.MatillionProject.MATILLION_ENVIRONMENTS"]], "matillion_group (pyatlan.model.assets.matillionproject attribute)": [[100, "pyatlan.model.assets.MatillionProject.MATILLION_GROUP"]], "matillion_group_name (pyatlan.model.assets.matillionproject attribute)": [[100, "pyatlan.model.assets.MatillionProject.MATILLION_GROUP_NAME"]], "matillion_group_qualified_name (pyatlan.model.assets.matillionproject attribute)": [[100, "pyatlan.model.assets.MatillionProject.MATILLION_GROUP_QUALIFIED_NAME"]], "matillion_jobs (pyatlan.model.assets.matillionproject attribute)": [[100, "pyatlan.model.assets.MatillionProject.MATILLION_JOBS"]], "matillion_project_job_count (pyatlan.model.assets.matillionproject attribute)": [[100, "pyatlan.model.assets.MatillionProject.MATILLION_PROJECT_JOB_COUNT"]], "matillion_versions (pyatlan.model.assets.matillionproject attribute)": [[100, "pyatlan.model.assets.MatillionProject.MATILLION_VERSIONS"]], "matillionproject (class in pyatlan.model.assets)": [[100, "pyatlan.model.assets.MatillionProject"]], "mcincident (class in pyatlan.model.assets)": [[101, "pyatlan.model.assets.MCIncident"]], "mc_incident_assets (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_INCIDENT_ASSETS"]], "mc_incident_id (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_INCIDENT_ID"]], "mc_incident_severity (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_INCIDENT_SEVERITY"]], "mc_incident_state (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_INCIDENT_STATE"]], "mc_incident_sub_types (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_INCIDENT_SUB_TYPES"]], "mc_incident_type (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_INCIDENT_TYPE"]], "mc_incident_warehouse (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_INCIDENT_WAREHOUSE"]], "mc_monitor (pyatlan.model.assets.mcincident attribute)": [[101, "pyatlan.model.assets.MCIncident.MC_MONITOR"]], "mcmonitor (class in pyatlan.model.assets)": [[102, "pyatlan.model.assets.MCMonitor"]], "mc_monitor_alert_condition (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_ALERT_CONDITION"]], "mc_monitor_assets (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_ASSETS"]], "mc_monitor_breach_rate (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_BREACH_RATE"]], "mc_monitor_id (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_ID"]], "mc_monitor_incident_count (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_INCIDENT_COUNT"]], "mc_monitor_namespace (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_NAMESPACE"]], "mc_monitor_rule_comparisons (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_COMPARISONS"]], "mc_monitor_rule_custom_sql (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_CUSTOM_SQL"]], "mc_monitor_rule_is_snoozed (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_IS_SNOOZED"]], "mc_monitor_rule_next_execution_time (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_NEXT_EXECUTION_TIME"]], "mc_monitor_rule_previous_execution_time (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_PREVIOUS_EXECUTION_TIME"]], "mc_monitor_rule_schedule_config (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_SCHEDULE_CONFIG"]], "mc_monitor_rule_schedule_config_humanized (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_SCHEDULE_CONFIG_HUMANIZED"]], "mc_monitor_rule_type (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_TYPE"]], "mc_monitor_schedule_type (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_SCHEDULE_TYPE"]], "mc_monitor_status (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_STATUS"]], "mc_monitor_type (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_TYPE"]], "mc_monitor_warehouse (pyatlan.model.assets.mcmonitor attribute)": [[102, "pyatlan.model.assets.MCMonitor.MC_MONITOR_WAREHOUSE"]], "metabase_collection_name (pyatlan.model.assets.metabase attribute)": [[103, "pyatlan.model.assets.Metabase.METABASE_COLLECTION_NAME"]], "metabase_collection_qualified_name (pyatlan.model.assets.metabase attribute)": [[103, "pyatlan.model.assets.Metabase.METABASE_COLLECTION_QUALIFIED_NAME"]], "metabase (class in pyatlan.model.assets)": [[103, "pyatlan.model.assets.Metabase"]], "metabase_color (pyatlan.model.assets.metabasecollection attribute)": [[104, "pyatlan.model.assets.MetabaseCollection.METABASE_COLOR"]], "metabase_dashboards (pyatlan.model.assets.metabasecollection attribute)": [[104, "pyatlan.model.assets.MetabaseCollection.METABASE_DASHBOARDS"]], "metabase_is_personal_collection (pyatlan.model.assets.metabasecollection attribute)": [[104, "pyatlan.model.assets.MetabaseCollection.METABASE_IS_PERSONAL_COLLECTION"]], "metabase_namespace (pyatlan.model.assets.metabasecollection attribute)": [[104, "pyatlan.model.assets.MetabaseCollection.METABASE_NAMESPACE"]], "metabase_questions (pyatlan.model.assets.metabasecollection attribute)": [[104, "pyatlan.model.assets.MetabaseCollection.METABASE_QUESTIONS"]], "metabase_slug (pyatlan.model.assets.metabasecollection attribute)": [[104, "pyatlan.model.assets.MetabaseCollection.METABASE_SLUG"]], "metabasecollection (class in pyatlan.model.assets)": [[104, "pyatlan.model.assets.MetabaseCollection"]], "metabase_collection (pyatlan.model.assets.metabasedashboard attribute)": [[105, "pyatlan.model.assets.MetabaseDashboard.METABASE_COLLECTION"]], "metabase_questions (pyatlan.model.assets.metabasedashboard attribute)": [[105, "pyatlan.model.assets.MetabaseDashboard.METABASE_QUESTIONS"]], "metabase_question_count (pyatlan.model.assets.metabasedashboard attribute)": [[105, "pyatlan.model.assets.MetabaseDashboard.METABASE_QUESTION_COUNT"]], "metabasedashboard (class in pyatlan.model.assets)": [[105, "pyatlan.model.assets.MetabaseDashboard"]], "metabase_collection (pyatlan.model.assets.metabasequestion attribute)": [[106, "pyatlan.model.assets.MetabaseQuestion.METABASE_COLLECTION"]], "metabase_dashboards (pyatlan.model.assets.metabasequestion attribute)": [[106, "pyatlan.model.assets.MetabaseQuestion.METABASE_DASHBOARDS"]], "metabase_dashboard_count (pyatlan.model.assets.metabasequestion attribute)": [[106, "pyatlan.model.assets.MetabaseQuestion.METABASE_DASHBOARD_COUNT"]], "metabase_query (pyatlan.model.assets.metabasequestion attribute)": [[106, "pyatlan.model.assets.MetabaseQuestion.METABASE_QUERY"]], "metabase_query_type (pyatlan.model.assets.metabasequestion attribute)": [[106, "pyatlan.model.assets.MetabaseQuestion.METABASE_QUERY_TYPE"]], "metabasequestion (class in pyatlan.model.assets)": [[106, "pyatlan.model.assets.MetabaseQuestion"]], "assets (pyatlan.model.assets.metric attribute)": [[107, "pyatlan.model.assets.Metric.ASSETS"]], "metric_dimension_columns (pyatlan.model.assets.metric attribute)": [[107, "pyatlan.model.assets.Metric.METRIC_DIMENSION_COLUMNS"]], "metric_filters (pyatlan.model.assets.metric attribute)": [[107, "pyatlan.model.assets.Metric.METRIC_FILTERS"]], "metric_sql (pyatlan.model.assets.metric attribute)": [[107, "pyatlan.model.assets.Metric.METRIC_SQL"]], "metric_timestamp_column (pyatlan.model.assets.metric attribute)": [[107, "pyatlan.model.assets.Metric.METRIC_TIMESTAMP_COLUMN"]], "metric_time_grains (pyatlan.model.assets.metric attribute)": [[107, "pyatlan.model.assets.Metric.METRIC_TIME_GRAINS"]], "metric_type (pyatlan.model.assets.metric attribute)": [[107, "pyatlan.model.assets.Metric.METRIC_TYPE"]], "metric (class in pyatlan.model.assets)": [[107, "pyatlan.model.assets.Metric"]], "micro_strategy_certified_at (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CERTIFIED_AT"]], "micro_strategy_certified_by (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CERTIFIED_BY"]], "micro_strategy_cube_names (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CUBE_NAMES"]], "micro_strategy_cube_qualified_names (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CUBE_QUALIFIED_NAMES"]], "micro_strategy_is_certified (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_IS_CERTIFIED"]], "micro_strategy_location (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_LOCATION"]], "micro_strategy_project_name (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_PROJECT_NAME"]], "micro_strategy_project_qualified_name (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_PROJECT_QUALIFIED_NAME"]], "micro_strategy_report_names (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_REPORT_NAMES"]], "micro_strategy_report_qualified_names (pyatlan.model.assets.microstrategy attribute)": [[108, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_REPORT_QUALIFIED_NAMES"]], "microstrategy (class in pyatlan.model.assets)": [[108, "pyatlan.model.assets.MicroStrategy"]], "micro_strategy_attribute_forms (pyatlan.model.assets.microstrategyattribute attribute)": [[109, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_ATTRIBUTE_FORMS"]], "micro_strategy_cubes (pyatlan.model.assets.microstrategyattribute attribute)": [[109, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_CUBES"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyattribute attribute)": [[109, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategyattribute attribute)": [[109, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_PROJECT"]], "micro_strategy_reports (pyatlan.model.assets.microstrategyattribute attribute)": [[109, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_REPORTS"]], "microstrategyattribute (class in pyatlan.model.assets)": [[109, "pyatlan.model.assets.MicroStrategyAttribute"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategycube attribute)": [[110, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_cube_query (pyatlan.model.assets.microstrategycube attribute)": [[110, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_CUBE_QUERY"]], "micro_strategy_cube_type (pyatlan.model.assets.microstrategycube attribute)": [[110, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_CUBE_TYPE"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategycube attribute)": [[110, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategycube attribute)": [[110, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_PROJECT"]], "microstrategycube (class in pyatlan.model.assets)": [[110, "pyatlan.model.assets.MicroStrategyCube"]], "micro_strategy_project (pyatlan.model.assets.microstrategydocument attribute)": [[111, "pyatlan.model.assets.MicroStrategyDocument.MICRO_STRATEGY_PROJECT"]], "microstrategydocument (class in pyatlan.model.assets)": [[111, "pyatlan.model.assets.MicroStrategyDocument"]], "micro_strategy_dossier_chapter_names (pyatlan.model.assets.microstrategydossier attribute)": [[112, "pyatlan.model.assets.MicroStrategyDossier.MICRO_STRATEGY_DOSSIER_CHAPTER_NAMES"]], "micro_strategy_project (pyatlan.model.assets.microstrategydossier attribute)": [[112, "pyatlan.model.assets.MicroStrategyDossier.MICRO_STRATEGY_PROJECT"]], "micro_strategy_visualizations (pyatlan.model.assets.microstrategydossier attribute)": [[112, "pyatlan.model.assets.MicroStrategyDossier.MICRO_STRATEGY_VISUALIZATIONS"]], "microstrategydossier (class in pyatlan.model.assets)": [[112, "pyatlan.model.assets.MicroStrategyDossier"]], "micro_strategy_fact_expressions (pyatlan.model.assets.microstrategyfact attribute)": [[113, "pyatlan.model.assets.MicroStrategyFact.MICRO_STRATEGY_FACT_EXPRESSIONS"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyfact attribute)": [[113, "pyatlan.model.assets.MicroStrategyFact.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategyfact attribute)": [[113, "pyatlan.model.assets.MicroStrategyFact.MICRO_STRATEGY_PROJECT"]], "microstrategyfact (class in pyatlan.model.assets)": [[113, "pyatlan.model.assets.MicroStrategyFact"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_attribute_names (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_ATTRIBUTE_NAMES"]], "micro_strategy_attribute_qualified_names (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_ATTRIBUTE_QUALIFIED_NAMES"]], "micro_strategy_cubes (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_CUBES"]], "micro_strategy_facts (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_FACTS"]], "micro_strategy_fact_names (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_FACT_NAMES"]], "micro_strategy_fact_qualified_names (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_FACT_QUALIFIED_NAMES"]], "micro_strategy_metric_children (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_CHILDREN"]], "micro_strategy_metric_expression (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_EXPRESSION"]], "micro_strategy_metric_parents (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_PARENTS"]], "micro_strategy_metric_parent_names (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_PARENT_NAMES"]], "micro_strategy_metric_parent_qualified_names (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_PARENT_QUALIFIED_NAMES"]], "micro_strategy_project (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_PROJECT"]], "micro_strategy_reports (pyatlan.model.assets.microstrategymetric attribute)": [[114, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_REPORTS"]], "microstrategymetric (class in pyatlan.model.assets)": [[114, "pyatlan.model.assets.MicroStrategyMetric"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_cubes (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_CUBES"]], "micro_strategy_documents (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_DOCUMENTS"]], "micro_strategy_dossiers (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_DOSSIERS"]], "micro_strategy_facts (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_FACTS"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_METRICS"]], "micro_strategy_reports (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_REPORTS"]], "micro_strategy_visualizations (pyatlan.model.assets.microstrategyproject attribute)": [[115, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_VISUALIZATIONS"]], "microstrategyproject (class in pyatlan.model.assets)": [[115, "pyatlan.model.assets.MicroStrategyProject"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategyreport attribute)": [[116, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyreport attribute)": [[116, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategyreport attribute)": [[116, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_PROJECT"]], "micro_strategy_report_type (pyatlan.model.assets.microstrategyreport attribute)": [[116, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_REPORT_TYPE"]], "microstrategyreport (class in pyatlan.model.assets)": [[116, "pyatlan.model.assets.MicroStrategyReport"]], "micro_strategy_dossier (pyatlan.model.assets.microstrategyvisualization attribute)": [[117, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_DOSSIER"]], "micro_strategy_dossier_name (pyatlan.model.assets.microstrategyvisualization attribute)": [[117, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_DOSSIER_NAME"]], "micro_strategy_dossier_qualified_name (pyatlan.model.assets.microstrategyvisualization attribute)": [[117, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_DOSSIER_QUALIFIED_NAME"]], "micro_strategy_project (pyatlan.model.assets.microstrategyvisualization attribute)": [[117, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_PROJECT"]], "micro_strategy_visualization_type (pyatlan.model.assets.microstrategyvisualization attribute)": [[117, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_VISUALIZATION_TYPE"]], "microstrategyvisualization (class in pyatlan.model.assets)": [[117, "pyatlan.model.assets.MicroStrategyVisualization"]], "mode_id (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_ID"]], "mode_query_name (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_QUERY_NAME"]], "mode_query_qualified_name (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_QUERY_QUALIFIED_NAME"]], "mode_report_name (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_REPORT_NAME"]], "mode_report_qualified_name (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_REPORT_QUALIFIED_NAME"]], "mode_token (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_TOKEN"]], "mode_workspace_name (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_WORKSPACE_NAME"]], "mode_workspace_qualified_name (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_WORKSPACE_QUALIFIED_NAME"]], "mode_workspace_username (pyatlan.model.assets.mode attribute)": [[118, "pyatlan.model.assets.Mode.MODE_WORKSPACE_USERNAME"]], "mode (class in pyatlan.model.assets)": [[118, "pyatlan.model.assets.Mode"]], "mode_chart_type (pyatlan.model.assets.modechart attribute)": [[119, "pyatlan.model.assets.ModeChart.MODE_CHART_TYPE"]], "mode_query (pyatlan.model.assets.modechart attribute)": [[119, "pyatlan.model.assets.ModeChart.MODE_QUERY"]], "modechart (class in pyatlan.model.assets)": [[119, "pyatlan.model.assets.ModeChart"]], "mode_collection_state (pyatlan.model.assets.modecollection attribute)": [[120, "pyatlan.model.assets.ModeCollection.MODE_COLLECTION_STATE"]], "mode_collection_type (pyatlan.model.assets.modecollection attribute)": [[120, "pyatlan.model.assets.ModeCollection.MODE_COLLECTION_TYPE"]], "mode_reports (pyatlan.model.assets.modecollection attribute)": [[120, "pyatlan.model.assets.ModeCollection.MODE_REPORTS"]], "mode_workspace (pyatlan.model.assets.modecollection attribute)": [[120, "pyatlan.model.assets.ModeCollection.MODE_WORKSPACE"]], "modecollection (class in pyatlan.model.assets)": [[120, "pyatlan.model.assets.ModeCollection"]], "mode_charts (pyatlan.model.assets.modequery attribute)": [[121, "pyatlan.model.assets.ModeQuery.MODE_CHARTS"]], "mode_raw_query (pyatlan.model.assets.modequery attribute)": [[121, "pyatlan.model.assets.ModeQuery.MODE_RAW_QUERY"]], "mode_report (pyatlan.model.assets.modequery attribute)": [[121, "pyatlan.model.assets.ModeQuery.MODE_REPORT"]], "mode_report_import_count (pyatlan.model.assets.modequery attribute)": [[121, "pyatlan.model.assets.ModeQuery.MODE_REPORT_IMPORT_COUNT"]], "modequery (class in pyatlan.model.assets)": [[121, "pyatlan.model.assets.ModeQuery"]], "mode_chart_count (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_CHART_COUNT"]], "mode_collections (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_COLLECTIONS"]], "mode_collection_token (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_COLLECTION_TOKEN"]], "mode_is_public (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_IS_PUBLIC"]], "mode_is_shared (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_IS_SHARED"]], "mode_queries (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_QUERIES"]], "mode_query_count (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_QUERY_COUNT"]], "mode_query_preview (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_QUERY_PREVIEW"]], "mode_report_published_at (pyatlan.model.assets.modereport attribute)": [[122, "pyatlan.model.assets.ModeReport.MODE_REPORT_PUBLISHED_AT"]], "modereport (class in pyatlan.model.assets)": [[122, "pyatlan.model.assets.ModeReport"]], "mode_collections (pyatlan.model.assets.modeworkspace attribute)": [[123, "pyatlan.model.assets.ModeWorkspace.MODE_COLLECTIONS"]], "mode_collection_count (pyatlan.model.assets.modeworkspace attribute)": [[123, "pyatlan.model.assets.ModeWorkspace.MODE_COLLECTION_COUNT"]], "modeworkspace (class in pyatlan.model.assets)": [[123, "pyatlan.model.assets.ModeWorkspace"]], "mongodb (class in pyatlan.model.assets)": [[124, "pyatlan.model.assets.MongoDB"]], "alias (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.ALIAS"]], "calculation_view_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.CALCULATION_VIEW_QUALIFIED_NAME"]], "column_count (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.COLUMN_COUNT"]], "database_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.DATABASE_QUALIFIED_NAME"]], "external_location (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.IS_PARTITIONED"]], "is_profiled (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.IS_PROFILED"]], "is_query_preview (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.IS_TEMPORARY"]], "last_profiled_at (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.LAST_PROFILED_AT"]], "mongo_db_collection_average_object_size (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_AVERAGE_OBJECT_SIZE"]], "mongo_db_collection_expire_after_seconds (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_EXPIRE_AFTER_SECONDS"]], "mongo_db_collection_is_capped (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_IS_CAPPED"]], "mongo_db_collection_maximum_document_count (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_MAXIMUM_DOCUMENT_COUNT"]], "mongo_db_collection_max_size (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_MAX_SIZE"]], "mongo_db_collection_num_indexes (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_NUM_INDEXES"]], "mongo_db_collection_num_orphan_docs (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_NUM_ORPHAN_DOCS"]], "mongo_db_collection_schema_definition (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_SCHEMA_DEFINITION"]], "mongo_db_collection_subtype (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_SUBTYPE"]], "mongo_db_collection_time_field (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_TIME_FIELD"]], "mongo_db_collection_time_granularity (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_TIME_GRANULARITY"]], "mongo_db_collection_total_index_size (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_TOTAL_INDEX_SIZE"]], "mongo_db_database (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_DATABASE"]], "mongodbcollection (class in pyatlan.model.assets)": [[125, "pyatlan.model.assets.MongoDBCollection"]], "no_sql_schema_definition (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.NO_SQL_SCHEMA_DEFINITION"]], "partition_count (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.PARTITION_STRATEGY"]], "query_count (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.QUERY_COUNT_UPDATED_AT"]], "query_preview_config (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.QUERY_PREVIEW_CONFIG"]], "query_user_count (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.QUERY_USER_MAP"]], "row_count (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.ROW_COUNT"]], "schema_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.SCHEMA_QUALIFIED_NAME"]], "size_bytes (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.SIZE_BYTES"]], "table_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[125, "pyatlan.model.assets.MongoDBCollection.VIEW_QUALIFIED_NAME"]], "calculation_view_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.CALCULATION_VIEW_QUALIFIED_NAME"]], "database_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.DATABASE_QUALIFIED_NAME"]], "is_profiled (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.IS_PROFILED"]], "last_profiled_at (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.LAST_PROFILED_AT"]], "mongo_db_collections (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.MONGO_DB_COLLECTIONS"]], "mongo_db_database_collection_count (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.MONGO_DB_DATABASE_COLLECTION_COUNT"]], "mongodbdatabase (class in pyatlan.model.assets)": [[126, "pyatlan.model.assets.MongoDBDatabase"]], "no_sql_schema_definition (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.NO_SQL_SCHEMA_DEFINITION"]], "query_count (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.QUERY_COUNT_UPDATED_AT"]], "query_user_count (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.QUERY_USER_MAP"]], "schema_count (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.SCHEMA_COUNT"]], "schema_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.SCHEMA_QUALIFIED_NAME"]], "table_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[126, "pyatlan.model.assets.MongoDBDatabase.VIEW_QUALIFIED_NAME"]], "mc_asset_qualified_names (pyatlan.model.assets.montecarlo attribute)": [[127, "pyatlan.model.assets.MonteCarlo.MC_ASSET_QUALIFIED_NAMES"]], "mc_labels (pyatlan.model.assets.montecarlo attribute)": [[127, "pyatlan.model.assets.MonteCarlo.MC_LABELS"]], "montecarlo (class in pyatlan.model.assets)": [[127, "pyatlan.model.assets.MonteCarlo"]], "cube_dimension_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[128, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_DIMENSION_NAME"]], "cube_dimension_qualified_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[128, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_DIMENSION_QUALIFIED_NAME"]], "cube_hierarchy_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[128, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_HIERARCHY_NAME"]], "cube_hierarchy_qualified_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[128, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_HIERARCHY_QUALIFIED_NAME"]], "cube_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[128, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_NAME"]], "cube_qualified_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[128, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_QUALIFIED_NAME"]], "multidimensionaldataset (class in pyatlan.model.assets)": [[128, "pyatlan.model.assets.MultiDimensionalDataset"]], "children_folders (pyatlan.model.assets.namespace attribute)": [[129, "pyatlan.model.assets.Namespace.CHILDREN_FOLDERS"]], "children_queries (pyatlan.model.assets.namespace attribute)": [[129, "pyatlan.model.assets.Namespace.CHILDREN_QUERIES"]], "namespace (class in pyatlan.model.assets)": [[129, "pyatlan.model.assets.Namespace"]], "no_sql_schema_definition (pyatlan.model.assets.nosql attribute)": [[130, "pyatlan.model.assets.NoSQL.NO_SQL_SCHEMA_DEFINITION"]], "nosql (class in pyatlan.model.assets)": [[130, "pyatlan.model.assets.NoSQL"]], "objectstore (class in pyatlan.model.assets)": [[131, "pyatlan.model.assets.ObjectStore"]], "persona_groups (pyatlan.model.assets.persona attribute)": [[132, "pyatlan.model.assets.Persona.PERSONA_GROUPS"]], "persona_users (pyatlan.model.assets.persona attribute)": [[132, "pyatlan.model.assets.Persona.PERSONA_USERS"]], "persona (class in pyatlan.model.assets)": [[132, "pyatlan.model.assets.Persona"]], "role_id (pyatlan.model.assets.persona attribute)": [[132, "pyatlan.model.assets.Persona.ROLE_ID"]], "power_bi_endorsement (pyatlan.model.assets.powerbi attribute)": [[133, "pyatlan.model.assets.PowerBI.POWER_BI_ENDORSEMENT"]], "power_bi_format_string (pyatlan.model.assets.powerbi attribute)": [[133, "pyatlan.model.assets.PowerBI.POWER_BI_FORMAT_STRING"]], "power_bi_is_hidden (pyatlan.model.assets.powerbi attribute)": [[133, "pyatlan.model.assets.PowerBI.POWER_BI_IS_HIDDEN"]], "power_bi_table_qualified_name (pyatlan.model.assets.powerbi attribute)": [[133, "pyatlan.model.assets.PowerBI.POWER_BI_TABLE_QUALIFIED_NAME"]], "powerbi (class in pyatlan.model.assets)": [[133, "pyatlan.model.assets.PowerBI"]], "dataset_qualified_name (pyatlan.model.assets.powerbicolumn attribute)": [[134, "pyatlan.model.assets.PowerBIColumn.DATASET_QUALIFIED_NAME"]], "power_bi_column_data_category (pyatlan.model.assets.powerbicolumn attribute)": [[134, "pyatlan.model.assets.PowerBIColumn.POWER_BI_COLUMN_DATA_CATEGORY"]], "power_bi_column_data_type (pyatlan.model.assets.powerbicolumn attribute)": [[134, "pyatlan.model.assets.PowerBIColumn.POWER_BI_COLUMN_DATA_TYPE"]], "power_bi_column_summarize_by (pyatlan.model.assets.powerbicolumn attribute)": [[134, "pyatlan.model.assets.PowerBIColumn.POWER_BI_COLUMN_SUMMARIZE_BY"]], "power_bi_sort_by_column (pyatlan.model.assets.powerbicolumn attribute)": [[134, "pyatlan.model.assets.PowerBIColumn.POWER_BI_SORT_BY_COLUMN"]], "powerbicolumn (class in pyatlan.model.assets)": [[134, "pyatlan.model.assets.PowerBIColumn"]], "table (pyatlan.model.assets.powerbicolumn attribute)": [[134, "pyatlan.model.assets.PowerBIColumn.TABLE"]], "workspace_qualified_name (pyatlan.model.assets.powerbicolumn attribute)": [[134, "pyatlan.model.assets.PowerBIColumn.WORKSPACE_QUALIFIED_NAME"]], "powerbidashboard (class in pyatlan.model.assets)": [[135, "pyatlan.model.assets.PowerBIDashboard"]], "tiles (pyatlan.model.assets.powerbidashboard attribute)": [[135, "pyatlan.model.assets.PowerBIDashboard.TILES"]], "tile_count (pyatlan.model.assets.powerbidashboard attribute)": [[135, "pyatlan.model.assets.PowerBIDashboard.TILE_COUNT"]], "web_url (pyatlan.model.assets.powerbidashboard attribute)": [[135, "pyatlan.model.assets.PowerBIDashboard.WEB_URL"]], "workspace (pyatlan.model.assets.powerbidashboard attribute)": [[135, "pyatlan.model.assets.PowerBIDashboard.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbidashboard attribute)": [[135, "pyatlan.model.assets.PowerBIDashboard.WORKSPACE_QUALIFIED_NAME"]], "datasets (pyatlan.model.assets.powerbidataflow attribute)": [[136, "pyatlan.model.assets.PowerBIDataflow.DATASETS"]], "powerbidataflow (class in pyatlan.model.assets)": [[136, "pyatlan.model.assets.PowerBIDataflow"]], "web_url (pyatlan.model.assets.powerbidataflow attribute)": [[136, "pyatlan.model.assets.PowerBIDataflow.WEB_URL"]], "workspace (pyatlan.model.assets.powerbidataflow attribute)": [[136, "pyatlan.model.assets.PowerBIDataflow.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbidataflow attribute)": [[136, "pyatlan.model.assets.PowerBIDataflow.WORKSPACE_QUALIFIED_NAME"]], "dataflows (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.DATAFLOWS"]], "datasources (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.DATASOURCES"]], "powerbidataset (class in pyatlan.model.assets)": [[137, "pyatlan.model.assets.PowerBIDataset"]], "reports (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.REPORTS"]], "tables (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.TABLES"]], "tiles (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.TILES"]], "web_url (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.WEB_URL"]], "workspace (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbidataset attribute)": [[137, "pyatlan.model.assets.PowerBIDataset.WORKSPACE_QUALIFIED_NAME"]], "connection_details (pyatlan.model.assets.powerbidatasource attribute)": [[138, "pyatlan.model.assets.PowerBIDatasource.CONNECTION_DETAILS"]], "datasets (pyatlan.model.assets.powerbidatasource attribute)": [[138, "pyatlan.model.assets.PowerBIDatasource.DATASETS"]], "powerbidatasource (class in pyatlan.model.assets)": [[138, "pyatlan.model.assets.PowerBIDatasource"]], "dataset_qualified_name (pyatlan.model.assets.powerbimeasure attribute)": [[139, "pyatlan.model.assets.PowerBIMeasure.DATASET_QUALIFIED_NAME"]], "power_bi_is_external_measure (pyatlan.model.assets.powerbimeasure attribute)": [[139, "pyatlan.model.assets.PowerBIMeasure.POWER_BI_IS_EXTERNAL_MEASURE"]], "power_bi_measure_expression (pyatlan.model.assets.powerbimeasure attribute)": [[139, "pyatlan.model.assets.PowerBIMeasure.POWER_BI_MEASURE_EXPRESSION"]], "powerbimeasure (class in pyatlan.model.assets)": [[139, "pyatlan.model.assets.PowerBIMeasure"]], "table (pyatlan.model.assets.powerbimeasure attribute)": [[139, "pyatlan.model.assets.PowerBIMeasure.TABLE"]], "workspace_qualified_name (pyatlan.model.assets.powerbimeasure attribute)": [[139, "pyatlan.model.assets.PowerBIMeasure.WORKSPACE_QUALIFIED_NAME"]], "powerbipage (class in pyatlan.model.assets)": [[140, "pyatlan.model.assets.PowerBIPage"]], "report (pyatlan.model.assets.powerbipage attribute)": [[140, "pyatlan.model.assets.PowerBIPage.REPORT"]], "report_qualified_name (pyatlan.model.assets.powerbipage attribute)": [[140, "pyatlan.model.assets.PowerBIPage.REPORT_QUALIFIED_NAME"]], "workspace_qualified_name (pyatlan.model.assets.powerbipage attribute)": [[140, "pyatlan.model.assets.PowerBIPage.WORKSPACE_QUALIFIED_NAME"]], "dataset (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.DATASET"]], "dataset_qualified_name (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.DATASET_QUALIFIED_NAME"]], "pages (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.PAGES"]], "page_count (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.PAGE_COUNT"]], "powerbireport (class in pyatlan.model.assets)": [[141, "pyatlan.model.assets.PowerBIReport"]], "tiles (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.TILES"]], "web_url (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.WEB_URL"]], "workspace (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbireport attribute)": [[141, "pyatlan.model.assets.PowerBIReport.WORKSPACE_QUALIFIED_NAME"]], "columns (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.COLUMNS"]], "dataset (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.DATASET"]], "dataset_qualified_name (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.DATASET_QUALIFIED_NAME"]], "measures (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.MEASURES"]], "power_bi_table_column_count (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.POWER_BI_TABLE_COLUMN_COUNT"]], "power_bi_table_measure_count (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.POWER_BI_TABLE_MEASURE_COUNT"]], "power_bi_table_source_expressions (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.POWER_BI_TABLE_SOURCE_EXPRESSIONS"]], "powerbitable (class in pyatlan.model.assets)": [[142, "pyatlan.model.assets.PowerBITable"]], "workspace_qualified_name (pyatlan.model.assets.powerbitable attribute)": [[142, "pyatlan.model.assets.PowerBITable.WORKSPACE_QUALIFIED_NAME"]], "dashboard (pyatlan.model.assets.powerbitile attribute)": [[143, "pyatlan.model.assets.PowerBITile.DASHBOARD"]], "dashboard_qualified_name (pyatlan.model.assets.powerbitile attribute)": [[143, "pyatlan.model.assets.PowerBITile.DASHBOARD_QUALIFIED_NAME"]], "dataset (pyatlan.model.assets.powerbitile attribute)": [[143, "pyatlan.model.assets.PowerBITile.DATASET"]], "powerbitile (class in pyatlan.model.assets)": [[143, "pyatlan.model.assets.PowerBITile"]], "report (pyatlan.model.assets.powerbitile attribute)": [[143, "pyatlan.model.assets.PowerBITile.REPORT"]], "workspace_qualified_name (pyatlan.model.assets.powerbitile attribute)": [[143, "pyatlan.model.assets.PowerBITile.WORKSPACE_QUALIFIED_NAME"]], "dashboards (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.DASHBOARDS"]], "dashboard_count (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.DASHBOARD_COUNT"]], "dataflows (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.DATAFLOWS"]], "dataflow_count (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.DATAFLOW_COUNT"]], "datasets (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.DATASETS"]], "dataset_count (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.DATASET_COUNT"]], "powerbiworkspace (class in pyatlan.model.assets)": [[144, "pyatlan.model.assets.PowerBIWorkspace"]], "reports (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.REPORTS"]], "report_count (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.REPORT_COUNT"]], "web_url (pyatlan.model.assets.powerbiworkspace attribute)": [[144, "pyatlan.model.assets.PowerBIWorkspace.WEB_URL"]], "preset_dashboard_id (pyatlan.model.assets.preset attribute)": [[145, "pyatlan.model.assets.Preset.PRESET_DASHBOARD_ID"]], "preset_dashboard_qualified_name (pyatlan.model.assets.preset attribute)": [[145, "pyatlan.model.assets.Preset.PRESET_DASHBOARD_QUALIFIED_NAME"]], "preset_workspace_id (pyatlan.model.assets.preset attribute)": [[145, "pyatlan.model.assets.Preset.PRESET_WORKSPACE_ID"]], "preset_workspace_qualified_name (pyatlan.model.assets.preset attribute)": [[145, "pyatlan.model.assets.Preset.PRESET_WORKSPACE_QUALIFIED_NAME"]], "preset (class in pyatlan.model.assets)": [[145, "pyatlan.model.assets.Preset"]], "preset_chart_description_markdown (pyatlan.model.assets.presetchart attribute)": [[146, "pyatlan.model.assets.PresetChart.PRESET_CHART_DESCRIPTION_MARKDOWN"]], "preset_chart_form_data (pyatlan.model.assets.presetchart attribute)": [[146, "pyatlan.model.assets.PresetChart.PRESET_CHART_FORM_DATA"]], "preset_dashboard (pyatlan.model.assets.presetchart attribute)": [[146, "pyatlan.model.assets.PresetChart.PRESET_DASHBOARD"]], "presetchart (class in pyatlan.model.assets)": [[146, "pyatlan.model.assets.PresetChart"]], "preset_charts (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_CHARTS"]], "preset_dashboard_changed_by_name (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_CHANGED_BY_NAME"]], "preset_dashboard_changed_by_url (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_CHANGED_BY_URL"]], "preset_dashboard_chart_count (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_CHART_COUNT"]], "preset_dashboard_is_managed_externally (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_IS_MANAGED_EXTERNALLY"]], "preset_dashboard_is_published (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_IS_PUBLISHED"]], "preset_dashboard_thumbnail_url (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_THUMBNAIL_URL"]], "preset_datasets (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_DATASETS"]], "preset_workspace (pyatlan.model.assets.presetdashboard attribute)": [[147, "pyatlan.model.assets.PresetDashboard.PRESET_WORKSPACE"]], "presetdashboard (class in pyatlan.model.assets)": [[147, "pyatlan.model.assets.PresetDashboard"]], "preset_dashboard (pyatlan.model.assets.presetdataset attribute)": [[148, "pyatlan.model.assets.PresetDataset.PRESET_DASHBOARD"]], "preset_dataset_datasource_name (pyatlan.model.assets.presetdataset attribute)": [[148, "pyatlan.model.assets.PresetDataset.PRESET_DATASET_DATASOURCE_NAME"]], "preset_dataset_id (pyatlan.model.assets.presetdataset attribute)": [[148, "pyatlan.model.assets.PresetDataset.PRESET_DATASET_ID"]], "preset_dataset_type (pyatlan.model.assets.presetdataset attribute)": [[148, "pyatlan.model.assets.PresetDataset.PRESET_DATASET_TYPE"]], "presetdataset (class in pyatlan.model.assets)": [[148, "pyatlan.model.assets.PresetDataset"]], "preset_dashboards (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_DASHBOARDS"]], "preset_workspace_cluster_id (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_CLUSTER_ID"]], "preset_workspace_dashboard_count (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_DASHBOARD_COUNT"]], "preset_workspace_dataset_count (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_DATASET_COUNT"]], "preset_workspace_deployment_id (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_DEPLOYMENT_ID"]], "preset_workspace_hostname (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_HOSTNAME"]], "preset_workspace_is_in_maintenance_mode (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_IS_IN_MAINTENANCE_MODE"]], "preset_workspace_public_dashboards_allowed (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_PUBLIC_DASHBOARDS_ALLOWED"]], "preset_workspace_region (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_REGION"]], "preset_workspace_status (pyatlan.model.assets.presetworkspace attribute)": [[149, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_STATUS"]], "presetworkspace (class in pyatlan.model.assets)": [[149, "pyatlan.model.assets.PresetWorkspace"]], "atlan_schema (pyatlan.model.assets.procedure attribute)": [[150, "pyatlan.model.assets.Procedure.ATLAN_SCHEMA"]], "definition (pyatlan.model.assets.procedure attribute)": [[150, "pyatlan.model.assets.Procedure.DEFINITION"]], "procedure (class in pyatlan.model.assets)": [[150, "pyatlan.model.assets.Procedure"]], "airflow_tasks (pyatlan.model.assets.process attribute)": [[151, "pyatlan.model.assets.Process.AIRFLOW_TASKS"]], "ast (pyatlan.model.assets.process attribute)": [[151, "pyatlan.model.assets.Process.AST"]], "code (pyatlan.model.assets.process attribute)": [[151, "pyatlan.model.assets.Process.CODE"]], "column_processes (pyatlan.model.assets.process attribute)": [[151, "pyatlan.model.assets.Process.COLUMN_PROCESSES"]], "matillion_component (pyatlan.model.assets.process attribute)": [[151, "pyatlan.model.assets.Process.MATILLION_COMPONENT"]], "process (class in pyatlan.model.assets)": [[151, "pyatlan.model.assets.Process"]], "spark_jobs (pyatlan.model.assets.process attribute)": [[151, "pyatlan.model.assets.Process.SPARK_JOBS"]], "sql (pyatlan.model.assets.process attribute)": [[151, "pyatlan.model.assets.Process.SQL"]], "processexecution (class in pyatlan.model.assets)": [[152, "pyatlan.model.assets.ProcessExecution"]], "purpose_classifications (pyatlan.model.assets.purpose attribute)": [[153, "pyatlan.model.assets.Purpose.PURPOSE_CLASSIFICATIONS"]], "purpose (class in pyatlan.model.assets)": [[153, "pyatlan.model.assets.Purpose"]], "qlik_app_id (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_APP_ID"]], "qlik_app_qualified_name (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_APP_QUALIFIED_NAME"]], "qlik_id (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_ID"]], "qlik_is_published (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_IS_PUBLISHED"]], "qlik_owner_id (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_OWNER_ID"]], "qlik_qri (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_QRI"]], "qlik_space_id (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_SPACE_ID"]], "qlik_space_qualified_name (pyatlan.model.assets.qlik attribute)": [[154, "pyatlan.model.assets.Qlik.QLIK_SPACE_QUALIFIED_NAME"]], "qlik (class in pyatlan.model.assets)": [[154, "pyatlan.model.assets.Qlik"]], "qlik_app_static_byte_size (pyatlan.model.assets.qlikapp attribute)": [[155, "pyatlan.model.assets.QlikApp.QLIK_APP_STATIC_BYTE_SIZE"]], "qlik_has_section_access (pyatlan.model.assets.qlikapp attribute)": [[155, "pyatlan.model.assets.QlikApp.QLIK_HAS_SECTION_ACCESS"]], "qlik_is_direct_query_mode (pyatlan.model.assets.qlikapp attribute)": [[155, "pyatlan.model.assets.QlikApp.QLIK_IS_DIRECT_QUERY_MODE"]], "qlik_is_encrypted (pyatlan.model.assets.qlikapp attribute)": [[155, "pyatlan.model.assets.QlikApp.QLIK_IS_ENCRYPTED"]], "qlik_origin_app_id (pyatlan.model.assets.qlikapp attribute)": [[155, "pyatlan.model.assets.QlikApp.QLIK_ORIGIN_APP_ID"]], "qlik_sheets (pyatlan.model.assets.qlikapp attribute)": [[155, "pyatlan.model.assets.QlikApp.QLIK_SHEETS"]], "qlik_space (pyatlan.model.assets.qlikapp attribute)": [[155, "pyatlan.model.assets.QlikApp.QLIK_SPACE"]], "qlikapp (class in pyatlan.model.assets)": [[155, "pyatlan.model.assets.QlikApp"]], "qlik_chart_footnote (pyatlan.model.assets.qlikchart attribute)": [[156, "pyatlan.model.assets.QlikChart.QLIK_CHART_FOOTNOTE"]], "qlik_chart_orientation (pyatlan.model.assets.qlikchart attribute)": [[156, "pyatlan.model.assets.QlikChart.QLIK_CHART_ORIENTATION"]], "qlik_chart_subtitle (pyatlan.model.assets.qlikchart attribute)": [[156, "pyatlan.model.assets.QlikChart.QLIK_CHART_SUBTITLE"]], "qlik_chart_type (pyatlan.model.assets.qlikchart attribute)": [[156, "pyatlan.model.assets.QlikChart.QLIK_CHART_TYPE"]], "qlik_sheet (pyatlan.model.assets.qlikchart attribute)": [[156, "pyatlan.model.assets.QlikChart.QLIK_SHEET"]], "qlikchart (class in pyatlan.model.assets)": [[156, "pyatlan.model.assets.QlikChart"]], "qlik_dataset_subtype (pyatlan.model.assets.qlikdataset attribute)": [[157, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_SUBTYPE"]], "qlik_dataset_technical_name (pyatlan.model.assets.qlikdataset attribute)": [[157, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_TECHNICAL_NAME"]], "qlik_dataset_type (pyatlan.model.assets.qlikdataset attribute)": [[157, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_TYPE"]], "qlik_dataset_uri (pyatlan.model.assets.qlikdataset attribute)": [[157, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_URI"]], "qlik_space (pyatlan.model.assets.qlikdataset attribute)": [[157, "pyatlan.model.assets.QlikDataset.QLIK_SPACE"]], "qlikdataset (class in pyatlan.model.assets)": [[157, "pyatlan.model.assets.QlikDataset"]], "qlik_app (pyatlan.model.assets.qliksheet attribute)": [[158, "pyatlan.model.assets.QlikSheet.QLIK_APP"]], "qlik_charts (pyatlan.model.assets.qliksheet attribute)": [[158, "pyatlan.model.assets.QlikSheet.QLIK_CHARTS"]], "qlik_sheet_is_approved (pyatlan.model.assets.qliksheet attribute)": [[158, "pyatlan.model.assets.QlikSheet.QLIK_SHEET_IS_APPROVED"]], "qliksheet (class in pyatlan.model.assets)": [[158, "pyatlan.model.assets.QlikSheet"]], "qlik_apps (pyatlan.model.assets.qlikspace attribute)": [[159, "pyatlan.model.assets.QlikSpace.QLIK_APPS"]], "qlik_datasets (pyatlan.model.assets.qlikspace attribute)": [[159, "pyatlan.model.assets.QlikSpace.QLIK_DATASETS"]], "qlik_space_type (pyatlan.model.assets.qlikspace attribute)": [[159, "pyatlan.model.assets.QlikSpace.QLIK_SPACE_TYPE"]], "qlikspace (class in pyatlan.model.assets)": [[159, "pyatlan.model.assets.QlikSpace"]], "qlikstream (class in pyatlan.model.assets)": [[160, "pyatlan.model.assets.QlikStream"]], "collection_qualified_name (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.COLLECTION_QUALIFIED_NAME"]], "columns (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.COLUMNS"]], "default_database_qualified_name (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.DEFAULT_DATABASE_QUALIFIED_NAME"]], "default_schema_qualified_name (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.DEFAULT_SCHEMA_QUALIFIED_NAME"]], "is_private (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.IS_PRIVATE"]], "is_sql_snippet (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.IS_SQL_SNIPPET"]], "is_visual_query (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.IS_VISUAL_QUERY"]], "long_raw_query (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.LONG_RAW_QUERY"]], "parent (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.PARENT"]], "parent_qualified_name (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.PARENT_QUALIFIED_NAME"]], "query (class in pyatlan.model.assets)": [[161, "pyatlan.model.assets.Query"]], "raw_query (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.RAW_QUERY"]], "raw_query_text (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.RAW_QUERY_TEXT"]], "tables (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.TABLES"]], "variables_schema_base64 (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.VARIABLES_SCHEMA_BASE64"]], "views (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.VIEWS"]], "visual_builder_schema_base64 (pyatlan.model.assets.query attribute)": [[161, "pyatlan.model.assets.Query.VISUAL_BUILDER_SCHEMA_BASE64"]], "quick_sight_id (pyatlan.model.assets.quicksight attribute)": [[162, "pyatlan.model.assets.QuickSight.QUICK_SIGHT_ID"]], "quick_sight_sheet_id (pyatlan.model.assets.quicksight attribute)": [[162, "pyatlan.model.assets.QuickSight.QUICK_SIGHT_SHEET_ID"]], "quick_sight_sheet_name (pyatlan.model.assets.quicksight attribute)": [[162, "pyatlan.model.assets.QuickSight.QUICK_SIGHT_SHEET_NAME"]], "quicksight (class in pyatlan.model.assets)": [[162, "pyatlan.model.assets.QuickSight"]], "quick_sight_analysis_calculated_fields (pyatlan.model.assets.quicksightanalysis attribute)": [[163, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_CALCULATED_FIELDS"]], "quick_sight_analysis_filter_groups (pyatlan.model.assets.quicksightanalysis attribute)": [[163, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_FILTER_GROUPS"]], "quick_sight_analysis_folders (pyatlan.model.assets.quicksightanalysis attribute)": [[163, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_FOLDERS"]], "quick_sight_analysis_parameter_declarations (pyatlan.model.assets.quicksightanalysis attribute)": [[163, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_PARAMETER_DECLARATIONS"]], "quick_sight_analysis_status (pyatlan.model.assets.quicksightanalysis attribute)": [[163, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_STATUS"]], "quick_sight_analysis_visuals (pyatlan.model.assets.quicksightanalysis attribute)": [[163, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_VISUALS"]], "quicksightanalysis (class in pyatlan.model.assets)": [[163, "pyatlan.model.assets.QuickSightAnalysis"]], "quick_sight_analysis (pyatlan.model.assets.quicksightanalysisvisual attribute)": [[164, "pyatlan.model.assets.QuickSightAnalysisVisual.QUICK_SIGHT_ANALYSIS"]], "quick_sight_analysis_qualified_name (pyatlan.model.assets.quicksightanalysisvisual attribute)": [[164, "pyatlan.model.assets.QuickSightAnalysisVisual.QUICK_SIGHT_ANALYSIS_QUALIFIED_NAME"]], "quicksightanalysisvisual (class in pyatlan.model.assets)": [[164, "pyatlan.model.assets.QuickSightAnalysisVisual"]], "quick_sight_dashboard_folders (pyatlan.model.assets.quicksightdashboard attribute)": [[165, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_FOLDERS"]], "quick_sight_dashboard_last_published_time (pyatlan.model.assets.quicksightdashboard attribute)": [[165, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_LAST_PUBLISHED_TIME"]], "quick_sight_dashboard_published_version_number (pyatlan.model.assets.quicksightdashboard attribute)": [[165, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_PUBLISHED_VERSION_NUMBER"]], "quick_sight_dashboard_visuals (pyatlan.model.assets.quicksightdashboard attribute)": [[165, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_VISUALS"]], "quicksightdashboard (class in pyatlan.model.assets)": [[165, "pyatlan.model.assets.QuickSightDashboard"]], "quick_sight_dashboard (pyatlan.model.assets.quicksightdashboardvisual attribute)": [[166, "pyatlan.model.assets.QuickSightDashboardVisual.QUICK_SIGHT_DASHBOARD"]], "quick_sight_dashboard_qualified_name (pyatlan.model.assets.quicksightdashboardvisual attribute)": [[166, "pyatlan.model.assets.QuickSightDashboardVisual.QUICK_SIGHT_DASHBOARD_QUALIFIED_NAME"]], "quicksightdashboardvisual (class in pyatlan.model.assets)": [[166, "pyatlan.model.assets.QuickSightDashboardVisual"]], "quick_sight_dataset_column_count (pyatlan.model.assets.quicksightdataset attribute)": [[167, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_COLUMN_COUNT"]], "quick_sight_dataset_fields (pyatlan.model.assets.quicksightdataset attribute)": [[167, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_FIELDS"]], "quick_sight_dataset_folders (pyatlan.model.assets.quicksightdataset attribute)": [[167, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_FOLDERS"]], "quick_sight_dataset_import_mode (pyatlan.model.assets.quicksightdataset attribute)": [[167, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_IMPORT_MODE"]], "quicksightdataset (class in pyatlan.model.assets)": [[167, "pyatlan.model.assets.QuickSightDataset"]], "quick_sight_dataset (pyatlan.model.assets.quicksightdatasetfield attribute)": [[168, "pyatlan.model.assets.QuickSightDatasetField.QUICK_SIGHT_DATASET"]], "quick_sight_dataset_field_type (pyatlan.model.assets.quicksightdatasetfield attribute)": [[168, "pyatlan.model.assets.QuickSightDatasetField.QUICK_SIGHT_DATASET_FIELD_TYPE"]], "quick_sight_dataset_qualified_name (pyatlan.model.assets.quicksightdatasetfield attribute)": [[168, "pyatlan.model.assets.QuickSightDatasetField.QUICK_SIGHT_DATASET_QUALIFIED_NAME"]], "quicksightdatasetfield (class in pyatlan.model.assets)": [[168, "pyatlan.model.assets.QuickSightDatasetField"]], "quick_sight_analyses (pyatlan.model.assets.quicksightfolder attribute)": [[169, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_ANALYSES"]], "quick_sight_dashboards (pyatlan.model.assets.quicksightfolder attribute)": [[169, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_DASHBOARDS"]], "quick_sight_datasets (pyatlan.model.assets.quicksightfolder attribute)": [[169, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_DATASETS"]], "quick_sight_folder_hierarchy (pyatlan.model.assets.quicksightfolder attribute)": [[169, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_FOLDER_HIERARCHY"]], "quick_sight_folder_type (pyatlan.model.assets.quicksightfolder attribute)": [[169, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_FOLDER_TYPE"]], "quicksightfolder (class in pyatlan.model.assets)": [[169, "pyatlan.model.assets.QuickSightFolder"]], "asset (pyatlan.model.assets.readme attribute)": [[170, "pyatlan.model.assets.Readme.ASSET"]], "readme (class in pyatlan.model.assets)": [[170, "pyatlan.model.assets.Readme"]], "see_also (pyatlan.model.assets.readme attribute)": [[170, "pyatlan.model.assets.Readme.SEE_ALSO"]], "icon (pyatlan.model.assets.readmetemplate attribute)": [[171, "pyatlan.model.assets.ReadmeTemplate.ICON"]], "icon_type (pyatlan.model.assets.readmetemplate attribute)": [[171, "pyatlan.model.assets.ReadmeTemplate.ICON_TYPE"]], "readmetemplate (class in pyatlan.model.assets)": [[171, "pyatlan.model.assets.ReadmeTemplate"]], "redash_is_published (pyatlan.model.assets.redash attribute)": [[172, "pyatlan.model.assets.Redash.REDASH_IS_PUBLISHED"]], "redash (class in pyatlan.model.assets)": [[172, "pyatlan.model.assets.Redash"]], "redash_dashboard_widget_count (pyatlan.model.assets.redashdashboard attribute)": [[173, "pyatlan.model.assets.RedashDashboard.REDASH_DASHBOARD_WIDGET_COUNT"]], "redashdashboard (class in pyatlan.model.assets)": [[173, "pyatlan.model.assets.RedashDashboard"]], "redash_query_last_executed_at (pyatlan.model.assets.redashquery attribute)": [[174, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_LAST_EXECUTED_AT"]], "redash_query_last_execution_runtime (pyatlan.model.assets.redashquery attribute)": [[174, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_LAST_EXECUTION_RUNTIME"]], "redash_query_parameters (pyatlan.model.assets.redashquery attribute)": [[174, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_PARAMETERS"]], "redash_query_schedule (pyatlan.model.assets.redashquery attribute)": [[174, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_SCHEDULE"]], "redash_query_schedule_humanized (pyatlan.model.assets.redashquery attribute)": [[174, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_SCHEDULE_HUMANIZED"]], "redash_query_sql (pyatlan.model.assets.redashquery attribute)": [[174, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_SQL"]], "redash_visualizations (pyatlan.model.assets.redashquery attribute)": [[174, "pyatlan.model.assets.RedashQuery.REDASH_VISUALIZATIONS"]], "redashquery (class in pyatlan.model.assets)": [[174, "pyatlan.model.assets.RedashQuery"]], "redash_query (pyatlan.model.assets.redashvisualization attribute)": [[175, "pyatlan.model.assets.RedashVisualization.REDASH_QUERY"]], "redash_query_name (pyatlan.model.assets.redashvisualization attribute)": [[175, "pyatlan.model.assets.RedashVisualization.REDASH_QUERY_NAME"]], "redash_query_qualified_name (pyatlan.model.assets.redashvisualization attribute)": [[175, "pyatlan.model.assets.RedashVisualization.REDASH_QUERY_QUALIFIED_NAME"]], "redash_visualization_type (pyatlan.model.assets.redashvisualization attribute)": [[175, "pyatlan.model.assets.RedashVisualization.REDASH_VISUALIZATION_TYPE"]], "redashvisualization (class in pyatlan.model.assets)": [[175, "pyatlan.model.assets.RedashVisualization"]], "assigned_terms (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.ASSIGNED_TERMS"]], "atlan_tags (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.ATLAN_TAGS"]], "created_by (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.CREATED_BY"]], "create_time (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.CREATE_TIME"]], "guid (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.GUID"]], "propagated_atlan_tags (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.PROPAGATED_ATLAN_TAGS"]], "qualified_name (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.QUALIFIED_NAME"]], "referenceable (class in pyatlan.model.assets)": [[176, "pyatlan.model.assets.Referenceable"]], "status (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.STATUS"]], "super_type_names (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.SUPER_TYPE_NAMES"]], "type_name (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.TYPE_NAME"]], "updated_by (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.UPDATED_BY"]], "update_time (pyatlan.model.assets.referenceable attribute)": [[176, "pyatlan.model.assets.Referenceable.UPDATE_TIME"]], "can_be_archived() (pyatlan.model.assets.referenceable class method)": [[176, "pyatlan.model.assets.Referenceable.can_be_archived"]], "json() (pyatlan.model.assets.referenceable method)": [[176, "pyatlan.model.assets.Referenceable.json"]], "is_global (pyatlan.model.assets.resource attribute)": [[177, "pyatlan.model.assets.Resource.IS_GLOBAL"]], "link (pyatlan.model.assets.resource attribute)": [[177, "pyatlan.model.assets.Resource.LINK"]], "reference (pyatlan.model.assets.resource attribute)": [[177, "pyatlan.model.assets.Resource.REFERENCE"]], "resource_metadata (pyatlan.model.assets.resource attribute)": [[177, "pyatlan.model.assets.Resource.RESOURCE_METADATA"]], "resource (class in pyatlan.model.assets)": [[177, "pyatlan.model.assets.Resource"]], "aws_account_id (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_ACCOUNT_ID"]], "aws_arn (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_ARN"]], "aws_owner_id (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_OWNER_ID"]], "aws_owner_name (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_OWNER_NAME"]], "aws_partition (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_PARTITION"]], "aws_region (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_REGION"]], "aws_resource_id (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_RESOURCE_ID"]], "aws_service (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_SERVICE"]], "aws_tags (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.AWS_TAGS"]], "s3 (class in pyatlan.model.assets)": [[178, "pyatlan.model.assets.S3"]], "s3encryption (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.S3ENCRYPTION"]], "s3e_tag (pyatlan.model.assets.s3 attribute)": [[178, "pyatlan.model.assets.S3.S3E_TAG"]], "objects (pyatlan.model.assets.s3bucket attribute)": [[179, "pyatlan.model.assets.S3Bucket.OBJECTS"]], "s3bucket_versioning_enabled (pyatlan.model.assets.s3bucket attribute)": [[179, "pyatlan.model.assets.S3Bucket.S3BUCKET_VERSIONING_ENABLED"]], "s3bucket (class in pyatlan.model.assets)": [[179, "pyatlan.model.assets.S3Bucket"]], "s3object_count (pyatlan.model.assets.s3bucket attribute)": [[179, "pyatlan.model.assets.S3Bucket.S3OBJECT_COUNT"]], "bucket (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.BUCKET"]], "s3bucket_name (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3BUCKET_NAME"]], "s3bucket_qualified_name (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3BUCKET_QUALIFIED_NAME"]], "s3object_content_disposition (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3OBJECT_CONTENT_DISPOSITION"]], "s3object_content_type (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3OBJECT_CONTENT_TYPE"]], "s3object_key (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3OBJECT_KEY"]], "s3object_last_modified_time (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3OBJECT_LAST_MODIFIED_TIME"]], "s3object_size (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3OBJECT_SIZE"]], "s3object_storage_class (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3OBJECT_STORAGE_CLASS"]], "s3object_version_id (pyatlan.model.assets.s3object attribute)": [[180, "pyatlan.model.assets.S3Object.S3OBJECT_VERSION_ID"]], "s3object (class in pyatlan.model.assets)": [[180, "pyatlan.model.assets.S3Object"]], "saas (class in pyatlan.model.assets)": [[181, "pyatlan.model.assets.SaaS"]], "api_name (pyatlan.model.assets.salesforce attribute)": [[182, "pyatlan.model.assets.Salesforce.API_NAME"]], "organization_qualified_name (pyatlan.model.assets.salesforce attribute)": [[182, "pyatlan.model.assets.Salesforce.ORGANIZATION_QUALIFIED_NAME"]], "salesforce (class in pyatlan.model.assets)": [[182, "pyatlan.model.assets.Salesforce"]], "dashboard_type (pyatlan.model.assets.salesforcedashboard attribute)": [[183, "pyatlan.model.assets.SalesforceDashboard.DASHBOARD_TYPE"]], "organization (pyatlan.model.assets.salesforcedashboard attribute)": [[183, "pyatlan.model.assets.SalesforceDashboard.ORGANIZATION"]], "reports (pyatlan.model.assets.salesforcedashboard attribute)": [[183, "pyatlan.model.assets.SalesforceDashboard.REPORTS"]], "report_count (pyatlan.model.assets.salesforcedashboard attribute)": [[183, "pyatlan.model.assets.SalesforceDashboard.REPORT_COUNT"]], "source_id (pyatlan.model.assets.salesforcedashboard attribute)": [[183, "pyatlan.model.assets.SalesforceDashboard.SOURCE_ID"]], "salesforcedashboard (class in pyatlan.model.assets)": [[183, "pyatlan.model.assets.SalesforceDashboard"]], "data_type (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.DATA_TYPE"]], "default_value_formula (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.DEFAULT_VALUE_FORMULA"]], "formula (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.FORMULA"]], "inline_help_text (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.INLINE_HELP_TEXT"]], "is_calculated (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.IS_CALCULATED"]], "is_case_sensitive (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.IS_CASE_SENSITIVE"]], "is_encrypted (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.IS_ENCRYPTED"]], "is_nullable (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.IS_NULLABLE"]], "is_polymorphic_foreign_key (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.IS_POLYMORPHIC_FOREIGN_KEY"]], "is_unique (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.IS_UNIQUE"]], "lookup_objects (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.LOOKUP_OBJECTS"]], "max_length (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.MAX_LENGTH"]], "numeric_scale (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.NUMERIC_SCALE"]], "object (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.OBJECT"]], "object_qualified_name (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.OBJECT_QUALIFIED_NAME"]], "order (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.ORDER"]], "picklist_values (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.PICKLIST_VALUES"]], "precision (pyatlan.model.assets.salesforcefield attribute)": [[184, "pyatlan.model.assets.SalesforceField.PRECISION"]], "salesforcefield (class in pyatlan.model.assets)": [[184, "pyatlan.model.assets.SalesforceField"]], "fields (pyatlan.model.assets.salesforceobject attribute)": [[185, "pyatlan.model.assets.SalesforceObject.FIELDS"]], "field_count (pyatlan.model.assets.salesforceobject attribute)": [[185, "pyatlan.model.assets.SalesforceObject.FIELD_COUNT"]], "is_custom (pyatlan.model.assets.salesforceobject attribute)": [[185, "pyatlan.model.assets.SalesforceObject.IS_CUSTOM"]], "is_mergable (pyatlan.model.assets.salesforceobject attribute)": [[185, "pyatlan.model.assets.SalesforceObject.IS_MERGABLE"]], "is_queryable (pyatlan.model.assets.salesforceobject attribute)": [[185, "pyatlan.model.assets.SalesforceObject.IS_QUERYABLE"]], "lookup_fields (pyatlan.model.assets.salesforceobject attribute)": [[185, "pyatlan.model.assets.SalesforceObject.LOOKUP_FIELDS"]], "organization (pyatlan.model.assets.salesforceobject attribute)": [[185, "pyatlan.model.assets.SalesforceObject.ORGANIZATION"]], "salesforceobject (class in pyatlan.model.assets)": [[185, "pyatlan.model.assets.SalesforceObject"]], "dashboards (pyatlan.model.assets.salesforceorganization attribute)": [[186, "pyatlan.model.assets.SalesforceOrganization.DASHBOARDS"]], "objects (pyatlan.model.assets.salesforceorganization attribute)": [[186, "pyatlan.model.assets.SalesforceOrganization.OBJECTS"]], "reports (pyatlan.model.assets.salesforceorganization attribute)": [[186, "pyatlan.model.assets.SalesforceOrganization.REPORTS"]], "source_id (pyatlan.model.assets.salesforceorganization attribute)": [[186, "pyatlan.model.assets.SalesforceOrganization.SOURCE_ID"]], "salesforceorganization (class in pyatlan.model.assets)": [[186, "pyatlan.model.assets.SalesforceOrganization"]], "dashboards (pyatlan.model.assets.salesforcereport attribute)": [[187, "pyatlan.model.assets.SalesforceReport.DASHBOARDS"]], "detail_columns (pyatlan.model.assets.salesforcereport attribute)": [[187, "pyatlan.model.assets.SalesforceReport.DETAIL_COLUMNS"]], "organization (pyatlan.model.assets.salesforcereport attribute)": [[187, "pyatlan.model.assets.SalesforceReport.ORGANIZATION"]], "report_type (pyatlan.model.assets.salesforcereport attribute)": [[187, "pyatlan.model.assets.SalesforceReport.REPORT_TYPE"]], "source_id (pyatlan.model.assets.salesforcereport attribute)": [[187, "pyatlan.model.assets.SalesforceReport.SOURCE_ID"]], "salesforcereport (class in pyatlan.model.assets)": [[187, "pyatlan.model.assets.SalesforceReport"]], "calculation_views (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.CALCULATION_VIEWS"]], "database (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.DATABASE"]], "functions (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.FUNCTIONS"]], "linked_schema_qualified_name (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.LINKED_SCHEMA_QUALIFIED_NAME"]], "materialised_views (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.MATERIALISED_VIEWS"]], "procedures (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.PROCEDURES"]], "snowflake_dynamic_tables (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.SNOWFLAKE_DYNAMIC_TABLES"]], "snowflake_pipes (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.SNOWFLAKE_PIPES"]], "snowflake_streams (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.SNOWFLAKE_STREAMS"]], "snowflake_tags (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.SNOWFLAKE_TAGS"]], "schema (class in pyatlan.model.assets)": [[188, "pyatlan.model.assets.Schema"]], "tables (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.TABLES"]], "table_count (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.TABLE_COUNT"]], "views (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.VIEWS"]], "views_count (pyatlan.model.assets.schema attribute)": [[188, "pyatlan.model.assets.Schema.VIEWS_COUNT"]], "schema_registry_schema_id (pyatlan.model.assets.schemaregistry attribute)": [[189, "pyatlan.model.assets.SchemaRegistry.SCHEMA_REGISTRY_SCHEMA_ID"]], "schema_registry_schema_type (pyatlan.model.assets.schemaregistry attribute)": [[189, "pyatlan.model.assets.SchemaRegistry.SCHEMA_REGISTRY_SCHEMA_TYPE"]], "schemaregistry (class in pyatlan.model.assets)": [[189, "pyatlan.model.assets.SchemaRegistry"]], "assets (pyatlan.model.assets.schemaregistrysubject attribute)": [[190, "pyatlan.model.assets.SchemaRegistrySubject.ASSETS"]], "schema_registry_subject_base_name (pyatlan.model.assets.schemaregistrysubject attribute)": [[190, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_BASE_NAME"]], "schema_registry_subject_governing_asset_qualified_names (pyatlan.model.assets.schemaregistrysubject attribute)": [[190, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_GOVERNING_ASSET_QUALIFIED_NAMES"]], "schema_registry_subject_is_key_schema (pyatlan.model.assets.schemaregistrysubject attribute)": [[190, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_IS_KEY_SCHEMA"]], "schema_registry_subject_latest_schema_definition (pyatlan.model.assets.schemaregistrysubject attribute)": [[190, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_DEFINITION"]], "schema_registry_subject_latest_schema_version (pyatlan.model.assets.schemaregistrysubject attribute)": [[190, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_VERSION"]], "schema_registry_subject_schema_compatibility (pyatlan.model.assets.schemaregistrysubject attribute)": [[190, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_SCHEMA_COMPATIBILITY"]], "schemaregistrysubject (class in pyatlan.model.assets)": [[190, "pyatlan.model.assets.SchemaRegistrySubject"]], "sigma_data_element_name (pyatlan.model.assets.sigma attribute)": [[191, "pyatlan.model.assets.Sigma.SIGMA_DATA_ELEMENT_NAME"]], "sigma_data_element_qualified_name (pyatlan.model.assets.sigma attribute)": [[191, "pyatlan.model.assets.Sigma.SIGMA_DATA_ELEMENT_QUALIFIED_NAME"]], "sigma_page_name (pyatlan.model.assets.sigma attribute)": [[191, "pyatlan.model.assets.Sigma.SIGMA_PAGE_NAME"]], "sigma_page_qualified_name (pyatlan.model.assets.sigma attribute)": [[191, "pyatlan.model.assets.Sigma.SIGMA_PAGE_QUALIFIED_NAME"]], "sigma_workbook_name (pyatlan.model.assets.sigma attribute)": [[191, "pyatlan.model.assets.Sigma.SIGMA_WORKBOOK_NAME"]], "sigma_workbook_qualified_name (pyatlan.model.assets.sigma attribute)": [[191, "pyatlan.model.assets.Sigma.SIGMA_WORKBOOK_QUALIFIED_NAME"]], "sigma (class in pyatlan.model.assets)": [[191, "pyatlan.model.assets.Sigma"]], "sigma_data_element_fields (pyatlan.model.assets.sigmadataelement attribute)": [[192, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_FIELDS"]], "sigma_data_element_field_count (pyatlan.model.assets.sigmadataelement attribute)": [[192, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_FIELD_COUNT"]], "sigma_data_element_query (pyatlan.model.assets.sigmadataelement attribute)": [[192, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_QUERY"]], "sigma_data_element_type (pyatlan.model.assets.sigmadataelement attribute)": [[192, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_TYPE"]], "sigma_page (pyatlan.model.assets.sigmadataelement attribute)": [[192, "pyatlan.model.assets.SigmaDataElement.SIGMA_PAGE"]], "sigmadataelement (class in pyatlan.model.assets)": [[192, "pyatlan.model.assets.SigmaDataElement"]], "sigma_data_element (pyatlan.model.assets.sigmadataelementfield attribute)": [[193, "pyatlan.model.assets.SigmaDataElementField.SIGMA_DATA_ELEMENT"]], "sigma_data_element_field_formula (pyatlan.model.assets.sigmadataelementfield attribute)": [[193, "pyatlan.model.assets.SigmaDataElementField.SIGMA_DATA_ELEMENT_FIELD_FORMULA"]], "sigma_data_element_field_is_hidden (pyatlan.model.assets.sigmadataelementfield attribute)": [[193, "pyatlan.model.assets.SigmaDataElementField.SIGMA_DATA_ELEMENT_FIELD_IS_HIDDEN"]], "sigmadataelementfield (class in pyatlan.model.assets)": [[193, "pyatlan.model.assets.SigmaDataElementField"]], "sigma_dataset_columns (pyatlan.model.assets.sigmadataset attribute)": [[194, "pyatlan.model.assets.SigmaDataset.SIGMA_DATASET_COLUMNS"]], "sigma_dataset_column_count (pyatlan.model.assets.sigmadataset attribute)": [[194, "pyatlan.model.assets.SigmaDataset.SIGMA_DATASET_COLUMN_COUNT"]], "sigmadataset (class in pyatlan.model.assets)": [[194, "pyatlan.model.assets.SigmaDataset"]], "sigma_dataset (pyatlan.model.assets.sigmadatasetcolumn attribute)": [[195, "pyatlan.model.assets.SigmaDatasetColumn.SIGMA_DATASET"]], "sigma_dataset_name (pyatlan.model.assets.sigmadatasetcolumn attribute)": [[195, "pyatlan.model.assets.SigmaDatasetColumn.SIGMA_DATASET_NAME"]], "sigma_dataset_qualified_name (pyatlan.model.assets.sigmadatasetcolumn attribute)": [[195, "pyatlan.model.assets.SigmaDatasetColumn.SIGMA_DATASET_QUALIFIED_NAME"]], "sigmadatasetcolumn (class in pyatlan.model.assets)": [[195, "pyatlan.model.assets.SigmaDatasetColumn"]], "sigma_data_elements (pyatlan.model.assets.sigmapage attribute)": [[196, "pyatlan.model.assets.SigmaPage.SIGMA_DATA_ELEMENTS"]], "sigma_data_element_count (pyatlan.model.assets.sigmapage attribute)": [[196, "pyatlan.model.assets.SigmaPage.SIGMA_DATA_ELEMENT_COUNT"]], "sigma_workbook (pyatlan.model.assets.sigmapage attribute)": [[196, "pyatlan.model.assets.SigmaPage.SIGMA_WORKBOOK"]], "sigmapage (class in pyatlan.model.assets)": [[196, "pyatlan.model.assets.SigmaPage"]], "sigma_pages (pyatlan.model.assets.sigmaworkbook attribute)": [[197, "pyatlan.model.assets.SigmaWorkbook.SIGMA_PAGES"]], "sigma_page_count (pyatlan.model.assets.sigmaworkbook attribute)": [[197, "pyatlan.model.assets.SigmaWorkbook.SIGMA_PAGE_COUNT"]], "sigmaworkbook (class in pyatlan.model.assets)": [[197, "pyatlan.model.assets.SigmaWorkbook"]], "sisense (class in pyatlan.model.assets)": [[198, "pyatlan.model.assets.Sisense"]], "sisense_dashboard_folder_qualified_name (pyatlan.model.assets.sisensedashboard attribute)": [[199, "pyatlan.model.assets.SisenseDashboard.SISENSE_DASHBOARD_FOLDER_QUALIFIED_NAME"]], "sisense_dashboard_widget_count (pyatlan.model.assets.sisensedashboard attribute)": [[199, "pyatlan.model.assets.SisenseDashboard.SISENSE_DASHBOARD_WIDGET_COUNT"]], "sisense_datamodels (pyatlan.model.assets.sisensedashboard attribute)": [[199, "pyatlan.model.assets.SisenseDashboard.SISENSE_DATAMODELS"]], "sisense_folder (pyatlan.model.assets.sisensedashboard attribute)": [[199, "pyatlan.model.assets.SisenseDashboard.SISENSE_FOLDER"]], "sisense_widgets (pyatlan.model.assets.sisensedashboard attribute)": [[199, "pyatlan.model.assets.SisenseDashboard.SISENSE_WIDGETS"]], "sisensedashboard (class in pyatlan.model.assets)": [[199, "pyatlan.model.assets.SisenseDashboard"]], "sisense_dashboards (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DASHBOARDS"]], "sisense_datamodel_last_build_time (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_LAST_BUILD_TIME"]], "sisense_datamodel_last_publish_time (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_LAST_PUBLISH_TIME"]], "sisense_datamodel_last_successful_build_time (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_LAST_SUCCESSFUL_BUILD_TIME"]], "sisense_datamodel_relation_type (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_RELATION_TYPE"]], "sisense_datamodel_revision (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_REVISION"]], "sisense_datamodel_server (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_SERVER"]], "sisense_datamodel_tables (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_TABLES"]], "sisense_datamodel_table_count (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_TABLE_COUNT"]], "sisense_datamodel_type (pyatlan.model.assets.sisensedatamodel attribute)": [[200, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_TYPE"]], "sisensedatamodel (class in pyatlan.model.assets)": [[200, "pyatlan.model.assets.SisenseDatamodel"]], "sisense_datamodel (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL"]], "sisense_datamodel_qualified_name (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_QUALIFIED_NAME"]], "sisense_datamodel_table_column_count (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_COLUMN_COUNT"]], "sisense_datamodel_table_expression (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_EXPRESSION"]], "sisense_datamodel_table_is_hidden (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_IS_HIDDEN"]], "sisense_datamodel_table_is_materialized (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_IS_MATERIALIZED"]], "sisense_datamodel_table_live_query_settings (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_LIVE_QUERY_SETTINGS"]], "sisense_datamodel_table_schedule (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_SCHEDULE"]], "sisense_datamodel_table_type (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_TYPE"]], "sisense_widgets (pyatlan.model.assets.sisensedatamodeltable attribute)": [[201, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_WIDGETS"]], "sisensedatamodeltable (class in pyatlan.model.assets)": [[201, "pyatlan.model.assets.SisenseDatamodelTable"]], "sisense_child_folders (pyatlan.model.assets.sisensefolder attribute)": [[202, "pyatlan.model.assets.SisenseFolder.SISENSE_CHILD_FOLDERS"]], "sisense_dashboards (pyatlan.model.assets.sisensefolder attribute)": [[202, "pyatlan.model.assets.SisenseFolder.SISENSE_DASHBOARDS"]], "sisense_folder_parent_folder_qualified_name (pyatlan.model.assets.sisensefolder attribute)": [[202, "pyatlan.model.assets.SisenseFolder.SISENSE_FOLDER_PARENT_FOLDER_QUALIFIED_NAME"]], "sisense_parent_folder (pyatlan.model.assets.sisensefolder attribute)": [[202, "pyatlan.model.assets.SisenseFolder.SISENSE_PARENT_FOLDER"]], "sisense_widgets (pyatlan.model.assets.sisensefolder attribute)": [[202, "pyatlan.model.assets.SisenseFolder.SISENSE_WIDGETS"]], "sisensefolder (class in pyatlan.model.assets)": [[202, "pyatlan.model.assets.SisenseFolder"]], "sisense_dashboard (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_DASHBOARD"]], "sisense_datamodel_tables (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_DATAMODEL_TABLES"]], "sisense_folder (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_FOLDER"]], "sisense_widget_column_count (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_COLUMN_COUNT"]], "sisense_widget_dashboard_qualified_name (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_DASHBOARD_QUALIFIED_NAME"]], "sisense_widget_folder_qualified_name (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_FOLDER_QUALIFIED_NAME"]], "sisense_widget_size (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_SIZE"]], "sisense_widget_sub_type (pyatlan.model.assets.sisensewidget attribute)": [[203, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_SUB_TYPE"]], "sisensewidget (class in pyatlan.model.assets)": [[203, "pyatlan.model.assets.SisenseWidget"]], "definition (pyatlan.model.assets.snowflakedynamictable attribute)": [[204, "pyatlan.model.assets.SnowflakeDynamicTable.DEFINITION"]], "snowflakedynamictable (class in pyatlan.model.assets)": [[204, "pyatlan.model.assets.SnowflakeDynamicTable"]], "atlan_schema (pyatlan.model.assets.snowflakepipe attribute)": [[205, "pyatlan.model.assets.SnowflakePipe.ATLAN_SCHEMA"]], "definition (pyatlan.model.assets.snowflakepipe attribute)": [[205, "pyatlan.model.assets.SnowflakePipe.DEFINITION"]], "snowflake_pipe_is_auto_ingest_enabled (pyatlan.model.assets.snowflakepipe attribute)": [[205, "pyatlan.model.assets.SnowflakePipe.SNOWFLAKE_PIPE_IS_AUTO_INGEST_ENABLED"]], "snowflake_pipe_notification_channel_name (pyatlan.model.assets.snowflakepipe attribute)": [[205, "pyatlan.model.assets.SnowflakePipe.SNOWFLAKE_PIPE_NOTIFICATION_CHANNEL_NAME"]], "snowflakepipe (class in pyatlan.model.assets)": [[205, "pyatlan.model.assets.SnowflakePipe"]], "atlan_schema (pyatlan.model.assets.snowflakestream attribute)": [[206, "pyatlan.model.assets.SnowflakeStream.ATLAN_SCHEMA"]], "snowflake_stream_is_stale (pyatlan.model.assets.snowflakestream attribute)": [[206, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_IS_STALE"]], "snowflake_stream_mode (pyatlan.model.assets.snowflakestream attribute)": [[206, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_MODE"]], "snowflake_stream_source_type (pyatlan.model.assets.snowflakestream attribute)": [[206, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_SOURCE_TYPE"]], "snowflake_stream_stale_after (pyatlan.model.assets.snowflakestream attribute)": [[206, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_STALE_AFTER"]], "snowflake_stream_type (pyatlan.model.assets.snowflakestream attribute)": [[206, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_TYPE"]], "snowflakestream (class in pyatlan.model.assets)": [[206, "pyatlan.model.assets.SnowflakeStream"]], "atlan_schema (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.ATLAN_SCHEMA"]], "calculation_view_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.CALCULATION_VIEW_QUALIFIED_NAME"]], "database_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.DATABASE_QUALIFIED_NAME"]], "dbt_models (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.DBT_MODELS"]], "dbt_sources (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.DBT_SOURCES"]], "dbt_tests (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.DBT_TESTS"]], "is_profiled (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.IS_PROFILED"]], "last_profiled_at (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.LAST_PROFILED_AT"]], "mapped_classification_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.MAPPED_CLASSIFICATION_NAME"]], "query_count (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.QUERY_COUNT_UPDATED_AT"]], "query_user_count (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.QUERY_USER_MAP"]], "schema_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.SCHEMA_QUALIFIED_NAME"]], "sql_dbt_models (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.SQL_DBT_MODELS"]], "sql_dbt_sources (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.SQL_DBT_SOURCES"]], "snowflaketag (class in pyatlan.model.assets)": [[207, "pyatlan.model.assets.SnowflakeTag"]], "table_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.TABLE_QUALIFIED_NAME"]], "tag_allowed_values (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.TAG_ALLOWED_VALUES"]], "tag_attributes (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.TAG_ATTRIBUTES"]], "tag_id (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.TAG_ID"]], "view_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[207, "pyatlan.model.assets.SnowflakeTag.VIEW_QUALIFIED_NAME"]], "soda (class in pyatlan.model.assets)": [[208, "pyatlan.model.assets.Soda"]], "soda_check_assets (pyatlan.model.assets.sodacheck attribute)": [[209, "pyatlan.model.assets.SodaCheck.SODA_CHECK_ASSETS"]], "soda_check_columns (pyatlan.model.assets.sodacheck attribute)": [[209, "pyatlan.model.assets.SodaCheck.SODA_CHECK_COLUMNS"]], "soda_check_definition (pyatlan.model.assets.sodacheck attribute)": [[209, "pyatlan.model.assets.SodaCheck.SODA_CHECK_DEFINITION"]], "soda_check_evaluation_status (pyatlan.model.assets.sodacheck attribute)": [[209, "pyatlan.model.assets.SodaCheck.SODA_CHECK_EVALUATION_STATUS"]], "soda_check_id (pyatlan.model.assets.sodacheck attribute)": [[209, "pyatlan.model.assets.SodaCheck.SODA_CHECK_ID"]], "soda_check_incident_count (pyatlan.model.assets.sodacheck attribute)": [[209, "pyatlan.model.assets.SodaCheck.SODA_CHECK_INCIDENT_COUNT"]], "soda_check_last_scan_at (pyatlan.model.assets.sodacheck attribute)": [[209, "pyatlan.model.assets.SodaCheck.SODA_CHECK_LAST_SCAN_AT"]], "sodacheck (class in pyatlan.model.assets)": [[209, "pyatlan.model.assets.SodaCheck"]], "spark_run_end_time (pyatlan.model.assets.spark attribute)": [[210, "pyatlan.model.assets.Spark.SPARK_RUN_END_TIME"]], "spark_run_open_lineage_state (pyatlan.model.assets.spark attribute)": [[210, "pyatlan.model.assets.Spark.SPARK_RUN_OPEN_LINEAGE_STATE"]], "spark_run_open_lineage_version (pyatlan.model.assets.spark attribute)": [[210, "pyatlan.model.assets.Spark.SPARK_RUN_OPEN_LINEAGE_VERSION"]], "spark_run_start_time (pyatlan.model.assets.spark attribute)": [[210, "pyatlan.model.assets.Spark.SPARK_RUN_START_TIME"]], "spark_run_version (pyatlan.model.assets.spark attribute)": [[210, "pyatlan.model.assets.Spark.SPARK_RUN_VERSION"]], "spark (class in pyatlan.model.assets)": [[210, "pyatlan.model.assets.Spark"]], "inputs (pyatlan.model.assets.sparkjob attribute)": [[211, "pyatlan.model.assets.SparkJob.INPUTS"]], "outputs (pyatlan.model.assets.sparkjob attribute)": [[211, "pyatlan.model.assets.SparkJob.OUTPUTS"]], "process (pyatlan.model.assets.sparkjob attribute)": [[211, "pyatlan.model.assets.SparkJob.PROCESS"]], "spark_app_name (pyatlan.model.assets.sparkjob attribute)": [[211, "pyatlan.model.assets.SparkJob.SPARK_APP_NAME"]], "spark_master (pyatlan.model.assets.sparkjob attribute)": [[211, "pyatlan.model.assets.SparkJob.SPARK_MASTER"]], "sparkjob (class in pyatlan.model.assets)": [[211, "pyatlan.model.assets.SparkJob"]], "calculation_view_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.CALCULATION_VIEW_QUALIFIED_NAME"]], "database_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.DATABASE_QUALIFIED_NAME"]], "dbt_models (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.DBT_MODELS"]], "dbt_sources (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.DBT_SOURCES"]], "dbt_tests (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.DBT_TESTS"]], "is_profiled (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.IS_PROFILED"]], "last_profiled_at (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.LAST_PROFILED_AT"]], "query_count (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.QUERY_COUNT_UPDATED_AT"]], "query_user_count (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.QUERY_USER_MAP"]], "schema_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.SCHEMA_QUALIFIED_NAME"]], "sql (class in pyatlan.model.assets)": [[212, "pyatlan.model.assets.SQL"]], "sql_dbt_models (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.SQL_DBT_MODELS"]], "sql_dbt_sources (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.SQL_DBT_SOURCES"]], "table_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.sql attribute)": [[212, "pyatlan.model.assets.SQL.VIEW_QUALIFIED_NAME"]], "alias (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.ALIAS"]], "atlan_schema (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.ATLAN_SCHEMA"]], "columns (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.COLUMNS"]], "column_count (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.COLUMN_COUNT"]], "dimensions (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.DIMENSIONS"]], "external_location (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.EXTERNAL_LOCATION_REGION"]], "facts (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.FACTS"]], "is_partitioned (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.IS_PARTITIONED"]], "is_query_preview (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.IS_TEMPORARY"]], "partitions (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.PARTITIONS"]], "partition_count (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.PARTITION_STRATEGY"]], "queries (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.QUERIES"]], "query_preview_config (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.QUERY_PREVIEW_CONFIG"]], "row_count (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.table attribute)": [[213, "pyatlan.model.assets.Table.SIZE_BYTES"]], "table (class in pyatlan.model.assets)": [[213, "pyatlan.model.assets.Table"]], "tableau (class in pyatlan.model.assets)": [[214, "pyatlan.model.assets.Tableau"]], "datasource (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.DATASOURCE"]], "datasource_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.DATASOURCE_QUALIFIED_NAME"]], "data_category (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.DATA_CATEGORY"]], "formula (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.FORMULA"]], "project_hierarchy (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.PROJECT_QUALIFIED_NAME"]], "role (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.ROLE"]], "site_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.SITE_QUALIFIED_NAME"]], "tableau_data_type (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.TABLEAU_DATA_TYPE"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaucalculatedfield (class in pyatlan.model.assets)": [[215, "pyatlan.model.assets.TableauCalculatedField"]], "upstream_fields (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.UPSTREAM_FIELDS"]], "workbook_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.WORKBOOK_QUALIFIED_NAME"]], "worksheets (pyatlan.model.assets.tableaucalculatedfield attribute)": [[215, "pyatlan.model.assets.TableauCalculatedField.WORKSHEETS"]], "project_hierarchy (pyatlan.model.assets.tableaudashboard attribute)": [[216, "pyatlan.model.assets.TableauDashboard.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[216, "pyatlan.model.assets.TableauDashboard.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[216, "pyatlan.model.assets.TableauDashboard.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[216, "pyatlan.model.assets.TableauDashboard.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaudashboard (class in pyatlan.model.assets)": [[216, "pyatlan.model.assets.TableauDashboard"]], "workbook (pyatlan.model.assets.tableaudashboard attribute)": [[216, "pyatlan.model.assets.TableauDashboard.WORKBOOK"]], "workbook_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[216, "pyatlan.model.assets.TableauDashboard.WORKBOOK_QUALIFIED_NAME"]], "worksheets (pyatlan.model.assets.tableaudashboard attribute)": [[216, "pyatlan.model.assets.TableauDashboard.WORKSHEETS"]], "certification_note (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.CERTIFICATION_NOTE"]], "certifier (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.CERTIFIER"]], "certifier_display_name (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.CERTIFIER_DISPLAY_NAME"]], "fields (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.FIELDS"]], "has_extracts (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.HAS_EXTRACTS"]], "is_certified (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.IS_CERTIFIED"]], "is_published (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.IS_PUBLISHED"]], "project (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaudatasource (class in pyatlan.model.assets)": [[217, "pyatlan.model.assets.TableauDatasource"]], "upstream_datasources (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.UPSTREAM_DATASOURCES"]], "upstream_tables (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.UPSTREAM_TABLES"]], "workbook (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.WORKBOOK"]], "workbook_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[217, "pyatlan.model.assets.TableauDatasource.WORKBOOK_QUALIFIED_NAME"]], "datasource (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.DATASOURCE"]], "datasource_field_type (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.DATASOURCE_FIELD_TYPE"]], "datasource_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.DATASOURCE_QUALIFIED_NAME"]], "fully_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.FULLY_QUALIFIED_NAME"]], "project_hierarchy (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.SITE_QUALIFIED_NAME"]], "tableau_datasource_field_bin_size (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_BIN_SIZE"]], "tableau_datasource_field_data_category (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_DATA_CATEGORY"]], "tableau_datasource_field_data_type (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_DATA_TYPE"]], "tableau_datasource_field_formula (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_FORMULA"]], "tableau_datasource_field_role (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_ROLE"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaudatasourcefield (class in pyatlan.model.assets)": [[218, "pyatlan.model.assets.TableauDatasourceField"]], "upstream_columns (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.UPSTREAM_COLUMNS"]], "upstream_fields (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.UPSTREAM_FIELDS"]], "upstream_tables (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.UPSTREAM_TABLES"]], "workbook_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.WORKBOOK_QUALIFIED_NAME"]], "worksheets (pyatlan.model.assets.tableaudatasourcefield attribute)": [[218, "pyatlan.model.assets.TableauDatasourceField.WORKSHEETS"]], "input_fields (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.INPUT_FIELDS"]], "output_fields (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.OUTPUT_FIELDS"]], "output_steps (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.OUTPUT_STEPS"]], "project (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauflow attribute)": [[219, "pyatlan.model.assets.TableauFlow.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauflow (class in pyatlan.model.assets)": [[219, "pyatlan.model.assets.TableauFlow"]], "project (pyatlan.model.assets.tableaumetric attribute)": [[220, "pyatlan.model.assets.TableauMetric.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableaumetric attribute)": [[220, "pyatlan.model.assets.TableauMetric.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaumetric attribute)": [[220, "pyatlan.model.assets.TableauMetric.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaumetric attribute)": [[220, "pyatlan.model.assets.TableauMetric.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaumetric attribute)": [[220, "pyatlan.model.assets.TableauMetric.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaumetric (class in pyatlan.model.assets)": [[220, "pyatlan.model.assets.TableauMetric"]], "child_projects (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.CHILD_PROJECTS"]], "datasources (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.DATASOURCES"]], "flows (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.FLOWS"]], "is_top_level_project (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.IS_TOP_LEVEL_PROJECT"]], "parent_project (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.PARENT_PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.PROJECT_HIERARCHY"]], "site (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.SITE"]], "site_qualified_name (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauproject (class in pyatlan.model.assets)": [[221, "pyatlan.model.assets.TableauProject"]], "workbooks (pyatlan.model.assets.tableauproject attribute)": [[221, "pyatlan.model.assets.TableauProject.WORKBOOKS"]], "projects (pyatlan.model.assets.tableausite attribute)": [[222, "pyatlan.model.assets.TableauSite.PROJECTS"]], "tableausite (class in pyatlan.model.assets)": [[222, "pyatlan.model.assets.TableauSite"]], "dashboards (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.DASHBOARDS"]], "datasources (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.DATASOURCES"]], "project (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.SITE_QUALIFIED_NAME"]], "top_level_project_name (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.TOP_LEVEL_PROJECT_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauworkbook (class in pyatlan.model.assets)": [[223, "pyatlan.model.assets.TableauWorkbook"]], "worksheets (pyatlan.model.assets.tableauworkbook attribute)": [[223, "pyatlan.model.assets.TableauWorkbook.WORKSHEETS"]], "calculated_fields (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.CALCULATED_FIELDS"]], "dashboards (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.DASHBOARDS"]], "datasource_fields (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.DATASOURCE_FIELDS"]], "project_hierarchy (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauworksheet (class in pyatlan.model.assets)": [[224, "pyatlan.model.assets.TableauWorksheet"]], "workbook (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.WORKBOOK"]], "workbook_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[224, "pyatlan.model.assets.TableauWorksheet.WORKBOOK_QUALIFIED_NAME"]], "alias (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.ALIAS"]], "child_table_partitions (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.CHILD_TABLE_PARTITIONS"]], "columns (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.COLUMNS"]], "column_count (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.COLUMN_COUNT"]], "constraint (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.CONSTRAINT"]], "external_location (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.IS_PARTITIONED"]], "is_query_preview (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.IS_QUERY_PREVIEW"]], "is_temporary (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.IS_TEMPORARY"]], "parent_table (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.PARENT_TABLE"]], "parent_table_partition (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.PARENT_TABLE_PARTITION"]], "partition_count (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.PARTITION_STRATEGY"]], "query_preview_config (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.QUERY_PREVIEW_CONFIG"]], "row_count (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.tablepartition attribute)": [[225, "pyatlan.model.assets.TablePartition.SIZE_BYTES"]], "tablepartition (class in pyatlan.model.assets)": [[225, "pyatlan.model.assets.TablePartition"]], "mapped_classification_name (pyatlan.model.assets.tag attribute)": [[226, "pyatlan.model.assets.Tag.MAPPED_CLASSIFICATION_NAME"]], "tag_allowed_values (pyatlan.model.assets.tag attribute)": [[226, "pyatlan.model.assets.Tag.TAG_ALLOWED_VALUES"]], "tag_attributes (pyatlan.model.assets.tag attribute)": [[226, "pyatlan.model.assets.Tag.TAG_ATTRIBUTES"]], "tag_id (pyatlan.model.assets.tag attribute)": [[226, "pyatlan.model.assets.Tag.TAG_ID"]], "tag (class in pyatlan.model.assets)": [[226, "pyatlan.model.assets.Tag"]], "tag_attachment_string_value (pyatlan.model.assets.tagattachment attribute)": [[227, "pyatlan.model.assets.TagAttachment.TAG_ATTACHMENT_STRING_VALUE"]], "tag_qualified_name (pyatlan.model.assets.tagattachment attribute)": [[227, "pyatlan.model.assets.TagAttachment.TAG_QUALIFIED_NAME"]], "tagattachment (class in pyatlan.model.assets)": [[227, "pyatlan.model.assets.TagAttachment"]], "thoughtspot_chart_type (pyatlan.model.assets.thoughtspot attribute)": [[228, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_CHART_TYPE"]], "thoughtspot_column_count (pyatlan.model.assets.thoughtspot attribute)": [[228, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_COLUMN_COUNT"]], "thoughtspot_join_count (pyatlan.model.assets.thoughtspot attribute)": [[228, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_JOIN_COUNT"]], "thoughtspot_question_text (pyatlan.model.assets.thoughtspot attribute)": [[228, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_QUESTION_TEXT"]], "thoughtspot (class in pyatlan.model.assets)": [[228, "pyatlan.model.assets.Thoughtspot"]], "thoughtspotanswer (class in pyatlan.model.assets)": [[229, "pyatlan.model.assets.ThoughtspotAnswer"]], "thoughtspot_column_data_type (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_COLUMN_DATA_TYPE"]], "thoughtspot_column_type (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_COLUMN_TYPE"]], "thoughtspot_table (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_TABLE"]], "thoughtspot_table_qualified_name (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_TABLE_QUALIFIED_NAME"]], "thoughtspot_view (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_VIEW"]], "thoughtspot_view_qualified_name (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_VIEW_QUALIFIED_NAME"]], "thoughtspot_worksheet (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_WORKSHEET"]], "thoughtspot_worksheet_qualified_name (pyatlan.model.assets.thoughtspotcolumn attribute)": [[230, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_WORKSHEET_QUALIFIED_NAME"]], "thoughtspotcolumn (class in pyatlan.model.assets)": [[230, "pyatlan.model.assets.ThoughtspotColumn"]], "thoughtspot_liveboard (pyatlan.model.assets.thoughtspotdashlet attribute)": [[231, "pyatlan.model.assets.ThoughtspotDashlet.THOUGHTSPOT_LIVEBOARD"]], "thoughtspot_liveboard_name (pyatlan.model.assets.thoughtspotdashlet attribute)": [[231, "pyatlan.model.assets.ThoughtspotDashlet.THOUGHTSPOT_LIVEBOARD_NAME"]], "thoughtspot_liveboard_qualified_name (pyatlan.model.assets.thoughtspotdashlet attribute)": [[231, "pyatlan.model.assets.ThoughtspotDashlet.THOUGHTSPOT_LIVEBOARD_QUALIFIED_NAME"]], "thoughtspotdashlet (class in pyatlan.model.assets)": [[231, "pyatlan.model.assets.ThoughtspotDashlet"]], "thoughtspot_dashlets (pyatlan.model.assets.thoughtspotliveboard attribute)": [[232, "pyatlan.model.assets.ThoughtspotLiveboard.THOUGHTSPOT_DASHLETS"]], "thoughtspotliveboard (class in pyatlan.model.assets)": [[232, "pyatlan.model.assets.ThoughtspotLiveboard"]], "thoughtspot_columns (pyatlan.model.assets.thoughtspottable attribute)": [[233, "pyatlan.model.assets.ThoughtspotTable.THOUGHTSPOT_COLUMNS"]], "thoughtspottable (class in pyatlan.model.assets)": [[233, "pyatlan.model.assets.ThoughtspotTable"]], "thoughtspot_columns (pyatlan.model.assets.thoughtspotview attribute)": [[234, "pyatlan.model.assets.ThoughtspotView.THOUGHTSPOT_COLUMNS"]], "thoughtspotview (class in pyatlan.model.assets)": [[234, "pyatlan.model.assets.ThoughtspotView"]], "thoughtspot_columns (pyatlan.model.assets.thoughtspotworksheet attribute)": [[235, "pyatlan.model.assets.ThoughtspotWorksheet.THOUGHTSPOT_COLUMNS"]], "thoughtspotworksheet (class in pyatlan.model.assets)": [[235, "pyatlan.model.assets.ThoughtspotWorksheet"]], "alias (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.ALIAS"]], "atlan_schema (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.ATLAN_SCHEMA"]], "columns (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.COLUMNS"]], "column_count (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.COLUMN_COUNT"]], "definition (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.DEFINITION"]], "is_query_preview (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.IS_QUERY_PREVIEW"]], "is_temporary (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.IS_TEMPORARY"]], "queries (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.QUERIES"]], "query_preview_config (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.QUERY_PREVIEW_CONFIG"]], "row_count (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.view attribute)": [[236, "pyatlan.model.assets.View.SIZE_BYTES"]], "view (class in pyatlan.model.assets)": [[236, "pyatlan.model.assets.View"]], "atlantagcache (class in pyatlan.cache.atlan_tag_cache)": [[238, "pyatlan.cache.atlan_tag_cache.AtlanTagCache"]], "get_id_for_name() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[238, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[238, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.get_name_for_id"]], "get_source_tags_attr_id() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[238, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.get_source_tags_attr_id"]], "refresh_cache() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[238, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.refresh_cache"]], "custommetadatacache (class in pyatlan.cache.custom_metadata_cache)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache"]], "get_all_custom_attributes() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_all_custom_attributes"]], "get_attr_id_for_name() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attr_id_for_name"]], "get_attr_name_for_id() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attr_name_for_id"]], "get_attribute_def() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attribute_def"]], "get_attribute_for_search_results() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attribute_for_search_results"]], "get_attributes_for_search_results() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attributes_for_search_results"]], "get_custom_metadata_def() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_custom_metadata_def"]], "get_id_for_name() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_name_for_id"]], "is_attr_archived() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.is_attr_archived"]], "refresh_cache() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[239, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.refresh_cache"]], "enumcache (class in pyatlan.cache.enum_cache)": [[240, "pyatlan.cache.enum_cache.EnumCache"]], "get_by_name() (pyatlan.cache.enum_cache.enumcache class method)": [[240, "pyatlan.cache.enum_cache.EnumCache.get_by_name"]], "refresh_cache() (pyatlan.cache.enum_cache.enumcache class method)": [[240, "pyatlan.cache.enum_cache.EnumCache.refresh_cache"]], "groupcache (class in pyatlan.cache.group_cache)": [[241, "pyatlan.cache.group_cache.GroupCache"]], "get_id_for_alias() (pyatlan.cache.group_cache.groupcache class method)": [[241, "pyatlan.cache.group_cache.GroupCache.get_id_for_alias"]], "get_id_for_name() (pyatlan.cache.group_cache.groupcache class method)": [[241, "pyatlan.cache.group_cache.GroupCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.group_cache.groupcache class method)": [[241, "pyatlan.cache.group_cache.GroupCache.get_name_for_id"]], "validate_aliases() (pyatlan.cache.group_cache.groupcache class method)": [[241, "pyatlan.cache.group_cache.GroupCache.validate_aliases"]], "rolecache (class in pyatlan.cache.role_cache)": [[242, "pyatlan.cache.role_cache.RoleCache"]], "get_id_for_name() (pyatlan.cache.role_cache.rolecache class method)": [[242, "pyatlan.cache.role_cache.RoleCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.role_cache.rolecache class method)": [[242, "pyatlan.cache.role_cache.RoleCache.get_name_for_id"]], "validate_idstrs() (pyatlan.cache.role_cache.rolecache class method)": [[242, "pyatlan.cache.role_cache.RoleCache.validate_idstrs"]], "usercache (class in pyatlan.cache.user_cache)": [[243, "pyatlan.cache.user_cache.UserCache"]], "get_id_for_email() (pyatlan.cache.user_cache.usercache class method)": [[243, "pyatlan.cache.user_cache.UserCache.get_id_for_email"]], "get_id_for_name() (pyatlan.cache.user_cache.usercache class method)": [[243, "pyatlan.cache.user_cache.UserCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.user_cache.usercache class method)": [[243, "pyatlan.cache.user_cache.UserCache.get_name_for_id"]], "validate_names() (pyatlan.cache.user_cache.usercache class method)": [[243, "pyatlan.cache.user_cache.UserCache.validate_names"]], "atlanclient (class in pyatlan.client.atlan)": [[245, "pyatlan.client.atlan.AtlanClient"]], "add_api_token_as_admin() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.add_api_token_as_admin"]], "add_api_token_as_viewer() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.add_api_token_as_viewer"]], "add_atlan_tags() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.add_atlan_tags"]], "add_user_to_groups() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.add_user_to_groups"]], "append_terms() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.append_terms"]], "change_user_role() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.change_user_role"]], "construct() (pyatlan.client.atlan.atlanclient class method)": [[245, "pyatlan.client.atlan.AtlanClient.construct"]], "copy() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.copy"]], "create_api_token() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.create_api_token"]], "create_group() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.create_group"]], "create_typedef() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.create_typedef"]], "create_users() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.create_users"]], "delete_entity_by_guid() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.delete_entity_by_guid"]], "dict() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.dict"]], "find_category_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_category_by_name"]], "find_category_fast_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_category_fast_by_name"]], "find_connections_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_connections_by_name"]], "find_glossary_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_glossary_by_name"]], "find_personas_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_personas_by_name"]], "find_purposes_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_purposes_by_name"]], "find_term_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_term_by_name"]], "find_term_fast_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.find_term_fast_by_name"]], "get_admin_events() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_admin_events"]], "get_all_groups() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_all_groups"]], "get_all_roles() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_all_roles"]], "get_all_typedefs() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_all_typedefs"]], "get_all_users() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_all_users"]], "get_api_token_by_id() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_api_token_by_id"]], "get_api_token_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_api_token_by_name"]], "get_api_tokens() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_api_tokens"]], "get_asset_by_guid() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_asset_by_guid"]], "get_asset_by_qualified_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_asset_by_qualified_name"]], "get_current_user() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_current_user"]], "get_default_client() (pyatlan.client.atlan.atlanclient class method)": [[245, "pyatlan.client.atlan.AtlanClient.get_default_client"]], "get_group_by_name() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_group_by_name"]], "get_group_members() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_group_members"]], "get_groups() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_groups"]], "get_groups_for_user() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_groups_for_user"]], "get_keycloak_events() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_keycloak_events"]], "get_lineage() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_lineage"]], "get_lineage_list() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_lineage_list"]], "get_roles() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_roles"]], "get_typedefs() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_typedefs"]], "get_user_by_username() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_user_by_username"]], "get_users() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_users"]], "get_users_by_email() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.get_users_by_email"]], "json() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.json"]], "max_retries() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.max_retries"]], "parse_query() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.parse_query"]], "purge_api_token() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.purge_api_token"]], "purge_entity_by_guid() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.purge_entity_by_guid"]], "purge_group() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.purge_group"]], "purge_typedef() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.purge_typedef"]], "remove_announcement() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.remove_announcement"]], "remove_atlan_tag() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.remove_atlan_tag"]], "remove_certificate() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.remove_certificate"]], "remove_custom_metadata() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.remove_custom_metadata"]], "remove_terms() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.remove_terms"]], "remove_users_from_group() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.remove_users_from_group"]], "replace_custom_metadata() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.replace_custom_metadata"]], "replace_terms() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.replace_terms"]], "restore() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.restore"]], "retrieve_minimal() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.retrieve_minimal"]], "save() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.save"]], "save_merging_cm() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.save_merging_cm"]], "save_replacing_cm() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.save_replacing_cm"]], "search() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.search"]], "set_default_client() (pyatlan.client.atlan.atlanclient class method)": [[245, "pyatlan.client.atlan.AtlanClient.set_default_client"]], "update_announcement() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_announcement"]], "update_api_token() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_api_token"]], "update_certificate() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_certificate"]], "update_custom_metadata_attributes() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_custom_metadata_attributes"]], "update_forward_refs() (pyatlan.client.atlan.atlanclient class method)": [[245, "pyatlan.client.atlan.AtlanClient.update_forward_refs"]], "update_group() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_group"]], "update_merging_cm() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_merging_cm"]], "update_replacing_cm() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_replacing_cm"]], "update_typedef() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_typedef"]], "update_user() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.update_user"]], "upload_image() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.upload_image"]], "upsert() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.upsert"]], "upsert_merging_cm() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.upsert_merging_cm"]], "upsert_replacing_cm() (pyatlan.client.atlan.atlanclient method)": [[245, "pyatlan.client.atlan.AtlanClient.upsert_replacing_cm"]], "atlaneventhandler (class in pyatlan.events.atlan_event_handler)": [[246, "pyatlan.events.atlan_event_handler.AtlanEventHandler"]], "calculate_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[246, "pyatlan.events.atlan_event_handler.AtlanEventHandler.calculate_changes"]], "get_current_state() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[246, "pyatlan.events.atlan_event_handler.AtlanEventHandler.get_current_state"]], "has_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[246, "pyatlan.events.atlan_event_handler.AtlanEventHandler.has_changes"]], "save_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[246, "pyatlan.events.atlan_event_handler.AtlanEventHandler.save_changes"]], "upsert_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[246, "pyatlan.events.atlan_event_handler.AtlanEventHandler.upsert_changes"]], "validate_prerequisites() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[246, "pyatlan.events.atlan_event_handler.AtlanEventHandler.validate_prerequisites"]], "apiconnectionerror": [[247, "pyatlan.errors.ApiConnectionError"]], "apierror": [[247, "pyatlan.errors.ApiError"]], "atlanerror": [[247, "pyatlan.errors.AtlanError"]], "authenticationerror": [[247, "pyatlan.errors.AuthenticationError"]], "conflicterror": [[247, "pyatlan.errors.ConflictError"]], "invalidrequesterror": [[247, "pyatlan.errors.InvalidRequestError"]], "logicerror": [[247, "pyatlan.errors.LogicError"]], "notfounderror": [[247, "pyatlan.errors.NotFoundError"]], "permissionerror": [[247, "pyatlan.errors.PermissionError"]], "ratelimiterror": [[247, "pyatlan.errors.RateLimitError"]], "booleanfield (class in pyatlan.model.fields.atlan_fields)": [[248, "pyatlan.model.fields.atlan_fields.BooleanField"]], "boolean_field_name (pyatlan.model.fields.atlan_fields.booleanfield property)": [[248, "pyatlan.model.fields.atlan_fields.BooleanField.boolean_field_name"]], "bucket_by() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[248, "pyatlan.model.fields.atlan_fields.BooleanField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[248, "pyatlan.model.fields.atlan_fields.BooleanField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[248, "pyatlan.model.fields.atlan_fields.BooleanField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.booleanfield property)": [[248, "pyatlan.model.fields.atlan_fields.BooleanField.in_lineage"]], "order() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[248, "pyatlan.model.fields.atlan_fields.BooleanField.order"]], "custommetadatafield (class in pyatlan.model.fields.atlan_fields)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField"]], "between() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.between"]], "bucket_by() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.eq"]], "gt() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.gt"]], "gte() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.gte"]], "has_any_value() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.has_any_value"]], "lt() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.lt"]], "lte() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.lte"]], "match() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.match"]], "order() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.order"]], "startswith() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.startswith"]], "within() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[249, "pyatlan.model.fields.atlan_fields.CustomMetadataField.within"]], "keywordfield (class in pyatlan.model.fields.atlan_fields)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.keywordfield property)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.in_lineage"]], "keyword_field_name (pyatlan.model.fields.atlan_fields.keywordfield property)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.keyword_field_name"]], "order() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.order"]], "regexp() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.regexp"]], "startswith() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.startswith"]], "wildcard() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.wildcard"]], "within() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[250, "pyatlan.model.fields.atlan_fields.KeywordField.within"]], "keywordtextfield (class in pyatlan.model.fields.atlan_fields)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.keywordtextfield property)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.in_lineage"]], "keyword_field_name (pyatlan.model.fields.atlan_fields.keywordtextfield property)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.keyword_field_name"]], "match() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.match"]], "order() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.order"]], "regexp() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.regexp"]], "startswith() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.startswith"]], "text_field_name (pyatlan.model.fields.atlan_fields.keywordtextfield property)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.text_field_name"]], "wildcard() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.wildcard"]], "within() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[251, "pyatlan.model.fields.atlan_fields.KeywordTextField.within"]], "keywordtextstemmedfield (class in pyatlan.model.fields.atlan_fields)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield property)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.in_lineage"]], "keyword_field_name (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield property)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.keyword_field_name"]], "match() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.match"]], "match_stemmed() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.match_stemmed"]], "order() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.order"]], "regexp() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.regexp"]], "startswith() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.startswith"]], "text_field_name (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield property)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.text_field_name"]], "wildcard() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.wildcard"]], "within() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[252, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.within"]], "numericfield (class in pyatlan.model.fields.atlan_fields)": [[253, "pyatlan.model.fields.atlan_fields.NumericField"]], "avg() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.avg"]], "between() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.between"]], "bucket_by() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.eq"]], "gt() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.gt"]], "gte() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.gte"]], "has_any_value() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.numericfield property)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.in_lineage"]], "lt() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.lt"]], "lte() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.lte"]], "max() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.max"]], "min() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.min"]], "numeric_field_name (pyatlan.model.fields.atlan_fields.numericfield property)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.numeric_field_name"]], "order() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.order"]], "sum() (pyatlan.model.fields.atlan_fields.numericfield method)": [[253, "pyatlan.model.fields.atlan_fields.NumericField.sum"]], "numericrankfield (class in pyatlan.model.fields.atlan_fields)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField"]], "avg() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.avg"]], "between() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.between"]], "bucket_by() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.eq"]], "gt() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.gt"]], "gte() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.gte"]], "has_any_value() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.numericrankfield property)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.in_lineage"]], "lt() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.lt"]], "lte() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.lte"]], "max() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.max"]], "min() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.min"]], "numeric_field_name (pyatlan.model.fields.atlan_fields.numericrankfield property)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.numeric_field_name"]], "order() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.order"]], "sum() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[254, "pyatlan.model.fields.atlan_fields.NumericRankField.sum"]], "relationfield (class in pyatlan.model.fields.atlan_fields)": [[255, "pyatlan.model.fields.atlan_fields.RelationField"]], "searchablefield (class in pyatlan.model.fields.atlan_fields)": [[256, "pyatlan.model.fields.atlan_fields.SearchableField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.searchablefield method)": [[256, "pyatlan.model.fields.atlan_fields.SearchableField.bucket_by"]], "has_any_value() (pyatlan.model.fields.atlan_fields.searchablefield method)": [[256, "pyatlan.model.fields.atlan_fields.SearchableField.has_any_value"]], "order() (pyatlan.model.fields.atlan_fields.searchablefield method)": [[256, "pyatlan.model.fields.atlan_fields.SearchableField.order"]], "textfield (class in pyatlan.model.fields.atlan_fields)": [[257, "pyatlan.model.fields.atlan_fields.TextField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.textfield method)": [[257, "pyatlan.model.fields.atlan_fields.TextField.bucket_by"]], "has_any_value() (pyatlan.model.fields.atlan_fields.textfield method)": [[257, "pyatlan.model.fields.atlan_fields.TextField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.textfield property)": [[257, "pyatlan.model.fields.atlan_fields.TextField.in_lineage"]], "match() (pyatlan.model.fields.atlan_fields.textfield method)": [[257, "pyatlan.model.fields.atlan_fields.TextField.match"]], "order() (pyatlan.model.fields.atlan_fields.textfield method)": [[257, "pyatlan.model.fields.atlan_fields.TextField.order"]], "text_field_name (pyatlan.model.fields.atlan_fields.textfield property)": [[257, "pyatlan.model.fields.atlan_fields.TextField.text_field_name"]], "atlanfield (class in pyatlan.model.fields.atlan_fields)": [[258, "pyatlan.model.fields.atlan_fields.AtlanField"]], "atlanimage (class in pyatlan.model.atlan_image)": [[260, "pyatlan.model.atlan_image.AtlanImage"]], "announcement (class in pyatlan.model.core)": [[261, "pyatlan.model.core.Announcement"]], "assetrequest (class in pyatlan.model.core)": [[261, "pyatlan.model.core.AssetRequest"]], "assetresponse (class in pyatlan.model.core)": [[261, "pyatlan.model.core.AssetResponse"]], "atlantag (class in pyatlan.model.core)": [[261, "pyatlan.model.core.AtlanTag"]], "atlantagname (class in pyatlan.model.core)": [[261, "pyatlan.model.core.AtlanTagName"]], "atlantags (class in pyatlan.model.core)": [[261, "pyatlan.model.core.AtlanTags"]], "bulkrequest (class in pyatlan.model.core)": [[261, "pyatlan.model.core.BulkRequest"]], "searchrequest (class in pyatlan.model.core)": [[261, "pyatlan.model.core.SearchRequest"]], "get_deleted_sentinel() (pyatlan.model.core.atlantagname class method)": [[261, "pyatlan.model.core.AtlanTagName.get_deleted_sentinel"]], "custommetadatadict (class in pyatlan.model.custom_metadata)": [[262, "pyatlan.model.custom_metadata.CustomMetadataDict"]], "custommetadataproxy (class in pyatlan.model.custom_metadata)": [[262, "pyatlan.model.custom_metadata.CustomMetadataProxy"]], "custommetadatarequest (class in pyatlan.model.custom_metadata)": [[262, "pyatlan.model.custom_metadata.CustomMetadataRequest"]], "business_attributes (pyatlan.model.custom_metadata.custommetadatadict property)": [[262, "pyatlan.model.custom_metadata.CustomMetadataDict.business_attributes"]], "clear_all() (pyatlan.model.custom_metadata.custommetadatadict method)": [[262, "pyatlan.model.custom_metadata.CustomMetadataDict.clear_all"]], "clear_unset() (pyatlan.model.custom_metadata.custommetadatadict method)": [[262, "pyatlan.model.custom_metadata.CustomMetadataDict.clear_unset"]], "get_deleted_sentinel() (pyatlan.model.custom_metadata.custommetadatadict class method)": [[262, "pyatlan.model.custom_metadata.CustomMetadataDict.get_deleted_sentinel"]], "is_set() (pyatlan.model.custom_metadata.custommetadatadict method)": [[262, "pyatlan.model.custom_metadata.CustomMetadataDict.is_set"]], "modified (pyatlan.model.custom_metadata.custommetadatadict property)": [[262, "pyatlan.model.custom_metadata.CustomMetadataDict.modified"]], "atlangroup (class in pyatlan.model.group)": [[263, "pyatlan.model.group.AtlanGroup"]], "adminevent (class in pyatlan.model.keycloak_events)": [[264, "pyatlan.model.keycloak_events.AdminEvent"]], "keycloakevent (class in pyatlan.model.keycloak_events)": [[264, "pyatlan.model.keycloak_events.KeycloakEvent"]], "entityfilter (class in pyatlan.model.lineage)": [[265, "pyatlan.model.lineage.EntityFilter"]], "filterlist (class in pyatlan.model.lineage)": [[265, "pyatlan.model.lineage.FilterList"]], "filterlist.condition (class in pyatlan.model.lineage)": [[265, "pyatlan.model.lineage.FilterList.Condition"]], "lineagegraph (class in pyatlan.model.lineage)": [[265, "pyatlan.model.lineage.LineageGraph"]], "lineagelistrequest (class in pyatlan.model.lineage)": [[265, "pyatlan.model.lineage.LineageListRequest"]], "lineagerequest (class in pyatlan.model.lineage)": [[265, "pyatlan.model.lineage.LineageRequest"]], "lineageresponse (class in pyatlan.model.lineage)": [[265, "pyatlan.model.lineage.LineageResponse"]], "atlanrole (class in pyatlan.model.role)": [[266, "pyatlan.model.role.AtlanRole"]], "id (pyatlan.model.role.atlanrole attribute)": [[266, "pyatlan.model.role.AtlanRole.id"]], "atlantagdef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.AtlanTagDef"]], "attributedef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.AttributeDef"]], "custommetadatadef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.CustomMetadataDef"]], "entitydef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.EntityDef"]], "enumdef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.EnumDef"]], "relationshipattributedef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.RelationshipAttributeDef"]], "relationshipdef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.RelationshipDef"]], "structdef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.StructDef"]], "typedef (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.TypeDef"]], "typedefresponse (class in pyatlan.model.typedef)": [[267, "pyatlan.model.typedef.TypeDefResponse"]], "applicable_asset_types (pyatlan.model.typedef.attributedef property)": [[267, "pyatlan.model.typedef.AttributeDef.applicable_asset_types"]], "applicable_connections (pyatlan.model.typedef.attributedef property)": [[267, "pyatlan.model.typedef.AttributeDef.applicable_connections"]], "applicable_entity_types (pyatlan.model.typedef.attributedef property)": [[267, "pyatlan.model.typedef.AttributeDef.applicable_entity_types"]], "applicable_glossaries (pyatlan.model.typedef.attributedef property)": [[267, "pyatlan.model.typedef.AttributeDef.applicable_glossaries"]], "applicable_glossary_types (pyatlan.model.typedef.attributedef property)": [[267, "pyatlan.model.typedef.AttributeDef.applicable_glossary_types"]], "applicable_other_asset_types (pyatlan.model.typedef.attributedef property)": [[267, "pyatlan.model.typedef.AttributeDef.applicable_other_asset_types"]], "create() (pyatlan.model.typedef.enumdef static method)": [[267, "pyatlan.model.typedef.EnumDef.create"]], "get_valid_values() (pyatlan.model.typedef.enumdef method)": [[267, "pyatlan.model.typedef.EnumDef.get_valid_values"]], "update() (pyatlan.model.typedef.enumdef static method)": [[267, "pyatlan.model.typedef.EnumDef.update"]], "atlanuser (class in pyatlan.model.user)": [[268, "pyatlan.model.user.AtlanUser"]]}})