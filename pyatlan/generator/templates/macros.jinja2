{%- macro gen_properties(attribute_defs, additional_names=[]) %}
    _convience_properties: ClassVar[list[str]] = [
        {%- for attribute_def in attribute_defs %}
        "{{ attribute_def.name | to_snake_case }}",
        {%- endfor %}
        {%- for name in additional_names  %}
        "{{ name }}",
         {%- endfor %}]

    {%- for attribute_def in attribute_defs %}
    {%- set type = attribute_def.typeName | get_type %}
    {%- set property_type %}{% if attribute_def.isOptional %}Optional[{% endif %}{{type}}{% if attribute_def.isOptional %}]{% endif %}{% endset %}
    {%- set property_name =  attribute_def.name | to_snake_case %}
    @property
    def {{ property_name }}(self)->{{ property_type }}:
        return self.attributes.{{ property_name }}

    @{{ property_name }}.setter
    def {{ property_name }}(self, {{ property_name }}:{{ property_type }}):
        if self.attributes is None:
            self.attributes = self.Attributes()
        self.attributes.{{ property_name }} = {{ property_name }}

    {%- endfor %}
{% endmacro %}
