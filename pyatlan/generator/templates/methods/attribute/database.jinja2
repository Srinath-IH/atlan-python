
        @classmethod
        # @validate_arguments()
        def create(cls, name: str, connection_qualified_name: str)->{{ entity_def.name }}.Attributes:
            validate_required_fields(["name, connection_qualified_name"], [name, connection_qualified_name])
            fields = connection_qualified_name.split("/")
            if len(fields) != 3:
                raise ValueError("Invalid connection_qualified_name")
            try:
                connector_type = AtlanConnectorType(fields[1]) # type:ignore
            except ValueError as e:
                raise ValueError("Invalid connection_qualified_name") from e
            return Database.Attributes(
                name=name,
                connection_qualified_name=connection_qualified_name,
                qualified_name=f"{connection_qualified_name}/{name}",
                connector_name=connector_type.value,
            )
