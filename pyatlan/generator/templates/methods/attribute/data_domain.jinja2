
        @classmethod
        @init_guid
        def create(
            cls,
            *,
            name: StrictStr,
            parent_domain_qualified_name: Optional[StrictStr] = None,
        ) -> DataDomain.Attributes:
            validate_required_fields(["name"], [name])
            parent_domain = None
            mesh_name = to_camel_case(name)
            qualified_name = f"default/domain/{mesh_name}"

            # In case of sub-domain
            if parent_domain_qualified_name:
                parent_domain = DataDomain.ref_by_qualified_name(
                    parent_domain_qualified_name
                )
                qualified_name = f"{parent_domain_qualified_name}/domain/{mesh_name}"

            return DataDomain.Attributes(
                name=name,
                qualified_name=qualified_name,
                parent_domain=parent_domain,
                parent_domain_qualified_name=parent_domain_qualified_name,
            )
