# Copyright 2022 Atlan Pte. Ltd.
# isort: skip_file
from .referenceable import Referenceable
from .asset import Asset
from .data_set import DataSet
from .tag_attachment import TagAttachment
from .connection import Connection
from .process import Process
from .atlas_glossary_category import AtlasGlossaryCategory
from .badge import Badge
from .access_control import AccessControl
from .namespace import Namespace
from .catalog import Catalog
from .atlas_glossary import AtlasGlossary
from .auth_policy import AuthPolicy
from .process_execution import ProcessExecution
from .atlas_glossary_term import AtlasGlossaryTerm
from .auth_service import AuthService
from .cloud import Cloud
from .infrastructure import Infrastructure
from .b_i_process import BIProcess
from .dbt_process import DbtProcess
from .column_process import ColumnProcess
from .persona import Persona
from .purpose import Purpose
from .collection import Collection
from .folder import Folder
from .airflow import Airflow
from .object_store import ObjectStore
from .data_quality import DataQuality
from .b_i import BI
from .saa_s import SaaS
from .resource import Resource
from .data_mesh import DataMesh
from .s_q_l import SQL
from .event_store import EventStore
from .no_s_q_l import NoSQL
from .matillion import Matillion
from .dbt import Dbt
from .insight import Insight
from .a_p_i import API
from .tag import Tag
from .schema_registry import SchemaRegistry
from .google import Google
from .azure import Azure
from .a_w_s import AWS
from .dbt_column_process import DbtColumnProcess
from .airflow_dag import AirflowDag
from .airflow_task import AirflowTask
from .s3 import S3
from .a_d_l_s import ADLS
from .g_c_s import GCS
from .monte_carlo import MonteCarlo
from .metric import Metric
from .soda import Soda
from .preset import Preset
from .mode import Mode
from .sigma import Sigma
from .tableau import Tableau
from .looker import Looker
from .redash import Redash
from .sisense import Sisense
from .data_studio import DataStudio
from .metabase import Metabase
from .quick_sight import QuickSight
from .thoughtspot import Thoughtspot
from .power_b_i import PowerBI
from .micro_strategy import MicroStrategy
from .qlik import Qlik
from .salesforce import Salesforce
from .readme_template import ReadmeTemplate
from .readme import Readme
from .file import File
from .link import Link
from .data_domain import DataDomain
from .data_product import DataProduct
from .table import Table
from .query import Query
from .schema import Schema
from .snowflake_pipe import SnowflakePipe
from .view import View
from .materialised_view import MaterialisedView
from .function import Function
from .table_partition import TablePartition
from .column import Column
from .snowflake_stream import SnowflakeStream
from .database import Database
from .procedure import Procedure
from .snowflake_tag import SnowflakeTag
from .kafka import Kafka
from .dynamo_d_b import DynamoDB
from .mongo_d_b import MongoDB
from .matillion_group import MatillionGroup
from .matillion_job import MatillionJob
from .matillion_project import MatillionProject
from .matillion_component import MatillionComponent
from .dbt_model_column import DbtModelColumn
from .dbt_tag import DbtTag
from .dbt_test import DbtTest
from .dbt_model import DbtModel
from .dbt_metric import DbtMetric
from .dbt_source import DbtSource
from .a_p_i_spec import APISpec
from .a_p_i_path import APIPath
from .schema_registry_subject import SchemaRegistrySubject
from .data_studio_asset import DataStudioAsset
from .s3_bucket import S3Bucket
from .s3_object import S3Object
from .a_d_l_s_account import ADLSAccount
from .a_d_l_s_container import ADLSContainer
from .a_d_l_s_object import ADLSObject
from .g_c_s_object import GCSObject
from .g_c_s_bucket import GCSBucket
from .m_c_incident import MCIncident
from .m_c_monitor import MCMonitor
from .soda_check import SodaCheck
from .preset_chart import PresetChart
from .preset_dataset import PresetDataset
from .preset_dashboard import PresetDashboard
from .preset_workspace import PresetWorkspace
from .mode_report import ModeReport
from .mode_query import ModeQuery
from .mode_chart import ModeChart
from .mode_workspace import ModeWorkspace
from .mode_collection import ModeCollection
from .sigma_dataset_column import SigmaDatasetColumn
from .sigma_dataset import SigmaDataset
from .sigma_workbook import SigmaWorkbook
from .sigma_data_element_field import SigmaDataElementField
from .sigma_page import SigmaPage
from .sigma_data_element import SigmaDataElement
from .tableau_workbook import TableauWorkbook
from .tableau_datasource_field import TableauDatasourceField
from .tableau_calculated_field import TableauCalculatedField
from .tableau_project import TableauProject
from .tableau_metric import TableauMetric
from .tableau_site import TableauSite
from .tableau_datasource import TableauDatasource
from .tableau_dashboard import TableauDashboard
from .tableau_flow import TableauFlow
from .tableau_worksheet import TableauWorksheet
from .looker_look import LookerLook
from .looker_dashboard import LookerDashboard
from .looker_folder import LookerFolder
from .looker_tile import LookerTile
from .looker_model import LookerModel
from .looker_explore import LookerExplore
from .looker_project import LookerProject
from .looker_query import LookerQuery
from .looker_field import LookerField
from .looker_view import LookerView
from .redash_dashboard import RedashDashboard
from .redash_query import RedashQuery
from .redash_visualization import RedashVisualization
from .sisense_folder import SisenseFolder
from .sisense_widget import SisenseWidget
from .sisense_datamodel import SisenseDatamodel
from .sisense_datamodel_table import SisenseDatamodelTable
from .sisense_dashboard import SisenseDashboard
from .metabase_question import MetabaseQuestion
from .metabase_collection import MetabaseCollection
from .metabase_dashboard import MetabaseDashboard
from .quick_sight_folder import QuickSightFolder
from .quick_sight_dashboard_visual import QuickSightDashboardVisual
from .quick_sight_analysis_visual import QuickSightAnalysisVisual
from .quick_sight_dataset_field import QuickSightDatasetField
from .quick_sight_analysis import QuickSightAnalysis
from .quick_sight_dashboard import QuickSightDashboard
from .quick_sight_dataset import QuickSightDataset
from .thoughtspot_liveboard import ThoughtspotLiveboard
from .thoughtspot_dashlet import ThoughtspotDashlet
from .thoughtspot_answer import ThoughtspotAnswer
from .power_b_i_report import PowerBIReport
from .power_b_i_measure import PowerBIMeasure
from .power_b_i_column import PowerBIColumn
from .power_b_i_table import PowerBITable
from .power_b_i_tile import PowerBITile
from .power_b_i_datasource import PowerBIDatasource
from .power_b_i_workspace import PowerBIWorkspace
from .power_b_i_dataset import PowerBIDataset
from .power_b_i_dashboard import PowerBIDashboard
from .power_b_i_dataflow import PowerBIDataflow
from .power_b_i_page import PowerBIPage
from .micro_strategy_report import MicroStrategyReport
from .micro_strategy_project import MicroStrategyProject
from .micro_strategy_metric import MicroStrategyMetric
from .micro_strategy_cube import MicroStrategyCube
from .micro_strategy_dossier import MicroStrategyDossier
from .micro_strategy_fact import MicroStrategyFact
from .micro_strategy_document import MicroStrategyDocument
from .micro_strategy_attribute import MicroStrategyAttribute
from .micro_strategy_visualization import MicroStrategyVisualization
from .qlik_space import QlikSpace
from .qlik_app import QlikApp
from .qlik_chart import QlikChart
from .qlik_dataset import QlikDataset
from .qlik_sheet import QlikSheet
from .salesforce_object import SalesforceObject
from .salesforce_field import SalesforceField
from .salesforce_organization import SalesforceOrganization
from .salesforce_dashboard import SalesforceDashboard
from .salesforce_report import SalesforceReport
from .snowflake_dynamic_table import SnowflakeDynamicTable
from .mongo_d_b_collection import MongoDBCollection
from .dynamo_d_b_secondary_index import DynamoDBSecondaryIndex
from .dynamo_dbtable import DynamoDBTable
from .mongo_d_b_database import MongoDBDatabase
from .kafka_topic import KafkaTopic
from .kafka_consumer_group import KafkaConsumerGroup
from .qlik_stream import QlikStream
from .dynamo_d_b_local_secondary_index import DynamoDBLocalSecondaryIndex
from .dynamo_d_b_global_secondary_index import DynamoDBGlobalSecondaryIndex
from .azure_event_hub import AzureEventHub
from .azure_event_hub_consumer_group import AzureEventHubConsumerGroup


# Update asset forward references:
Referenceable.Attributes.update_forward_refs(**dict())
Asset.Attributes.update_forward_refs(**dict())
DataSet.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TagAttachment.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Connection.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Process.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AtlasGlossaryCategory.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Badge.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AccessControl.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Namespace.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Catalog.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AtlasGlossary.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AuthPolicy.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ProcessExecution.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AtlasGlossaryTerm.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AuthService.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Cloud.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Infrastructure.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
BIProcess.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        Catalog=Catalog,
        MCMonitor=MCMonitor,
        MatillionComponent=MatillionComponent,
        Link=Link,
        Readme=Readme,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        ColumnProcess=ColumnProcess,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtProcess.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        Catalog=Catalog,
        MCMonitor=MCMonitor,
        MatillionComponent=MatillionComponent,
        Link=Link,
        Readme=Readme,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        ColumnProcess=ColumnProcess,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        Process=Process,
    )
)
ColumnProcess.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        Catalog=Catalog,
        MCMonitor=MCMonitor,
        MatillionComponent=MatillionComponent,
        Link=Link,
        Readme=Readme,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Persona.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        AuthPolicy=AuthPolicy,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Purpose.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        AuthPolicy=AuthPolicy,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Collection.Attributes.update_forward_refs(
    **dict(
        Folder=Folder,
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Query=Query,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Folder.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Query=Query,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Airflow.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ObjectStore.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DataQuality.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
BI.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SaaS.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Resource.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DataMesh.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SQL.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
EventStore.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
NoSQL.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Matillion.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Dbt.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Insight.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
API.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Tag.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SchemaRegistry.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Google.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Azure.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AWS.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtColumnProcess.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AirflowDag.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AirflowTask.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
S3.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ADLS.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
GCS.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MonteCarlo.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Metric.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Soda.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Preset.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Mode.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Sigma.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Tableau.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Looker.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Redash.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Sisense.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DataStudio.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Metabase.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSight.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Thoughtspot.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBI.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategy.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Qlik.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Salesforce.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ReadmeTemplate.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Readme.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
File.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Link.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DataDomain.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DataProduct.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Table.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
Query.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
Schema.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
SnowflakePipe.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
View.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
MaterialisedView.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
Function.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
TablePartition.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
Column.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
SnowflakeStream.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
Database.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
Procedure.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        SodaCheck=SodaCheck,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        SchemaRegistrySubject=SchemaRegistrySubject,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
SnowflakeTag.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
Kafka.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DynamoDB.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MongoDB.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MatillionGroup.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MatillionJob.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MatillionProject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MatillionComponent.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtModelColumn.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtTag.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtTest.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtModel.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtMetric.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DbtSource.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
APISpec.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
APIPath.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SchemaRegistrySubject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SodaCheck=SodaCheck,
    )
)
DataStudioAsset.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        Process=Process,
        AirflowTask=AirflowTask,
    )
)
S3Bucket.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
S3Object.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ADLSAccount.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ADLSContainer.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ADLSObject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
GCSObject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
GCSBucket.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MCIncident.Attributes.update_forward_refs(
    **dict(
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MCMonitor.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SodaCheck.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
    )
)
PresetChart.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PresetDataset.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PresetDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PresetWorkspace.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ModeReport.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ModeQuery.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ModeChart.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ModeWorkspace.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ModeCollection.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SigmaDatasetColumn.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SigmaDataset.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SigmaWorkbook.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SigmaDataElementField.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SigmaPage.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SigmaDataElement.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauWorkbook.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauDatasourceField.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauCalculatedField.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauProject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauMetric.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauSite.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauDatasource.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauFlow.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
TableauWorksheet.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerLook.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerFolder.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerTile.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerModel.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerExplore.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerProject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerQuery.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerField.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
LookerView.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
RedashDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
RedashQuery.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
RedashVisualization.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SisenseFolder.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SisenseWidget.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SisenseDatamodel.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SisenseDatamodelTable.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SisenseDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MetabaseQuestion.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MetabaseCollection.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MetabaseDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSightFolder.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSightDashboardVisual.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSightAnalysisVisual.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSightDatasetField.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSightAnalysis.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSightDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QuickSightDataset.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ThoughtspotLiveboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ThoughtspotDashlet.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
ThoughtspotAnswer.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIReport.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIMeasure.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIColumn.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBITable.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBITile.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIDatasource.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIWorkspace.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIDataset.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIDataflow.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
PowerBIPage.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyReport.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyProject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyMetric.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyCube.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyDossier.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyFact.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyDocument.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyAttribute.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
MicroStrategyVisualization.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QlikSpace.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QlikApp.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QlikChart.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QlikDataset.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QlikSheet.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SalesforceObject.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SalesforceField.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SalesforceOrganization.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SalesforceDashboard.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SalesforceReport.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
SnowflakeDynamicTable.Attributes.update_forward_refs(
    **dict(
        Link=Link,
        AirflowTask=AirflowTask,
        File=File,
        SchemaRegistrySubject=SchemaRegistrySubject,
        MCIncident=MCIncident,
        MCMonitor=MCMonitor,
        Column=Column,
        Readme=Readme,
        Query=Query,
        DataProduct=DataProduct,
        Schema=Schema,
        Process=Process,
        TablePartition=TablePartition,
        DbtTest=DbtTest,
        SodaCheck=SodaCheck,
        Metric=Metric,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        DbtModel=DbtModel,
        DbtSource=DbtSource,
    )
)
MongoDBCollection.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        DbtSource=DbtSource,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        Column=Column,
        Schema=Schema,
        TablePartition=TablePartition,
        Query=Query,
    )
)
DynamoDBSecondaryIndex.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        DbtSource=DbtSource,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        Column=Column,
        Schema=Schema,
        TablePartition=TablePartition,
        Query=Query,
    )
)
DynamoDBTable.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        DbtSource=DbtSource,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        Column=Column,
        Schema=Schema,
        TablePartition=TablePartition,
        Query=Query,
    )
)
MongoDBDatabase.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        DbtSource=DbtSource,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        Column=Column,
        Schema=Schema,
        TablePartition=TablePartition,
        Query=Query,
    )
)
KafkaTopic.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
KafkaConsumerGroup.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
QlikStream.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        QlikDataset=QlikDataset,
        QlikApp=QlikApp,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
DynamoDBLocalSecondaryIndex.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        DbtSource=DbtSource,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        Column=Column,
        Schema=Schema,
        TablePartition=TablePartition,
        Query=Query,
    )
)
DynamoDBGlobalSecondaryIndex.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
        DbtSource=DbtSource,
        DbtTest=DbtTest,
        DbtModel=DbtModel,
        Column=Column,
        Schema=Schema,
        TablePartition=TablePartition,
        Query=Query,
    )
)
AzureEventHub.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        KafkaConsumerGroup=KafkaConsumerGroup,
        Process=Process,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
AzureEventHubConsumerGroup.Attributes.update_forward_refs(
    **dict(
        MCIncident=MCIncident,
        Metric=Metric,
        MCMonitor=MCMonitor,
        Link=Link,
        Readme=Readme,
        Process=Process,
        KafkaTopic=KafkaTopic,
        AirflowTask=AirflowTask,
        DataProduct=DataProduct,
        File=File,
        AtlasGlossaryTerm=AtlasGlossaryTerm,
        SchemaRegistrySubject=SchemaRegistrySubject,
        SodaCheck=SodaCheck,
    )
)
